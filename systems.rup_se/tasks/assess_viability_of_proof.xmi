<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_94FDEN0MEdmhp5PapAYf4w" name="assess_viability_of_proof,{2E8AA56F-BE8D-4CE9-8A91-82A81A09487B}" guid="_94FDEN0MEdmhp5PapAYf4w" changeDate="2005-11-14T14:02:22.971-0800" version="7.1.0">
  <sections xmi:id="_AXz04N0NEdmhp5PapAYf4w" name=" Determine evaluation criteria " guid="_AXz04N0NEdmhp5PapAYf4w">
    <sectionDescription>&lt;a id=&quot;Determine Evaluation Criteria&quot; name=&quot;Determine Evaluation Criteria&quot;>&lt;/a>&#xD;
&lt;p>&#xD;
    The criteria against which the System Architecture Proof-of-Concept is to be evaluated are drawn from the&#xD;
    architecturally significant requirements, which were the drivers in its construction. This is analogous to the&#xD;
    construction of system test cases that occurs in later phases. The evaluation criteria can be quite narrowly defined,&#xD;
    depending on the risk to be elucidated. For example, if the system had a requirement for unprecedented thermal&#xD;
    resistance, but was otherwise unexceptional, the System Architecture Proof-of-Concept and the evaluation criteria might&#xD;
    focus exclusively on the shielding or refrigeration aspects of the solution.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_AX57gN0NEdmhp5PapAYf4w" name=" Evaluate Architectural Proof-of-Concept " guid="_AX57gN0NEdmhp5PapAYf4w">
    <sectionDescription>&lt;a id=&quot;Evaluate Architectural Proof-of-Concept&quot; name=&quot;Evaluate Architectural Proof-of-Concept&quot;>&lt;/a>&#xD;
&lt;p>&#xD;
    In this step, the System Architecture Proof-of-Concept is tested against the evaluation criteria: the way in which this&#xD;
    is done depends on the form of the proof-of-concept. For example, in the case of a working physical model or prototype,&#xD;
    this can be through demonstration and test; in the case of a conceptual model, through inspection and reasoning; or,&#xD;
    for a simulation, requiring the set-up and running of the simulation model with input data derived from the evaluation&#xD;
    criteria, then through the collection and analysis of output data from the model.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_AX57gd0NEdmhp5PapAYf4w" name=" Assess results " guid="_AX57gd0NEdmhp5PapAYf4w">
    <sectionDescription>&lt;a id=&quot;Assess Results&quot; name=&quot;Assess Results&quot;>&lt;/a>&#xD;
&lt;p>&#xD;
    Assessment of the results from the evaluation determine not only if the architecturally significant requirements can be&#xD;
    satisfied, but also check the validity of those requirements. At this time in the development, requirements are still&#xD;
    mutable, and not necessarily well-understood by the stakeholders; for example, perhaps the opportunity exists to relax&#xD;
    requirements that were shown to be high-risk by the evaluation of the System Architecture Proof-of-Concept. All these&#xD;
    avenues need be thoroughly explored in assessing the results. This approach contrasts with the situation later in&#xD;
    elaboration and construction, when there is much greater reluctance to change or reinterpret requirements. After the&#xD;
    assessment, with a better understanding of scope and feasibility by all stakeholders, change proposals to the Business&#xD;
    Case, Vision, and Risk List are prepared, if necessary.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <purpose>To evaluate the synthesized System Architecture Proof-of-Concept to determine whether the critical architectural&#xD;
requirements are feasible and can be met (by this or any other solution).</purpose>
</org.eclipse.epf.uma:TaskDescription>
