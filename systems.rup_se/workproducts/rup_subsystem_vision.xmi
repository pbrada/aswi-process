<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_98wuwN0MEdmhp5PapAYf4w" name="rup_subsystem_vision,{892CEA8C-66C5-468C-8188-F739B3954B90}" guid="_98wuwN0MEdmhp5PapAYf4w" version="7.1.0">
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The Vision document provides a high-level, sometimes contractual, basis for the more detailed technical requirements.&#xD;
    There can also be a formal requirements specification. The Vision captures very high-level requirements and design&#xD;
    constraints to give the reader an understanding of the behavior and capabilities of the&amp;nbsp;system to be developed,&#xD;
    and the justification and rationale for change. It provides input to the project-approval process and is, therefore,&#xD;
    intimately related to the Business Case. It communicates the fundamental &quot;why and what&quot; related to the project and is a&#xD;
    gauge against which all future decisions need to be validated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Managers, funding authorities, analysts, engineers, and developers in general read the Vision document..&#xD;
&lt;/p></purpose>
  <representationOptions>UML Representation: &lt;br />&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Tailor as necessary for your project's needs.&amp;nbsp;It is generally good practice to keep the Vision brief in order to&#xD;
    be able to release it to stakeholders as soon as possible, and to make it easy for stakeholders to review and absorb.&#xD;
    This is done by including only the most important stakeholder requests, features and operational scenarios, and&#xD;
    avoiding detailed requirements. Details can be captured in the other requirements artifacts, or in appendices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Decide whether feature attributes are documented here or in the Requirements Management Plan. Decide what information&#xD;
    (attributes) to include in the Vision, and which to manage using requirements management tools, such as Rational&#xD;
    RequisitePro (see &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/toolmentors/develop_vision_tm_856E2B43.html&quot;&#xD;
    guid=&quot;{29BC529A-4416-45C0-9633-B05F1A9EF2CB}&quot;>Tool Mentor: Developing a Vision using Rational RequisitePro&amp;reg;)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Additional Information&quot; name=&quot;Additional Information&quot;>Additional Information&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The project vision is meant to be changeable as the understanding of requirements, architecture, plans, and technology&#xD;
    evolves. However, it must change slowly and normally only during the earlier portion of the lifecycle. If the vision&#xD;
    remains volatile, it is difficult to stabilize the architecture and difficult to make good schedule predictions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is important to express the vision in terms of its use cases and primary scenarios as these are developed, so that&#xD;
    you can see how the vision is realized by the use cases. The use cases also provide an effective basis for evolving a&#xD;
    test case suite.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The embryonic vision is developed outside the project, so the original author could be anyone; once the project is&#xD;
    established, however, the vision becomes the responsibility of the System Analyst.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another name for this document is the &quot;Product Requirement Document.&quot;&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;systemsengineering&quot;>&#xD;
    In the system engineering context, the Vision also fulfills the role of the operational concept document.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;systemsengineering&quot;>&#xD;
    &lt;br />&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
