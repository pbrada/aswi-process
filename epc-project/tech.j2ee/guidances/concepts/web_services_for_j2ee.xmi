<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_C7-2IdwuEdmRU7lXzo6lKQ" name="web_services_for_j2ee,1.2274284020937826E-305" guid="_C7-2IdwuEdmRU7lXzo6lKQ" changeDate="2005-10-25T14:36:44.641-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    What is a J2EE Web Service?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A Web Service is organized around an architecture containing three main elements: the Service Registry, the Service&#xD;
    Provider, and the Service Requester. Figure 1 gives an overview of the relationship between these different elements.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;339&quot; alt=&quot;web service architecture&quot; src=&quot;resources/service_arch.gif&quot; width=&quot;487&quot; />&lt;br />&#xD;
     Figure 1: &lt;s>-&lt;/s> Web Service architecture&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Service Provider starts by defining the Service Interface through an abstract Service Description document using&#xD;
    the Web Services Description Language (WSDL). This abstract description is associated to transport and encoding&#xD;
    bindings, and to an address in a concrete Service Description to define a concrete Service instance also called&#xD;
    &lt;i>Service Endpoint&lt;/i> or &lt;i>Port&lt;/i>. This concrete description can then be published in a Service Registry such as&#xD;
    Universal Description, Discovery and Integration (UDDI) to be accessed by any Service Requester. A Service Requester&#xD;
    will use it to select and use a concrete Service Implementation for the Web Service.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A J2EE Web Service consists in a set of such Ports operating within a container. The container mediates access to the&#xD;
    service and provides the runtime environment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A client of a Web Service can be another Web service, any J2EE component, or an arbitrary Java application. Even&#xD;
    non-java or non-Web applications can use Web services.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Web Service Client View&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Web Service client view is provided by the Port Provider (Service Provider) and by the container. As shown in the&#xD;
    Figure 2 below (in gray), the client view comprises a Service Interface and a Service Endpoint Interface.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;217&quot; alt=&quot;view of web service client&quot; src=&quot;resources/client_view.gif&quot; width=&quot;487&quot; />&lt;br />&#xD;
     Figure 2: &lt;s>-&lt;/s> Web Service client view&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    To access a Port of a Web Service, the client starts by locating the Service Interface using the JNDI APIs. Through the&#xD;
    Service Interface, the client will discover the methods to use to access a Port and access the Web Service&#xD;
    implementation using the Service Endpoint Interface. In the client view a Port is considered as a stateless object.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    The Service and Service Endpoint Interfaces are defined by the JAX-RPC specification; however, the Service Interface&#xD;
    behavior is defined by the WSDL Service Description document provided by the Web Service Provider.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Web Service Server View&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The server view of a Web Service deals with the implementation of the business logic of the service. As defined in J2EE&#xD;
    1.4, Web Service Endpoint can be implemented using one of the following approaches:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Using a stateless session bean as specified in the &lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=109&quot;&#xD;
        target=&quot;_blank&quot;>JSR 109&lt;/a> and &lt;a href=&quot;http://java.sun.com/products/ejb/docs.html&quot; target=&quot;_blank&quot;>EJB&#xD;
        2.1&lt;/a>&amp;nbsp;specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Using a servlet as specified in &lt;a href=&quot;http://java.sun.com/webservices/jaxrpc/index.jsp&quot;&#xD;
        target=&quot;_blank&quot;>JAX-RPC&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For more information on this two approaches, see &lt;b>&lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/identifying_session_beans_5E45D5DA.html&quot;&#xD;
    guid=&quot;6.241144674389355E-307&quot;>Guideline: Identifying Session Beans&lt;/a>&lt;/b> for session bean-based endpoint, and &lt;b>&lt;a&#xD;
    class=&quot;elementlinkwithtype&quot; href=&quot;./../../../tech.j2ee/guidances/guidelines/identifying_servlets_951FE427.html&quot;&#xD;
    guid=&quot;6.749276633239724E-306&quot;>Guideline: Identifying Servlets&lt;/a>&lt;/b> for servlet-based endpoint.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Reference&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The main reference for this page is the&amp;nbsp;&lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=109&quot; target=&quot;_blank&quot;>Web&#xD;
    Services for J2EE (JSR 109) specification&lt;/a>.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
