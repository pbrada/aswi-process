<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_D1LvANwuEdmRU7lXzo6lKQ" name="designing_entity_beans,5.953653009453999E-307" guid="_D1LvANwuEdmRU7lXzo6lKQ" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This guideline focuses on designing entity beans. Additional guidance on entity beans, such as how to identify and&#xD;
    model them, is provided by &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/entity_bean_E721D57E.html&quot;&#xD;
    guid=&quot;4.528918585369678E-307&quot;>Guideline: Entity Bean&lt;/a>. General guidance on EJBs is provided by &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/enterprise_javabean_ejb_7F0C3AFF.html&quot;&#xD;
    guid=&quot;1.5078998518719443E-305&quot;>Guideline: Enterprise JavaBean (EJB)&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Persistent_Attributes_and_Primary_Key&quot; name=&quot;Persistent_Attributes_and_Primary_Key&quot;>&lt;/a>Persistent Attributes&#xD;
    and Primary Key&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Identify the persistent attributes and the primary key of the entity bean.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Bean_managed_vs_Container_managed_Persistence&quot;&#xD;
    name=&quot;Bean_managed_vs_Container_managed_Persistence&quot;>&lt;/a>Bean-managed Persistence (BMP) vs. Container-managed&#xD;
    Persistence (CMP)&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/concepts/java_2_platform_enterprise_edition_j2ee_overview_9A95BA45.html&quot;&#xD;
    guid=&quot;1.527482214591853E-307&quot;>Concept: Java 2 Platform Enterprise Edition (J2EE) Overview&lt;/a> for a description of&#xD;
    these two approaches to persistency.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In general, container-managed persistence requires less and simpler code than bean-managed persistence. However, if&#xD;
    performance is critical or more control over the logical to database mapping is required, then you might need to use&#xD;
    bean-managed persistence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If your EJB container doesn't have the level of support that you require, you may wish to consider using a third-party,&#xD;
    object-relational mapping tool, either with bean-managed persistence or, if the tool is integrated with your container,&#xD;
    with container-managed persistence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you decide to use container-managed persistence and there is a a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_data_model_65B46980.html&quot; guid=&quot;{9DCF1723-1A21-4F48-BEDE-DBC543489682}&quot;>Data&#xD;
    Model&lt;/a>, you can map the CMP entity EJB's to database tables in the Data Model. This mapping will ultimately be&#xD;
    reflected in the deployment descriptor of the EJB modules. For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/assembling_j2ee_modules_17925A58.html&quot;&#xD;
    guid=&quot;3.7932077950837037E-305&quot;>Guideline: Assembling J2EE Modules&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you decide to use bean-managed persistence, encapsulate all database access within a Data Access Object (DAO) class.&#xD;
    This is just a Java class that hides and encapsulates the underlying storage mechanism, and isolates changes when, and&#xD;
    if, the interface to the data source changes. Even if the data source is expected to always be an RDBMS, there could be&#xD;
    subtle differences in SQL syntax and format that will benefit from being isolated in a DAO class. See &lt;i>Core J2EE&#xD;
    Patterns - Data Access Object Pattern&lt;/i> ([&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/supportingmaterials/java_references_110189E3.html#ALU01&quot;&#xD;
    guid=&quot;1.4494927535802764E-304&quot;>ALU01&lt;/a>].&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
