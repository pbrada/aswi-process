<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_C8jd4twuEdmRU7lXzo6lKQ" name="architectural_analysis_for_j2ee_applications,4.041153751920514E-305" guid="_C8jd4twuEdmRU7lXzo6lKQ" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/tasks/architectural_analysis_2B9BE03.html&quot;&#xD;
    guid=&quot;{8CB48402-D4C5-4E17-BB33-507315CB1BBF}&quot;>Architectural Analysis&lt;/a> is where the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/roles/rup_software_architect_DB0BF177.html&quot; guid=&quot;{4AC346F0-E6FC-4D2C-8410-2EDF8DDDC91D}&quot;>Software&#xD;
    Architect&lt;/a> determines how to best leverage the technologies provided by the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/concepts/java_2_platform_enterprise_edition_j2ee_overview_9A95BA45.html&quot;&#xD;
    guid=&quot;1.527482214591853E-307&quot;>Java 2 Platform Enterprise Edition (J2EE) Overview&lt;/a> to meet both the functional and&#xD;
    nonfunctional requirements of the system. This guideline discusses some of those technologies.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;J2EE_Deployment_Configurations&quot; name=&quot;J2EE_Deployment_Configurations&quot;>&lt;/a>J2EE Deployment Configurations&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    J2EE supports a number of &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/concepts/j2ee_deployment_configurations_C0F819AF.html&quot;&#xD;
    guid=&quot;7.671163061311939E-306&quot;>J2EE Deployment Configurations&lt;/a>.&amp;nbsp;Selecting&amp;nbsp;a particular deployment&#xD;
    configuration is an important step in Architectural Analysis as it becomes the foundation on which the initial&#xD;
    architecture is based.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Selecting a J2EE deployment configuration drives the definition of the initial &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_deployment_model_57DF1DF5.html&quot;&#xD;
    guid=&quot;{5981B6BE-2FD1-4984-AA94-2F7428439BA6}&quot;>Deployment Model&lt;/a>.&amp;nbsp;The selected J2EE deployment configuration&#xD;
    defines the configuration of physical nodes (that is, machines) and logical nodes (&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/concepts/java_2_platform_enterprise_edition_j2ee_overview_9A95BA45.html&quot;&#xD;
    guid=&quot;1.527482214591853E-307&quot;>J2EE containers&lt;/a>).&amp;nbsp;This is where you decide whether or not you have a separate&#xD;
    Web server and an EJB server, and whether your clients are browsers using HTTP or are fat application clients.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each of these deployment configurations exhibits different characteristics, so one should be selected based upon a&#xD;
    number of factors. Some factors that should be considered when selecting a deployment configuration include:&#xD;
    maintainability (how do you isolate changes in one tier so they don't affect other tiers, how easy is it to deploy&#xD;
    upgrades?), performance and scalability (how easy is it to add additional computing resources?), and reliability (what&#xD;
    happens if one of the resources goes down?).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The selection of a deployment configuration constrains a number of other architectural decisions regarding the&#xD;
    architectural mechanisms that must be defined, the application's concurrency (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/tasks/describe_runtime_architecture_2F8E190.html&quot;&#xD;
    guid=&quot;{4D35C038-A2D0-48B8-9ECD-52717FEAE33A}&quot;>Task: Describe the Run-time Architecture&lt;/a>), and the application's&#xD;
    distribution (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/tasks/describe_distribution_9BA1477C.html&quot;&#xD;
    guid=&quot;{6A112808-0A90-427A-BAB9-E14F3FBF72B5}&quot;>Task: Describe Distribution&lt;/a>).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;J2EE_Mechanisms&quot; name=&quot;J2EE_Mechanisms&quot;>&lt;/a>J2EE Mechanisms&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/concepts/java_2_platform_enterprise_edition_j2ee_overview_9A95BA45.html&quot;&#xD;
    guid=&quot;1.527482214591853E-307&quot;>Java 2 Platform Enterprise Edition (J2EE) Overview&lt;/a> provides a number of mechanisms&#xD;
    that support the development of multi-tier enterprise systems (persistency, inter-process communication, transaction&#xD;
    management, security, etc.).&amp;nbsp;During Architectural Analysis, the Software Architect defines what needs to be built,&#xD;
    as opposed to what will be provided by the J2EE platform.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Effective management of application state is an important aspect of designing distributed applications. For an overview&#xD;
    of some of the common design considerations and mechanisms for state management in a J2EE application, see &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/designing_state_for_j2ee_applications_C145BCA3.html&quot;&#xD;
    guid=&quot;7.896195949843941E-306&quot;>Guideline: Designing State for J2EE Applications&lt;/a>.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
