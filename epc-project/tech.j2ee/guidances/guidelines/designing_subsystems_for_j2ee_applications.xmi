<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_C9B_A9wuEdmRU7lXzo6lKQ" name="designing_subsystems_for_j2ee_applications,7.612097453921368E-307" guid="_C9B_A9wuEdmRU7lXzo6lKQ" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    These guidelines supplement &lt;a href=&quot;./../../../core.base_rup/guidances/guidelines/design_subsystem_B26FD609.html&quot;&#xD;
    guid=&quot;1.2314266786534317E-305&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Design Subsystem&lt;/a> with guidance specific to&#xD;
    J2EE application development. We recommend you read Guidelines: Design Subsystem prior to reading these J2EE-specific&#xD;
    guidelines. These guidelines apply to design subsystems of larger granularity than individual EJBs. For guidelines on&#xD;
    EJBs, refer to &lt;a href=&quot;./../../../tech.j2ee/guidances/guidelines/enterprise_javabean_ejb_7F0C3AFF.html&quot;&#xD;
    guid=&quot;1.5078998518719443E-305&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Enterprise JavaBean (EJB)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note also that an Application Client is considered to be a specialized Design Subsystem. See &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/j2ee_application_client_3499CC99.html&quot;&#xD;
    guid=&quot;8.333388171077014E-306&quot; class=&quot;elementlinkwithtype&quot;>Guideline: J2EE Application Client&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a name=&quot;Evolving Design Subsystems&quot; id=&quot;Evolving Design Subsystems&quot;>&lt;/a>Evolving Design Subsystems&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When a subsystem is first identified, it may initially be technology neutral. That is, it may be specified by&#xD;
    interfaces, a textual description, and some state machines that describe the expected behavior of the operations.&#xD;
    However, such technology-neutral subsystems are typically evolved to technology-specific representations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following gives an example of how a technology-neutral design subsystem is evolved to a technology-specific&#xD;
    subsystem.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Subsystem specification (Black-box view of the subsystem)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    A subsystem specification can initially be modeled as having abstract UML interfaces.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Consider the preliminary design of a Customer subsystem, shown in Figure 1.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/dsub_abstract_external.gif&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;b>&lt;font size=&quot;2&quot;>Figure 1: Preliminary Design-Customer Subsystem&lt;/font>&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    ICustomerMgt is further defined to have operations, such as &quot;getCustomerDetails&quot; and &quot;setCustomerDetails&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As the design becomes more detailed (&lt;a href=&quot;./../../../core.base_rup/tasks/subsystem_design_real-time_design_681F0256.html&quot;&#xD;
    guid=&quot;{30B2108A-294F-44EE-AC02-FFC1F70D67FF}&quot; class=&quot;elementlinkwithtype&quot;>Task: subsystem_design_real-time_design&lt;/a>),&#xD;
    these abstract interfaces are replaced by language and technology specific elements. (You can choose to maintain the&#xD;
    more abstract model of the subsystem; for example, if there's a need to implement the same design in more than one&#xD;
    language or technology. See &lt;a href=&quot;./../../../core.base_rup/guidances/concepts/mapping_from_design_to_code_D1454680.html&quot;&#xD;
    guid=&quot;1.424219730601675E-305&quot; class=&quot;elementlinkwithtype&quot;>Concept: Mapping from Design to Code&lt;/a> for a discussion of&#xD;
    these options.) The corresponding design &lt;a href=&quot;./../../../core.base_rup/workproducts/rup_use_case_realization_E4F713BD.html&quot;&#xD;
    guid=&quot;{87EB094F-095B-4981-ACC3-319B3B298641}&quot; class=&quot;elementlinkwithtype&quot;>Artifact: Use-Case Realization&lt;/a> are&#xD;
    updated to match the interface changes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In this example, Figure 2 is a black-box or specification view of the Customer subsystem. Subsequent design indicated&#xD;
    that the Customer subsystem should be an entity EJB.&amp;nbsp;The preliminary design subsystem is transformed into EJB&#xD;
    interfaces as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        ICustomerMgt =&amp;gt; &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                CustomerHome ?EJBEntityHomeInterface?&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        ICustomer =&amp;gt; &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Customer ?EJBRemoteInterface?&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/dsub_external.gif&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;b>Figure 2: Black-box View of the Customer Design Subsystem&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;i>interfaces&lt;/i> exposed by Design Subsystems might include regular Java interfaces, EJB interfaces (such as Java&#xD;
    Interfaces), EJB interfaces (remote and home), or even one or more &lt;i>delegate&lt;/i> or &lt;i>access&lt;/i> classes that hide&#xD;
    the existence of one or more EJBs entirely. Note that all of these, including Java interfaces, are modeled as UML&#xD;
    classes and not UML interfaces (see &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/interfaces_for_j2ee_applications_23711CC0.html&quot;&#xD;
    guid=&quot;4.292643163694118E-306&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Interfaces for J2EE Applications&lt;/a>). For&#xD;
    example, a session bean is often used as a facade for accessing a set of closely related entity beans. In this case,&#xD;
    only the session bean's interfaces would be exported from the subsystem.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Message-driven beans consume messages asynchronously from a destination (or endpoint). Therefore, a destination could&#xD;
    also serve as an &quot;interface&quot; for a Design Subsystem that contains message-driven beans.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that since local interfaces are used by other closely-coupled EJBs within the same Design Subsystem and, they&#xD;
    appear in the realization of subsystems more often than in the visible interfaces exposed by a subsystem.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on interfaces in a J2EE application, see &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/interfaces_for_j2ee_applications_23711CC0.html&quot;&#xD;
    guid=&quot;4.292643163694118E-306&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Interfaces for J2EE Applications&lt;/a>. For more&#xD;
    information on modeling EJBs, see &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/enterprise_javabean_ejb_7F0C3AFF.html&quot;&#xD;
    guid=&quot;1.5078998518719443E-305&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Enterprise JavaBean (EJB)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Subsystem realization (White-box view of the subsystem)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Design Subsystems should expose only what clients require.&amp;nbsp;Therefore, the class that implements an EJB is private&#xD;
    to the subsystem, and is logically part of the subsystem realization. The subsystem realization could become:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        a set of collaborating EJBs and classes, hidden by a one or more visible &lt;i>delegate&lt;/i> or &lt;i>access&lt;/i> classes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a single EJB with no other collaborating classes&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Continuing the previous Customer subsystem example, the realization of the subsystem includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        CustomerEntityEJB (component) ?EJBEntityBean?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        CustomerBean ?EJBImplementation?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        additional helper classes&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Figure 3 shows a white-box view (that is, &lt;i>within&lt;/i> the subsystem) of the Design Subsystem. Note that the EJB&#xD;
    classes are modeled as described in &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/enterprise_javabean_ejb_7F0C3AFF.html&quot;&#xD;
    guid=&quot;1.5078998518719443E-305&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Enterprise JavaBean (EJB)&lt;/a>. This internal view&#xD;
    of the subsystem is referred to as the subsystem realization. In this view, we see decisions not visible to clients.&#xD;
    For example, in this realization of the subsystem a Data Access Object (DAO) class accesses persistent data using the&#xD;
    JDBC API. (In another design, container-managed persistence might have been used.) See &lt;a&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/enterprise_javabean_ejb_7F0C3AFF.html&quot;&#xD;
    guid=&quot;1.5078998518719443E-305&quot; class=&quot;elementlinkwithtype&quot;>Guideline: Enterprise JavaBean (EJB)&lt;/a> for more&#xD;
    information on DAO classes.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/ejb_structure.gif&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;b>&lt;font size=&quot;2&quot;>Figure 3: White-box View of the Customer Design Subsystem&lt;/font>&lt;/b>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
