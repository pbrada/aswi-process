<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_30vp4NnmEdmO6L4XMImrsA" name="rup_project_repository,{A99B1686-7BD7-43B3-9A7F-7DB18A10F4B2}" guid="_30vp4NnmEdmO6L4XMImrsA" changeDate="2005-09-28T06:35:28.180-0700" version="7.1.0">
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The project repository stores all the files and directories that are managed by the project's CM Tool. The project&#xD;
    repository is a global resource that will need to be accessed by most project team &quot;clients&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Depending on the size of a project there could be multiple project repositories, and each project repository could&#xD;
    contain tens of thousands of files and directories. The number of files in any given project repository will depend on&#xD;
    the size of the machine on which the repository server is running, and the number of users expected to concurrently&#xD;
    access data. The repository server handles read / write traffic to the project repository.&#xD;
&lt;/p></purpose>
  <representationOptions>UML Representation: Optionally, you might represent this work product as a package, stereotyped as &amp;lt;&amp;lt;project&#xD;
repository&amp;gt;&amp;gt;. &#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a>The tailoring of this work product should be documented in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/workproducts/rup_cm_plan_EDA7C715.html&quot;&#xD;
    guid=&quot;{71138CAE-59CA-41DE-8DD1-BE11799566FD}&quot;>Artifact: Configuration Management Plan&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project repository can be a central point of failure for all assets, and therefore needs to be reliable, fault&#xD;
    tolerant, scalable to accommodate mode data and have high performance so as not to impede product development. The key&#xD;
    hardware considerations (in order of priority) for the project repository are the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Memory Requirements&lt;/strong>: Memory is one of the cheapest ways to improve the performance of a CM Tool. A&#xD;
        rule of thumb for how much main memory is required in the server machine is to add all the database space used by&#xD;
        the project repository, and divide by two. For example, 1MB of main memory should be sufficient to allow for&#xD;
        caching and background data writing for 2MB of database space. The assumption is that half of the data in the&#xD;
        project repository will be actively accessed at any given time. Server machines should have a minimum of 256MB. On&#xD;
        the client side, each developer's machine should have a minimum of 128MB of main memory.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Disk Input / Output Requirements&lt;/strong>: The second most likely performance bottleneck in the CM&#xD;
        environment is the speed at which the data can be written to disk. Read/write intensive operations are check-in,&#xD;
        check-out and baseline creation. It is a good idea to have a dedicated controller and channel per disk.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Network Bandwidth&lt;/strong>: Since the CM tool is usually a distributed application, adequate network&#xD;
        capacity and reliability are required for good performance. The recommendation is to put machines hosting the&#xD;
        project repository and views on the same subnet. And if the local area network (LAN) is too saturated as indicated&#xD;
        by time outs and poor response, the idea is to increase network capacity or add a subnet for the CM tool hosing&#xD;
        machine.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Project Repository Disk Space&lt;/strong>: Depending on the size of a project there could be multiple project&#xD;
        repositories, and each project repository could contain tens of thousands of files and directories. The number of&#xD;
        files in any given project repository will depend on the size of the machine on which the repository server is&#xD;
        running, and the number of users expected to concurrently access data. An active read/write code development&#xD;
        project repository can hold less elements than a less volatile repository that does not have the same level of user&#xD;
        traffic. For a software development project repository expect to hold approximately 3000 to 5000 elements in the&#xD;
        repository. A good rule of thumb is to allow disk space for growth, and have about 50% free space by allocating 2&#xD;
        giga-bytes of storage per project repository.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The project repository should be on a dedicated server. This means the project repository server should &lt;b>not&lt;/b> be&#xD;
    used for:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        compiles, builds or testing&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        running other third party tools&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a mail server&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a web server&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br />&#xD;
&lt;br /></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
