<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_vStEMN90EdmvvvV6NEU6eA" name="rup_operation,_vGkssN90EdmvvvV6NEU6eA" guid="_vStEMN90EdmvvvV6NEU6eA" changeDate="2005-08-23T19:19:01.073-0700" version="7.1.0">
  <mainDescription>&lt;p>&#xD;
    An operation specification has the following outline:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Description&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Input/Output Parameters&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Non-functional requirements: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                These are derived from the non-functional requirements associated with the steps in the various Use Cases&#xD;
                that this operation supports.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The context in which the operation is used (i.e. a particular Use Case) may be not be captured (e.g. it may&#xD;
                be specified in terms of supporting the minimum performance requirement when all Use Cases are considered)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Pre-conditions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Post-conditions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Superordinate system traceability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Optional: use-case (steps) traceability&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In most of the cases, the Operations are defined for the system under development and the main subsystems, going with&#xD;
    the decomposition as deep as needed, in a recursive fashion. The Operations are grouped around interfaces along the&#xD;
    main responsibilities of the (sub)system under consideration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Depending on the granularity level and the usage context, different roles specify, define, refine or use operations as&#xD;
    main inputs for their associated tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Architects&lt;/b> will describe the main services supported by the architecturally significant elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Analysts&lt;/b> will work with the &lt;b>Architects&lt;/b> for mapping the use-case steps into the system's operations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Designers&lt;/b> will use them as inputs during the refinement and refactoring stages, the operations being the&#xD;
        building blocks for the Interface Design Specifications.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Testers&lt;/b> will derive their test cases based on the specified operations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Managers&lt;/b> will use them as a basis for phase and iteration planning.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
  <keyConsiderations>The Designer is responsible for the integrity of the operation set, ensuring that: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the operations are unique and there is no overlap between them&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the related operations are logically grouped around interfaces&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        each operation is properly documented&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the traceability relationships to other operations and/or use-case steps have been established&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        proper coverage of the use cases or system's operations, based on the scope of the current iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  <purpose>&lt;p>&#xD;
    The primary purpose of the Operations is to capture the provided and required services that an element supports or&#xD;
    needs.&#xD;
&lt;/p></purpose>
  <representationOptions>&lt;p>&#xD;
    The operation-based approach is a more formal, rigorous way of defining the services supported by the system and its&#xD;
    main subsystems. Usually the starting point are the system use cases, so there is an assumption that operations will be&#xD;
    used in conjunction with use cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The main tailoring decisions are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        describe only architectural significant operations (those which relate to the most important use cases)?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        how &quot;deep&quot; the subsystem logical decomposition should go?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        fully describe pre-conditions and post-conditions?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        need to maintain traceability between operations and system operations and/or use cases?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If Interface Design Specifications need to be produced, the level of detail and formalism for the operations which will&#xD;
    be part of these specification will increase to the point where the resulted artifacts could be used for implementation&#xD;
    and testing.&lt;br />&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
