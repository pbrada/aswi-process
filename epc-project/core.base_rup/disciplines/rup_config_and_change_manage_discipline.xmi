<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_yeA1xdnmEdmO6L4XMImrsA" name="rup_config_and_change_manage_discipline,_yeA1xNnmEdmO6L4XMImrsA" guid="_yeA1xdnmEdmO6L4XMImrsA" changeDate="2005-09-22T14:24:06.075-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a>&lt;a id=&quot;Simultaneous Update&quot;&#xD;
name=&quot;Simultaneous Update&quot;>&lt;/a>&lt;a id=&quot;Limited Notification&quot; name=&quot;Limited Notification&quot;>&lt;/a>&lt;a id=&quot;Multiple Versions&quot;&#xD;
name=&quot;Multiple Versions&quot;>&lt;/a>&lt;a id=&quot;Relation to Other Disciplines&quot; name=&quot;Relation to Other Disciplines&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    A CM System is essential for controlling the numerous Work Products produced by the many people who work on a common&#xD;
    project. Control helps avoid costly confusion, and ensures that resultant Work Products are not in conflict due to some&#xD;
    of the following kinds of problems:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Simultaneous%20Update&quot;>Simultaneous Update&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Limited%20Notification&quot;>Limited Notification&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Multiple%20Versions&quot;>Multiple Versions&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Simultaneous Update&quot; name=&quot;Simultaneous Update&quot;>Simultaneous Update&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        When two or more team members work separately on the same work work product, the last one to make changes destroys&#xD;
        the work of the former. The basic problem is that if a system does not support simultaneous update this leads to&#xD;
        serial changes and slows down the development process. However, with simultaneous update, the challenge is to&#xD;
        detect that updates have occurred simultaneously and to resolve any integration issues when these changes are&#xD;
        incorporated&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Limited Notification&quot; name=&quot;Limited Notification&quot;>Limited Notification&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        When a problem is fixed in work products shared by several developers, and some of them are not notified of the&#xD;
        change.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Multiple Versions&quot; name=&quot;Multiple Versions&quot;>Multiple Versions&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        Most large programs are developed in evolutionary releases. One release could be in customer use, while another is&#xD;
        in test, and the third is still in development. If problems are found in any one of the versions, fixes need to be&#xD;
        propagated between them. Confusion can arise leading to costly fixes and re-work unless changes are carefully&#xD;
        controlled and monitored.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    A CM System is useful for managing multiple variants of evolving software systems, tracking which versions are used in&#xD;
    given software builds, performing builds of individual programs or entire releases according to user-defined version&#xD;
    specifications, and enforcing site-specific development policies.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some of the direct benefits provided by a CM System are that it:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        supports development methods&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        maintains product integrity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        ensures completeness and correctness of the configured product&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        provides a stable environment within which to develop the product&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        restricts changes to work products based on project policies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        provides an audit trail on why, when and by whom any work products was changed&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In addition, a CM System stores detailed 'accounting' data on the development process itself: who created a particular&#xD;
    version (and when, and why), what versions of sources went into a particular build, and other relevant information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An organization's CM System is used throughout the product's lifecycle, from inception to deployment. As an&#xD;
    organization's asset repository, the CM system contains current and historical versions of source files of&#xD;
    requirements, design and implementation artifacts that define a particular version of a system or a system component&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The product directory structure represented in the CM System, contains all the artifacts required to implement the&#xD;
    product. As such, the Configuration &amp;amp; Change Management (CCM) discipline is related to all the other process&#xD;
    disciplines as it serves as a repository for their resultant sets of work products.These include:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/requirements_58267518.html&quot;&#xD;
            guid=&quot;_KVkLoN7HEdm8G6yT7-Wdqw&quot;>Domain: Requirements&lt;/a>,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/analysis_and_design_BD3BBB1D.html&quot;&#xD;
            guid=&quot;_kjFBYN7HEdm8G6yT7-Wdqw&quot;>Domain: Analysis and Design&lt;/a>,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/implementation_442FA5B0.html&quot;&#xD;
            guid=&quot;_M6RHkN7IEdm8G6yT7-Wdqw&quot;>Domain: Implementation&lt;/a>,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/test_FBB424F8.html&quot;&#xD;
            guid=&quot;_SPvXcN7IEdm8G6yT7-Wdqw&quot;>Domain: Test&lt;/a>,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/deployment_CD08466A.html&quot;&#xD;
            guid=&quot;_7CnosP_FEdmAzesbYywanQ&quot;>Domain: Deployment&lt;/a>,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/configuration_%20_change_management_121DC50A.html&quot;&#xD;
            guid=&quot;_wgltAP_IEdmAzesbYywanQ&quot;>Domain: Configuration &amp;amp; Change Management&lt;/a> ,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/project_management_7C2F57A0.html&quot;&#xD;
            guid=&quot;_C49xgP_UEdmVCcs_BRqacA&quot;>Domain: Project Management&lt;/a> ,&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/domains/environment_53C41220.html&quot;&#xD;
            guid=&quot;_5JJn0P_UEdmVCcs_BRqacA&quot;>Domain: Environment&lt;/a>&lt;b>.&lt;/b>&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/blockquote>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
