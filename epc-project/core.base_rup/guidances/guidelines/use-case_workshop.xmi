<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_04iXcNnmEdmO6L4XMImrsA" name="use-case_workshop,8.18300315488657E-305" guid="_04iXcNnmEdmO6L4XMImrsA" changeDate="2005-06-16T20:49:16.031-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Organization of the Workshop&quot; name=&quot;Organization of the Workshop&quot;>Organization of the Workshop&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The use-case workshop is an organized &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/brainstorming_and_idea_reduction_73112962.html&quot;&#xD;
    guid=&quot;1.2379282201043798E-305&quot;>brain-storming&lt;/a> meeting. A wide range of knowledge needs to be represented:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Customer requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Unit design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Rational Unified Process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Testing&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    This means that the group will contain people with different backgrounds, knowledge and experience. Try to keep the&#xD;
    group small (less than ten). A regular setting is to compile half of the group from the development team and the other&#xD;
    half from user representatives. In the middle of this is the facilitator. The facilitator should play the role of a&#xD;
    moderator - a catalyst for all ideas and wishes.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Tools&quot; name=&quot;Tools&quot;>Tools&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Tools that you need are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Two large white boards (one is sufficient but two is better)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Easel charts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tape&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Two colors of self-stick notes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        White-board pens (multiple colors)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Pencils&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Walls on which to attach paper-preferably in a &quot;war room&quot; that you can use and leave undisturbed for two or three&#xD;
        weeks.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Defining Actors&quot; name=&quot;Defining Actors&quot;>Defining Actors&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Try to identify who or what will use the system. Start initially with actual people who will use the system; most&#xD;
    people have an easier time focusing on the concrete versus the abstract. As users are identified, try to identify the&#xD;
    role the user plays while interacting with the system - this is usually a good name for an &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_actor_1F9CE9.html&quot; guid=&quot;{0EEBBA43-F5C6-4594-9F06-65D99F7556DF}&quot;>Actor&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When identifying actors, be sure to write a short description for each actor; usually a few bullet-points capturing the&#xD;
    role the actor plays with respect to the system and the responsibilities of the actor will help later on when the time&#xD;
    comes to determine what the actor needs from the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When defining actors, do not forget about the other systems with which the system being designed interacts. The icon&#xD;
    for an actor is misleading here - it seems to imply 'person', but the concept of actor encompasses systems as well.&#xD;
    Focus first on finding the 'human' actors, though; most groups will do better when they focus on the familiar first,&#xD;
    then consider the more esoteric.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Don't worry about the structure of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_usecase_model_EF15E534.html&quot;&#xD;
    guid=&quot;{9C66F2EC-EDEB-4369-9AFB-04B9E7CBCB8E}&quot;>Use-Case Model&lt;/a>, or about relationships between actors; simply capture&#xD;
    the people or things which will use the system. Focus on identification, and be prepared to find a lot of actors. Don't&#xD;
    worry too much about filtering the list now; the identification of &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_usecase_A5D30E62.html&quot; guid=&quot;{B1526BC5-E346-42CB-A08A-3C0D7F382407}&quot;>use&#xD;
    cases&lt;/a> (see below) will do that.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;An Administrative System&quot; name=&quot;An Administrative System&quot;>An Administrative System&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Ask this question: What are the roles in the organization that will use this system? Draw a stick man for each role&#xD;
    that is suggested, and write a name below the stick man. Then list two columns of actors on the white board - one on&#xD;
    each side of the cloud or icon that you already drew. Sometimes it can be useful to use the word role or user instead&#xD;
    of actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Questions to ask:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Who will use this system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What other systems will this system send information to?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        From what other systems will we receive information?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who starts the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who will maintain the user information?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;330&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/wg_ucws1.gif&quot; width=&quot;413&quot; />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Instance or Class?&quot; name=&quot;Instance or Class?&quot;>Instance or Class?&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    You may get questions like &quot;Why isn't Tom the actor? It's always Tom who does that&quot;. You will then need to ask more&#xD;
    questions to gain an understanding of what Tom's role is. The name of the actor should reflect the role.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What is Tom's role?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who else is also able to perform that role?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Why does Tom have that role?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Many actors can be identified directly through their regular positions in the organization. A position in the&#xD;
    organization could correspond to more than one role to the system. For example, Tom may be a regular depot worker as&#xD;
    well as the person responsible for reorganizing the depot to create space for new products. Those two responsibilities&#xD;
    may be two different actors to the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some people will want to generalize to the extreme. They may suggest a User as an actor - and then suggest that is the&#xD;
    only actor we need. True - but boring, and doesn't add much to the understanding of the system. Try to avoid discussing&#xD;
    this suggestion if it comes up. Note the User actor on the board and then proceed to the next actor.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Tricks of the Trade&quot; name=&quot;Tricks of the Trade&quot;>Tricks of the Trade&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ask everyone if there is anything missing.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer some bad suggestions. This way, the team can correct you and explain the exact roles of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Always accept all suggestions - you can always remove duplicates and non-actors later on. To criticize someone's&#xD;
        suggestions will just kill the spirit of the meeting.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Defining the actors usually takes between 1 and 4 hours. The whiteboard should now list many actors, but make sure&#xD;
    there is still room to add use cases. When the set of actors seems to be complete, it is time to start with the use&#xD;
    cases.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;260&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/wg_ucws2.gif&quot; width=&quot;413&quot; />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Define Use Cases&quot; name=&quot;Define Use Cases&quot;>Define Use Cases&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Erase the cloud or icon from the whiteboard, and start to identify &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_usecase_A5D30E62.html&quot; guid=&quot;{B1526BC5-E346-42CB-A08A-3C0D7F382407}&quot;>use&#xD;
    cases&lt;/a>. Focus on concrete use cases - avoid discussion about &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/include-relationship_5AE2718.html&quot; guid=&quot;7.259881398615376E-305&quot;>include&lt;/a>&#xD;
    and &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/extend-relationship_EF38D814.html&quot;&#xD;
    guid=&quot;3.679940320411645E-305&quot;>extend&lt;/a> relations. Draw an ellipse and write the name for every suggestion. Draw&#xD;
    arrows to the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/workproducts/rup_actor_1F9CE9.html&quot;&#xD;
    guid=&quot;{0EEBBA43-F5C6-4594-9F06-65D99F7556DF}&quot;>actors&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Use the fact that you don't know anything about their application as a strength. The participants of the workshop need&#xD;
    to tell you what the system is supposed to do. You should ask a lot of questions about the system. When the&#xD;
    participants provide you with explanations, use cases will appear.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some people can understand the concept of use cases right away, and some people cannot. To put the concept into an&#xD;
    easier perspective, get somebody to draw a system view. A system view is an abstraction of the system. For example, it&#xD;
    can be a server with a database and a number of clients, or a number of circuit boards with their special tasks marked&#xD;
    out. This view is usually easy to illustrate: one of the participants will generally take a whiteboard pen and show how&#xD;
    the system will work. The system view will help to make the use cases extend from system border to system border, and&#xD;
    will implicitly point at a number of different system states. Ask questions about these states, and some more use cases&#xD;
    will appear. Check what will happen when different communications die - this can help you identify alternative flows in&#xD;
    the use cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you are working with a technical system, the system view is often something well-known to everyone and might be the&#xD;
    best way to find actors. In this case, you might let them draw the system view before you start asking for actors.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you are working with an administrative system, the system view may not be as obvious to everyone. In this case, a&#xD;
    graph describing the manual routines may be more useful. The graph may describe how one business entity is moved from&#xD;
    one person to another and what they are supposed to do with it. To visualize the process of order and delivery, the&#xD;
    graph may show a schematic view of the customer office, our office, the storage and the customer storage.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Make sure that both the use-case model and the system view/business entity view are clearly visible to everyone. This&#xD;
    is when having two white boards might come in handy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Allow the use cases to have long names. A recently identified use case may have a name as long as a sentence - this&#xD;
    will be a good start on the brief description of the use case, and then the name will be shortened later on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There will always be a number of use cases that appear to have parts in common. Make sure everyone understands that&#xD;
    this is acceptable for now. There is no point in structuring yet, since we don't know enough about the contents of the&#xD;
    use cases. You should wait until after the flow of events has been outlined before you bring up any discussions about&#xD;
    use-case relationships.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When the group agrees that the use cases on the board cover the functionality of the whole system, break for lunch.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you are back from lunch, review the results from the morning session:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Look at each &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_actor_1F9CE9.html&quot;&#xD;
        guid=&quot;{0EEBBA43-F5C6-4594-9F06-65D99F7556DF}&quot;>Actor&lt;/a>: What are his/her tasks in this system? Task may be a&#xD;
        better word than use case for people not familiar with the use-case modeling technique.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Look at each suggested &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_usecase_A5D30E62.html&quot;&#xD;
        guid=&quot;{B1526BC5-E346-42CB-A08A-3C0D7F382407}&quot;>Use Case&lt;/a>: Do you understand the value the user will achieve with&#xD;
        the use case? If the use case has a positive result, then the user will be more willing to do the use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Look at each suggested use case: Is the use case complete? Or is this just a small part of something bigger?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Questions to ask:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Every actor should have at least one use case. If not, it may be because the actor is a duplicate (another actor&#xD;
        plays the same role) or because the actor is really not a direct user of the system. In these cases, if a&#xD;
        discussion of the merits of keeping the actor yields no strong reasons to keep the actor, the actor may be removed.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Write Brief Description for each Use Case&quot; name=&quot;Write Brief Description for each Use Case&quot;>Write Brief&#xD;
    Description for each Use Case&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Work with the use cases one by one, and create one easel chart for each use case. Draw an ellipse and write the name of&#xD;
    the use case at the top of the chart. Take a pencil and ask the group to help you write a brief description of the use&#xD;
    case. A brief description should be about 1 to 3 sentences. Sometimes it is useful to draw the actors connected to the&#xD;
    use case. Try to leave about half the paper empty for the next step.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;219&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/wg_ucws3.gif&quot; width=&quot;312&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During this work, you will find out that there are some things that everybody thought were clear that are not actually&#xD;
    clear at all. Refer to the requirements identified as &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/types_of_requirements_528C097C.html&quot; guid=&quot;5.360970653483052E-305&quot;>key user&#xD;
    needs and features&lt;/a> in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_vision_2D6D6F1.html&quot;&#xD;
    guid=&quot;{417F089F-6636-451A-A8AB-AB4EAC7AC4F1}&quot;>Vision&lt;/a> and try to find if there are any &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot; guid=&quot;4.582668643506599E-305&quot;>Requirements&lt;/a> on&#xD;
    this use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    New use cases will appear. Some use cases will disappear. Put the use case papers on the walls. Try to organize them&#xD;
    with one column per functional area. (Don't use the whiteboards for this -they are needed for the system view and&#xD;
    actors and use cases.) If you can't solve questions immediately, write them down on a self-stick note and place them at&#xD;
    the appropriate use case. Use one color for questions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When all use cases have an easel chart and a brief description, it is time for the next mode. It is often wise to take&#xD;
    some time discuss if this really all the use cases that are needed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model you have created so far may be documented in &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/tools/rup_rose_classic_20F2524D.html&quot; guid=&quot;{06FB737B-5D74-4C3B-98F4-36153CFB2E34}&quot;>Rational&#xD;
    Rose&lt;/a> or &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/tools/rup_requisite_pro_593FD397.html&quot;&#xD;
    guid=&quot;{887DBA0C-5761-494D-862D-5956F1C51BF7}&quot;>Rational RequisitePro&lt;/a> and generated into a Use-Case Model Survey&#xD;
    report.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Step-by-Step Description of the Flow of Events for each Use Case&quot;&#xD;
    name=&quot;Step-by-Step Description of the Flow of Events for each Use Case&quot;>Step-by-Step Description of the Flow of Events&#xD;
    for each Use Case&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The way to start writing a use case is to structure the text first. There is no point in sitting alone and trying to&#xD;
    structure the text without first obtaining input from the stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work with the use cases one by one. Write down the different actions in order. Don't try figure out how things will&#xD;
    look in code structures, loops, for-while statements, etc. - just work with the basic flow of events, and don't worry&#xD;
    about alternatives. Enumerate the steps 1, 2, 3, 4, To help the group understand the required level of detail, you can&#xD;
    say that you want 5 to10 steps in the basic flow.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you've agreed on the steps in the basic flow of events, walk through it and identify alternative steps. Enumerate&#xD;
    the alternative flows A1, A2, A3, A4,&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;219&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/wg_ucws4.gif&quot; width=&quot;312&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During this discussion a lot of issues will be raised, many of which will not be solved until you get to &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/capabilitypatterns/analysis_design_49725AC4.html&quot;&#xD;
    guid=&quot;{002674F9-6511-4D15-8623-B761D8C48986}&quot;>Analysis &amp;amp; Design&lt;/a>. Remember to write down all issues, together&#xD;
    with any assumptions you need to make along the way. Some of the issues need to be resolved soon so that the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/roles/rup_requirement_specifier_A2500152.html&quot;&#xD;
    guid=&quot;{7264A534-7509-4B4B-AF73-CAECC0178898}&quot;>Requirements Specifier&lt;/a> can detail the flow of events correctly, and&#xD;
    some of them are things that you need to make sure are resolved before you start Analysis &amp;amp; Design.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    What you have on each easel chart now should be sufficient for the Requirements Specifier to be able to detail the flow&#xD;
    of events of the use case.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Capture Supplementary Specifications&quot; name=&quot;Capture Supplementary Specifications&quot;>Capture Supplementary&#xD;
    Specifications&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    During this session, there will be several &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot; guid=&quot;4.582668643506599E-305&quot;>Requirements&lt;/a> on&#xD;
    the system that you may not be able to readily capture in a use case. Typically, these statements have to do with&#xD;
    general functionality, usability, reliability, performance, and supportability of the system. Keep a separate easel&#xD;
    chart where you note these statements. They will form a basis for your &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_supplementary_specification_F5ACAA22.html&quot;&#xD;
    guid=&quot;{B16C2941-791C-44E6-B353-354109B5C9DE}&quot;>Supplementary Specifications&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Trace Requirements to Use Cases&quot; name=&quot;Trace Requirements to Use Cases&quot;>Trace Requirements to Use Cases&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Walk through the key &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_stakeholder_requests_A89D2BF9.html&quot;&#xD;
    guid=&quot;{75F38765-E25B-4459-907E-77F429652C0F}&quot;>Stakeholder Requests&lt;/a> and each feature in the &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/workproducts/rup_vision_2D6D6F1.html&quot;&#xD;
    guid=&quot;{417F089F-6636-451A-A8AB-AB4EAC7AC4F1}&quot;>Vision document&lt;/a> and verify that the use-case model covers them in the&#xD;
    appropriate way. Discuss which user needs or requirements are &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/traceability_8F6B898D.html&quot; guid=&quot;1.4005695544042474E-306&quot;>traced&lt;/a> to which&#xD;
    use cases.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;219&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/wg_ucws5.gif&quot; width=&quot;312&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Take the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/workproducts/rup_vision_2D6D6F1.html&quot;&#xD;
    guid=&quot;{417F089F-6636-451A-A8AB-AB4EAC7AC4F1}&quot;>Vision document&lt;/a> and read the first &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/types_of_requirements_528C097C.html&quot; guid=&quot;5.360970653483052E-305&quot;>feature&lt;/a>.&#xD;
    Write its identity on one (or more if needed) self-stick note (use a second color to make it easy to distinguish&#xD;
    requirements from issues). Put the note on the use cases that fulfill this requirement. Later on, you can enter these&#xD;
    &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/guidances/concepts/traceability_8F6B898D.html&quot;&#xD;
    guid=&quot;1.4005695544042474E-306&quot;>traceabilities&lt;/a> in your RequisitePro repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are always a number of &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot;&#xD;
    guid=&quot;4.582668643506599E-305&quot;>Requirements&lt;/a> that can't be connected to any use case:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        They can be specific requirements that have to be postponed to design - put these requirements on one paper (design&#xD;
        requirements).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        They can be general requirements that can't be connected to any use case - put them on the list for the &lt;a&#xD;
        class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_supplementary_specification_F5ACAA22.html&quot;&#xD;
        guid=&quot;{B16C2941-791C-44E6-B353-354109B5C9DE}&quot;>Supplementary Specifications&lt;/a>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        They can be requirements that have been forgotten and require either new use cases or changes to the existing use&#xD;
        cases.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Spend a few moments to review the structure of the room: Are there use cases with no requirements? Why? Is this use&#xD;
    case not required? Or was this functionality forgotten by the person who wrote the requirement specification? (This is&#xD;
    usually the case.) This situation has to be resolved. Is the customer aware that he needs this functionality? Is he&#xD;
    willing to pay for it?&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
