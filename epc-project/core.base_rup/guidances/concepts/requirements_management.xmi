<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1IL9ANnmEdmO6L4XMImrsA" name="requirements_management,8.93441552545224E-307" guid="_1IL9ANnmEdmO6L4XMImrsA" changeDate="2005-06-27T11:43:02.185-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;XE_requirements_management__as_a_feature_of_the_Rational_Unified_Process&quot;&#xD;
name=&quot;XE_requirements_management__as_a_feature_of_the_Rational_Unified_Process&quot;>&lt;/a>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;What is Requirements Management&quot; name=&quot;What is Requirements Management&quot;>What is Requirements Management?&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Requirements management is a systematic approach to finding, documenting, organizing and tracking the changing&#xD;
    requirements of a system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We define a &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot;&#xD;
    guid=&quot;4.582668643506599E-305&quot;>requirement&lt;/a> as:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;blockquote>&#xD;
        &lt;p>&#xD;
            A condition or capability to which the system must conform.&#xD;
        &lt;/p>&#xD;
    &lt;/blockquote>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    Our formal definition of requirements management is that it is a systematic approach to the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Eliciting, organizing, and documenting the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/concepts/types_of_requirements_528C097C.html&quot;&#xD;
        guid=&quot;5.360970653483052E-305&quot;>requirements of the system&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Establishing and maintaining agreement between the customer and the project team on the changing requirements of&#xD;
        the system&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Keys to effective requirements management include maintaining a clear statement of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot; guid=&quot;4.582668643506599E-305&quot;>Requirements&lt;/a>,&#xD;
    along with applicable &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_requirements_attributes_EFE5ABAC.html&quot;&#xD;
    guid=&quot;{D0E2E7A1-4179-470E-AA18-419D5FEA275D}&quot;>attributes&lt;/a> for each &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/types_of_requirements_528C097C.html&quot; guid=&quot;5.360970653483052E-305&quot;>requirement&#xD;
    type&lt;/a> and &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/guidances/concepts/traceability_8F6B898D.html&quot;&#xD;
    guid=&quot;1.4005695544042474E-306&quot;>Traceability&lt;/a> to other requirements and other project work products.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Collecting requirements may sound like a rather straightforward task. In real projects, however, you will run into&#xD;
    difficulties because:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements are not always obvious, and can come from many sources.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are not always easy to express clearly in words.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        There are many different types of requirements at different levels of detail.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of requirements can become unmanageable if not controlled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are related to one another and also to other work products of the software engineering process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements have unique properties or property values. For example, they are neither equally important nor equally&#xD;
        easy to meet.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        There are many interested parties, which means requirements need to be managed by cross-functional groups of&#xD;
        people.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements change.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    So, what skills do you need to develop in your organization to help you manage these difficulties? We have learned that&#xD;
    the following skills are important to master:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Problem%20Analysis&quot;>Problem analysis&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Understanding%20Stakeholder%20Needs&quot;>Understanding stakeholder needs&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Defining%20the%20System&quot;>Defining the system&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Managing%20the%20Scope%20of%20the%20Project&quot;>Managing scope of the project&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Refining%20the%20System%20Definition&quot;>Refining the system definition&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Managing%20Changing%20Requirements&quot;>Managing changing requirements&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Problem Analysis&quot; name=&quot;Problem Analysis&quot;>Problem Analysis&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Problem analysis is done to understand problems, initial stakeholder needs, and propose high-level solutions. It is an&#xD;
    act of reasoning and analysis to find &quot;the problem behind the problem&quot;. During problem analysis, agreement is gained on&#xD;
    the real problem(s), and who the stakeholders are. Also, you define what from a business perspective are the boundaries&#xD;
    of the solution, as well as business constraints on the solution. You should also have analyzed the business case for&#xD;
    the project so that there is a good understanding of what return is expected on the investment made in the system being&#xD;
    built.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/capabilitypatterns/analyze_the_problem_67C3076B.html&quot;&#xD;
    guid=&quot;{554ECC71-6D6C-4ABD-B7CE-357973C63B9F}&quot;>Activity: Analyze the Problem&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Understanding Stakeholder Needs&quot; name=&quot;Understanding Stakeholder Needs&quot;>Understanding Stakeholder Needs&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Requirements come from many sources; examples would be customers, partners, users, and domain experts. You need to know&#xD;
    how to best determine what the sources should be, get access to those sources, and also how to best elicit information&#xD;
    from them. The individuals who provide the primary sources for this information are referred to as stakeholders in the&#xD;
    project. If you're developing an information system to be used internally within your company, you may include people&#xD;
    with user experience and business domain expertise in your development team. Very often you will start the discussions&#xD;
    at a business model level rather than a system level. If you're developing a product to be sold to a market place, you&#xD;
    may make extensive use of your marketing people to better understand the needs of customers in that market.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Elicitation activities may occur using techniques such as interviews, brainstorming, conceptual prototyping,&#xD;
    questionnaires, and competitive analysis. The result of the elicitation would be a list of requests or needs that are&#xD;
    described textually and graphically, and that have been given priority relative one another.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/capabilitypatterns/understand_stakeholder_needs_3FFFF8B6.html&quot;&#xD;
    guid=&quot;{F9E2B414-29F4-48F9-B263-35570D64314B}&quot;>Activity: Understand Stakeholder Needs&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Defining the System&quot; name=&quot;Defining the System&quot;>Defining the System&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    To define the system means to translate and organize the understanding of stakeholder needs into a meaningful&#xD;
    description of the system to be built. Early in system definition, decisions are made on what constitutes a&#xD;
    requirement, documentation format, language formality, degree of requirements specificity (how many and in what&#xD;
    detail), request priority and estimated effort (two very different valuations usually assigned by different people in&#xD;
    separate exercises), technical and management risks, and initial scope. Part of this activity may include early&#xD;
    prototypes and design models directly related to the most important stakeholder requests. The outcome of system&#xD;
    definition is a description of the system that is both natural language and graphical.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/capabilitypatterns/define_the_system_ED861056.html&quot;&#xD;
    guid=&quot;{20E30ECF-7359-45EC-AA5F-8A7BFA21C472}&quot;>Activity: Define the System&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Managing the Scope of the Project&quot; name=&quot;Managing the Scope of the Project&quot;>Managing the Scope of the&#xD;
    Project&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    To efficiently run a project, you need to carefully prioritize the requirements, based on input from all stakeholders,&#xD;
    and manage its scope. Too many projects suffer from developers working on so called &quot;Easter eggs&quot; (features the&#xD;
    developer finds interesting and challenging), rather than early focusing on tasks that mitigate a risk in the project&#xD;
    or stabilize the architecture of the application. To make sure that you resolve or mitigate risks in a project as early&#xD;
    as possible, you should develop your system incrementally, carefully choosing requirements to for each increment that&#xD;
    mitigates known risks in the project. To do so, you need to negotiate the scope (of each iteration) with the&#xD;
    stakeholders of the project. This typically requires good skills in managing expectations of the output from the&#xD;
    project in its different phases. You also need to have control of the sources of requirements, of how the work products&#xD;
    of the project look, as well as of the development process itself.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also Activity: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/capabilitypatterns/manage_the_scope_of_the_system_7E0B34E5.html&quot;&#xD;
    guid=&quot;{CA9197A9-051E-4845-A7FC-2A8750BD8C02}&quot;>Activity: Manage the Scope of the System&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Refining the System Definition&quot; name=&quot;Refining the System Definition&quot;>Refining the System Definition&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The detailed definition of the system needs to be presented in such a way that your stakeholders can understand, agree&#xD;
    to, and sign off on it. It needs to cover not only functionality, but also compliance with any legal or regulatory&#xD;
    requirements, usability, reliability, performance, supportability, and maintainability. An error often committed is to&#xD;
    believe that what you feel is complex to build needs to have a complex definition. This leads to difficulties in&#xD;
    explaining the purpose of the project and the system. People may be impressed, but they will not give good input since&#xD;
    they don't understand. You should put lots effort into understanding the audience for the documents you are producing&#xD;
    to describe the system. You may often see a need to produce different kinds of descriptions for different audiences.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We have seen that the use-case methodology, often in combination with simple visual prototypes, is a very efficient way&#xD;
    of communicating the purpose of the system and defining the details of the system. Use cases help put requirements into&#xD;
    a context; they tell a story of how the system will be used.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another component of the detailed definition of the system is to state how the system should be tested. Test plans and&#xD;
    definitions of what tests to perform tell us what system capabilities will be verified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/capabilitypatterns/refine_the_system_definition_E67B8011.html&quot;&#xD;
    guid=&quot;{0FEE5795-6090-4D82-9BDB-925E5F0D9985}&quot;>Activity: Refine the System Definition&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Managing Changing Requirements&quot; name=&quot;Managing Changing Requirements&quot;>Managing Changing Requirements&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    No matter how careful you are about defining your requirements, there will always be things that change. What makes&#xD;
    changing requirements complex to manage is not only that a changed requirement means that more or less time has to be&#xD;
    spent on implementing a particular new feature, but also that a change to one requirement may have an impact on other&#xD;
    requirements. You need to make sure that you give your requirements a structure that is resilient to changes, and that&#xD;
    you use traceability links to represent dependencies between requirements and other work products of the development&#xD;
    lifecycle. Managing change includes activities like establishing a baseline, determining which dependencies are&#xD;
    important to trace, establishing traceability between related items, and change control.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;u>&lt;font color=&quot;#0000ff&quot;>Activity: Manage Changing Requirements&lt;/font>&lt;/u>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;MoreInfo&quot; name=&quot;MoreInfo&quot;>More Information&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    More Information on this topic can be found at:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/concepts/requirements_62E28784.html&quot;&#xD;
    guid=&quot;4.582668643506599E-305&quot;>Concept: Requirements&lt;/a>&lt;br />&#xD;
     &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/concepts/types_of_requirements_528C097C.html&quot;&#xD;
    guid=&quot;5.360970653483052E-305&quot;>Concept: Types of Requirements&lt;/a>&lt;br />&#xD;
     &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/concepts/traceability_8F6B898D.html&quot;&#xD;
    guid=&quot;1.4005695544042474E-306&quot;>Concept: Traceability&lt;/a>&lt;br />&#xD;
     &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/whitepapers/applying_requirements_management_with_use_cases_A431D8A1.html&quot;&#xD;
    guid=&quot;1.4430543155816335E-305&quot;>Whitepaper: Applying Requirements Management with Use Cases&lt;/a>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
