<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1C-F09nmEdmO6L4XMImrsA" name="requirements,4.582668643506599E-305" guid="_1C-F09nmEdmO6L4XMImrsA" changeDate="2005-11-04T08:34:25.520-0800" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_requirements__introduction_to&quot; name=&quot;XE_requirements__introduction_to&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    A &lt;b>requirement&lt;/b> is defined as &quot;a condition or capability to which a system must conform&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are many different kinds of requirements. One way of categorizing them is described as the &lt;b>FURPS+&lt;/b> model &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/customcategories/references_56F06DFD.html#GRA92&quot;&#xD;
    guid=&quot;7.755968586980351E-308&quot;>[GRA92]&lt;/a>, using the acronym FURPS to describe the major categories of requirements&#xD;
    with subcategories as shown below.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Functionality&quot;>&lt;b>F&lt;/b>unctionality&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Usability&quot;>&lt;b>U&lt;/b>sability&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Reliability&quot;>&lt;b>R&lt;/b>eliability&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Performance&quot;>&lt;b>P&lt;/b>erformance&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Supportability&quot;>&lt;b>S&lt;/b>upportability&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The &quot;+&quot; in FURPS+ reminds you to include such requirements as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Design%20Requirement&quot;>design constraints&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Implementation%20Requirement&quot;>implementation requirements&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Interface%20Requirement&quot;>interface requirements&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Physical%20Requirement&quot;>physical requirements&lt;/a>.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    (See also [IEEE Std 610.12.1990].)&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0in 0in 0pt&quot;>&#xD;
    Such categories and examples of nonfunctional requirements can be used like a checklist, to ask yourself if you have a&#xD;
    requirement in a particular category.&amp;nbsp;&amp;nbsp; But how do you come up with a complete set of candidate&#xD;
    non-functional requirements?&amp;nbsp;&amp;nbsp; Some other sources include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For a description of a systematic approach to capturing requirements according using FURPS+, see &lt;span&#xD;
        style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>the&#xD;
        &lt;em>The Rational Edge&lt;/em> article 'Capturing Architectural Requirements' by &lt;span&#xD;
        style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>Peter&#xD;
        Eeles (&lt;a&#xD;
        href=&quot;http://www.ibm.com/developerworks/rational/library/4706.html&quot;>&lt;u>http://www.ibm.com/developerworks/rational/library/4706.html&lt;/u>&lt;/a>).&lt;/span>&lt;/span>&amp;nbsp;&#xD;
        It provides a questionnaire that lists a large number of nonfunctional requirements, along with questions for&#xD;
        determining their applicability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Software Engineering Institute has also created a catalog of 'general scenarios' - expressions of quality&#xD;
        attribute requirements â€“ which can be reused across many different kinds of systems to define quality&#xD;
        requirements.&amp;nbsp; For more information, see &lt;a&#xD;
        href=&quot;http://www.sei.cmu.edu/publications/documents/01.reports/01tr014.html&quot;&#xD;
        target=&quot;_blank&quot;>http://www.sei.cmu.edu/publications/documents/01.reports/01tr014.html&lt;/a>&amp;nbsp;or &lt;em>Software&#xD;
        Architecture in Practice, 2&lt;sup>nd&lt;/sup> Ed&lt;/em>., by &lt;span&#xD;
        style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>Len&#xD;
        Bass, Paul Clements, and Rick Kazman (Addison-Wesley, 2003).&lt;/span>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;b>Functional requirements&lt;/b> specify actions that a system must be able to perform, without taking physical&#xD;
    constraints into consideration. These are often best described in a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_usecase_model_EF15E534.html&quot;&#xD;
    guid=&quot;{9C66F2EC-EDEB-4369-9AFB-04B9E7CBCB8E}&quot;>Use-Case Model&lt;/a> and in &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_usecase_A5D30E62.html&quot; guid=&quot;{B1526BC5-E346-42CB-A08A-3C0D7F382407}&quot;>use&#xD;
    cases&lt;/a>. Functional requirements thus specify the input and output behavior of a system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Requirements that are not functional, such as the ones listed below, are sometimes called &lt;b>non-functional&#xD;
    requirements&lt;/b>. Many requirements are non-functional, and describe only attributes of the system or attributes of the&#xD;
    system environment.&amp;nbsp; Nonfunctional requirements are those that address issues such as those described&#xD;
    below.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Functionality&quot; name=&quot;Functionality&quot;>Functionality&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Functional requirements may include:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            feature sets&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            capabilities&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            security&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/blockquote>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Usability&quot; name=&quot;Usability&quot;>Usability&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Usability requirements may include such subcategories as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        human factors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        aesthetics&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        consistency in the user interface&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        online and context-sensitive help&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        wizards and agents&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        user documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        training materials&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Reliability&quot; name=&quot;Reliability&quot;>Reliability&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Reliability requirements to be considered are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        frequency and severity of failure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        recoverability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        predictability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        accuracy&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        mean time between failure (MTBF)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Performance&quot; name=&quot;Performance&quot;>Performance&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A performance requirement imposes conditions on functional requirements. For example, for a given action, it may&#xD;
    specify performance parameters for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        speed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        efficiency&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        availability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        accuracy&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        throughput&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        response time&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        recovery time&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        resource usage&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Supportability&quot; name=&quot;Supportability&quot;>Supportability&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Supportability requirements may include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        testability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        extensibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        adaptability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        maintainability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        compatibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        configurability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        serviceability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        installability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        localizability (internationalization)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Design Requirement&quot; name=&quot;Design Requirement&quot;>Design Requirement&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A design requirement, often called a &lt;b>design constraint&lt;/b>, specifies or constrains the design of a system.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Implementation Requirement&quot; name=&quot;Implementation Requirement&quot;>Implementation Requirement&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    An implementation requirement specifies or constrains the coding or construction of a system. Examples are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        required standards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        implementation languages&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        policies for database integrity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        resource limits&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        operation environments&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Interface Requirement&quot; name=&quot;Interface Requirement&quot;>Interface Requirement&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    An interface requirement specifies:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        an external item with which a system must interact&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        constraints on formats, timings, or other factors used by such an interaction&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Physical Requirement&quot; name=&quot;Physical Requirement&quot;>Physical Requirement&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A physical requirement specifies a physical characteristic that a system must possess; for example,&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        material&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        shape&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        size&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        weight&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    This type of requirement can be used to represent hardware requirements, such as the physical network configurations&#xD;
    required.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
