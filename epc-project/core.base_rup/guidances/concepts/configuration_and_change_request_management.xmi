<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_31fQwtnmEdmO6L4XMImrsA" name="configuration_and_change_request_management,1.3564691989508223E-304" guid="_31fQwtnmEdmO6L4XMImrsA" changeDate="2005-06-21T11:58:35.044-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_change_management__overview_of&quot; name=&quot;XE_change_management__overview_of&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The major aspects of a CM System usually include the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Change Request Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Configuration Management (CM)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Change Tracking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Version Selection&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    CM Systems can also include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Software Manufacture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Configuration Status Accounting and Measurement&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The following CM Cube, suggesting their mutual interdependence, serves to iconograph the major aspects of a CM System.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;map id=&quot;FPMap0&quot; name=&quot;FPMap0&quot;>&#xD;
        &lt;area shape=&quot;rect&quot; alt=&quot;Concepts: Change Request Management&quot; coords=&quot;61,2,444,34&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/concepts/change_request_management_119F2E47.html&quot; guid=&quot;5.975934904188119E-305&quot; />&#xD;
        &lt;area shape=&quot;rect&quot; alt=&quot;Concepts: Change Request Management&quot; coords=&quot;61,37,275,134&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/concepts/change_request_management_119F2E47.html&quot; guid=&quot;5.975934904188119E-305&quot; />&#xD;
        &lt;area shape=&quot;circle&quot; alt=&quot;Concepts: Change Request Management&quot; coords=&quot;294,69,33&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/concepts/change_request_management_119F2E47.html&quot; guid=&quot;5.975934904188119E-305&quot; />&#xD;
    &lt;/map>&lt;img height=&quot;398&quot;&#xD;
    alt=&quot;Diagram of CM cube showing relationships between Change Request Management, Measurement, and Configuration Managment&quot;&#xD;
     src=&quot;resources/co_cm.gif&quot; width=&quot;538&quot; usemap=&quot;#fpmap0&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        &lt;b>Change Request Management (CRM)&lt;/b> - addresses the organizational infrastructure required to assess the cost,&#xD;
        and schedule, impact of a requested change to the existing product. Change Request Management addresses the&#xD;
        workings of a Change Review Team or Change Control Board.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Configuration Status Accounting (Measurement)&lt;/b> - is used to describe the 'state' of the product based on the&#xD;
        type, number, rate and severity of defects found and fixed, during the course of product development. Metrics&#xD;
        derived under this aspect, either through audits or raw data, are useful in determining the overall completeness&#xD;
        status of the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Configuration Management (CM)&lt;/b> - describes the product structure and identifies its constituent configuration&#xD;
        items that are treated as single versionable entities in the configuration management process. CM deals with&#xD;
        defining configurations, building and labeling, and collecting versioned work products into constituent sets and&#xD;
        maintaining traceability between these versions.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Change Tracking&lt;/b> - describes what is done to elements, for what reason, and at what time. It serves as&#xD;
        history and rationale of changes. It is quite separate from assessing the impact of proposed changes as described&#xD;
        under 'Change Request Management'.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Version Selection&lt;/b> - the purpose of good 'version selection' is to ensure that right versions of&#xD;
        configuration items are selected for change or implementation. Version selection relies on a solid foundation of&#xD;
        'configuration identification'.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Software Manufacture&lt;/b> - covers the need to automate the steps to compile, test, and package software for&#xD;
        distribution.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The Rational Unified Process describes a comprehensive CM System that covers all CM aspects. The purpose is to allow&#xD;
    for an effective CM process that:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        is built into the software development process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        helps manage the evolution of the software development work products.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        allows developers to execute CM tasks with minimal intrusion into the development process.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    One goal of the Rational CM process is to encourage version control of work products captured in development tools, and&#xD;
    to de-emphasize the resource inefficient production of hardcopy documentation per-se.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another goal of the Rational CM process is to ensure that the level of control applied to each work product is based on&#xD;
    the maturity level of that product. As work products mature, change authorization migrates from implementer, to&#xD;
    subsystem or system integrator, to project manager and ultimately to the customer.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For the sake of process efficiency it is important to ensure that the bureaucratic overhead associated with the Change&#xD;
    Request Management process is consistent with the maturity of the product.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, during early iterations the Change Request Management (CRM) process may be relatively informal. In the&#xD;
    later phases of the development lifecycle, the CRM process can be made more strict to ensure that necessary test and&#xD;
    documentation resources can handle changes as well as assessing the potential instability that a change may introduce.&#xD;
    A project which is unable to tailor the level of control during the development process will not be running as&#xD;
    efficiently as possible.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
