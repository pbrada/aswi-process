<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2avKBNnmEdmO6L4XMImrsA" name="structure_impl_model,{AE16EC14-5366-4CFD-A207-14F352D1B3E3}" guid="_2avKBNnmEdmO6L4XMImrsA" changeDate="2005-10-06T10:19:39.798-0700" changeDescription="  Was attached to Implementation\Guidance" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    Overview&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Component diagrams provide a physical view of the current model. A component diagram shows the organizations and&#xD;
    dependencies among implementation elements, including source code files, binary code files, and executable files,&#xD;
    modeled as components.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;16&quot; alt=&quot;helpbook icon&quot; hspace=&quot;0&quot; src=&quot;../../resources/helpbook.gif&quot; width=&quot;16&quot; border=&quot;0&quot; /> For more&#xD;
    information about Component Diagrams, see the Component Diagrams (Overview) topic in the Rational Rose online help.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following is a summary of the steps you perform to structure the implementation model:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        &lt;p>&#xD;
            &lt;a href=&quot;#Step1&quot;>Create a component diagram in the Component View&lt;/a>&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        &lt;a href=&quot;#Step2&quot;>Create a subsystem structure that mirrors the Design Model structure&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    1. &lt;a id=&quot;Step1&quot; name=&quot;Step1&quot;>&lt;/a>Create a component diagram in the Component View&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In this step, you should:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        &lt;p>&#xD;
            Rename the Main component diagram using a more descriptive title.&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        Create additional component diagrams.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    2. &lt;a id=&quot;Step2&quot; name=&quot;Step2&quot;>&lt;/a>Create a subsystem structure that mirrors the Design Model structure&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Subsystems are modeled as packages. In this step you:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        &lt;p>&#xD;
            Create a package structure in your Component View that mirrors the package structure you created for your&#xD;
            design model in the Logical View.&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        Create the actual components and assign their stereotypes and Language.&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        Assign classes (or interfaces) to components.&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;mvd-P&quot;>&#xD;
        Optionally create a component from an existing software module.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You can drag executable programs (.exe), ActiveX (.ocx), Data Link Libraries (.dll), and Type Libraries (.tlb) from a&#xD;
    source such as Explorer and drop them in a component package (either in the browser or a diagram). You should limit the&#xD;
    elements you include to those that are external to your model or elements that are used by the modeled system only.&#xD;
    These elements are not intended to be reverse engineered into the model since they rarely contain the complete source&#xD;
    code. They are only necessary when building your system.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
