<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1y8xQNnmEdmO6L4XMImrsA" name="use_case_analysis,{28014615-A62F-452D-B821-30C7CAB0EC44}" guid="_1y8xQNnmEdmO6L4XMImrsA" changeDate="2005-07-25T19:27:28.386-0700" version="7.1.0">
  <sections xmi:id="_Sc3YANnnEdmO6L4XMImrsA" name=" Create Analysis Use-Case Realization " guid="_Sc3YANnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Create Use-Case Realization&quot; name=&quot;Create Use-Case Realization&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To create the modeling element used to express the behavior of the use case.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Use Cases form the central focus of most of the early analysis and design work. To enable the transition between&#xD;
    Requirements-centric tasks and Analysis/Design-centric tasks, the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_use_case_realization_E4F713BD.html&quot;&#xD;
    guid=&quot;{87EB094F-095B-4981-ACC3-319B3B298641}&quot;>Work Product: Use-Case Realization&lt;/a> serves as a bridge, providing a&#xD;
    way to trace behavior in the Analysis and Design Models back to the Use-Case Model, as well as organizing&#xD;
    collaborations around the Use Case concept.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If one does not already exist, create a Analysis Use-Case Realization in the Analysis Model for the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../core.base_rup/workproducts/rup_usecase_A5D30E62.html&quot;&#xD;
    guid=&quot;{B1526BC5-E346-42CB-A08A-3C0D7F382407}&quot;>Use Case&lt;/a>.&amp;nbsp; The name for the Analysis Use-Case Realization should&#xD;
    be the same as the associated Use Case, and a &quot;realizes&quot; relationship should be established from the analysis use-case&#xD;
    realization to its associated use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on use-case realizations, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/use-case_realization_C690D81F.html&quot; guid=&quot;1.6790343052744206E-305&quot;>Guideline:&#xD;
    Use-Case Realization&lt;/a>.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_Sc3YAdnnEdmO6L4XMImrsA" name=" Supplement the Use-Case Description " guid="_Sc3YAdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Supplement the use-case description&quot; name=&quot;Supplement the use-case description&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To capture additional information needed in order to understand the required internal behavior of the&#xD;
                system that might be missing from the use-case description written for the customer of the system.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    The description of each use case is not always sufficient for finding analysis classes and their objects. The customer&#xD;
    generally finds information about what happens inside the system uninteresting, so the use-case descriptions may leave&#xD;
    such information out. In these cases, the use-case description reads like a 'black-box' description, in which internal&#xD;
    details on what the system does in response to an actor's actions is either missing or very summarily described. To&#xD;
    find the objects which perform the use case, you need to have the 'white box' description of what the system does from&#xD;
    an internal perspective.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In the case of an Automated Teller Machine (ATM), the customer of the system might prefer to say&#xD;
&lt;/p>&#xD;
&lt;div style=&quot;margin-left: 2em&quot;>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &quot;The ATM validates the Bank Customer's card.&quot;&#xD;
    &lt;/p>&#xD;
&lt;/div>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    To describe the user authentication behavior of the system. While this might be sufficient for the customer, it gives&#xD;
    us no real idea of what actually happens inside the ATM to validate the card.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In order to form an internal picture of how the system works, at a sufficient level of detail to identify objects, we&#xD;
    might need additional information. Taking the ATM card validation activity as an example, the expanded description&#xD;
    would read as:&#xD;
&lt;/p>&#xD;
&lt;div style=&quot;margin-left: 2em&quot;>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &quot;The ATM sends the customer's account number and the PIN to the ATM Network to be validated. The ATM Network&#xD;
        returns success if the customer number and the PIN match and the customer is authorized to perform transactions,&#xD;
        otherwise the ATM Network returns failure.&quot;&#xD;
    &lt;/p>&#xD;
&lt;/div>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    This level of detail provides a clear idea of what information is required (account number and PIN) and who is&#xD;
    responsible for the authentication (the ATM Network, an actor in the Use Case model). From this information, we can&#xD;
    identify two potential objects (a Customer object, with attributes of account number and PIN, and an ATM Network&#xD;
    Interface) as well as their responsibilities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examine the use-case description to see if the internal behavior of the system is clearly defined. The internal&#xD;
    behavior of the system should be unambiguous, so that it is clear what the system must do. It is not necessary to&#xD;
    define the elements within the system (objects) that are responsible for performing that behavior - just a clear&#xD;
    definition of what needs to be done.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sources of information for this detail include domain experts who can help define what the system needs to do. A good&#xD;
    question to ask, when considering a particular behavior of the system, is &quot;what does it mean for the system to do that&#xD;
    thing?&quot;. If what the system does to perform the behavior is not well defined enough to answer that question, there is&#xD;
    likely more information that needs to be uncovered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following alternatives exist for supplementing the description of the &lt;b>Flow of Events&lt;/b>:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Do not describe it at all&lt;/b>. This might be the case if you think the interaction diagrams are&#xD;
        self-explanatory, or if the &lt;b>Flow of Events&lt;/b> of the corresponding use case provides a sufficient description.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Supplement the existing Flow of Event description&lt;/b>. Add supplementary descriptions to the &lt;b>Flow of&#xD;
        Events&lt;/b> in areas where the existing text is unclear about the actions the system should take.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Describe it as a complete textual flow&lt;/b>, separate from the &quot;external&quot; Use Case Flow of Events description.&#xD;
        This is appropriate in cases where the internal behavior of the system bears little resemblance to the external&#xD;
        behavior of the system. In this case, a completely separate description, associated with the analysis use-case&#xD;
        realization rather than the use case, is warranted.&#xD;
    &lt;/li>&#xD;
&lt;/ul></sectionDescription>
  </sections>
  <sections xmi:id="_SddN4NnnEdmO6L4XMImrsA" name=" Find Analysis Classes from Use-Case Behavior " guid="_SddN4NnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Find Classes from Use-Case Behavior&quot; name=&quot;Find Classes from Use-Case Behavior&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To identify a candidate set of model elements (analysis classes) which will be capable of performing the&#xD;
                behavior described in use cases.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Finding a candidate set of analysis classes is the first step in the transformation of the system from a mere statement&#xD;
    of required behavior to a description of how the system will work. In this effort, analysis classes are used to&#xD;
    represent the roles of model elements which provide the necessary behavior to fulfill the functional requirements&#xD;
    specified by use cases and the non-functional requirements specified by the supplemental requirements. As the project&#xD;
    focus shifts to design, these roles evolve a set of design elements which realize the use cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The roles identified in Use-Case Analysis primarily express behavior of the upper-most layers of the&#xD;
    system-application-specific behavior and domain specific behavior. Boundary classes and control classes typically&#xD;
    evolve into application-layer design elements, while entity classes evolve into domain-specific design elements. Lower&#xD;
    layer design element typically evolve from the analysis mechanisms which are used by the analysis classes identified&#xD;
    here.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The technique described here uses three different perspectives of the system to drive the identification of candidate&#xD;
    classes. The three perspectives are that of the &lt;b>boundary&lt;/b> between the system and its actors, the information the&#xD;
    system uses, and the control logic of the system. The corresponding class stereotypes, boundary, entity and control,&#xD;
    are conveniences used during Analysis that disappear in Design.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identification of classes means just that: they should be identified, named, and described briefly in a few sentences.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on identification of analysis classes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/analysis_class_7E97273E.html&quot; guid=&quot;2.2738948033145062E-306&quot;>Guideline: Analysis&#xD;
    Class&lt;/a>. For more information on analysis use-case realizations, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/use-case_realization_C690D81F.html&quot; guid=&quot;1.6790343052744206E-305&quot;>Guideline:&#xD;
    Use-Case Realization&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If particular analysis mechanisms and/or analysis patterns have been documented in the project-specific guidelines,&#xD;
    these should be used as another source of &quot;inspiration&quot; for the analysis classes.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SddN4dnnEdmO6L4XMImrsA" name=" Distribute Behavior to Analysis Classes " guid="_SddN4dnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Distribute behavior to analysis classes&quot; name=&quot;Distribute behavior to analysis classes&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To express the use-case behavior in terms of collaborating analysis classes. To determine the&#xD;
                responsibilities of analysis classes.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    For each independent sub-flow (scenario):&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Create one or more interaction (communication or sequence) diagrams&lt;/b>. At least one diagram is usually needed&#xD;
        for the main flow of events of the use case, plus at least one diagram for each alternate/exceptional flow.&#xD;
        Separate diagrams are usually needed for sub-flows which have complex timing or decision points, or to simplify&#xD;
        complex flows which are too long to grasp easily in one diagram.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Identify the analysis classes&lt;/b> responsible for the required behavior by stepping through the flow of events&#xD;
        of the scenario, ensuring that all behavior required by the use case is provided by the analysis use-case&#xD;
        realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Illustrate interactions between analysis classes in the interaction diagram.&lt;/b> The interaction diagram should&#xD;
        also show interactions of the system with its actors (the interactions should begin with an actor, since an actor&#xD;
        always invokes the use case).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Include classes that represent the control classes of used use-cases.&lt;/b> (Use a separate interaction diagram&#xD;
        for each extending use-case, showing only the variant behavior of the extending use case.)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img src=&quot;resources/ac_ucan1.gif&quot; alt=&quot;an example communication diagram&quot; border=&quot;0&quot; width=&quot;613&quot; height=&quot;260&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    A communication diagram for the use case &lt;b>Receive Deposit Item&lt;/b>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If particular analysis mechanisms and/or analysis patterns have been documented in the project-specific guidelines,&#xD;
    these should be reflected in the allocation of responsibility and resulting interaction diagrams.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SeM0wNnnEdmO6L4XMImrsA" name=" Describe Responsibilities " guid="_SeM0wNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Describe responsibilities&quot; name=&quot;Describe responsibilities&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To describe the responsibilities of a class of objects identified from use-case behavior.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    A responsibility is a statement of something an object can be asked to provide. Responsibilities evolve into one (but&#xD;
    usually more) operations on classes in design; they can be characterized as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the actions that the object can perform&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the knowledge that the object maintains and provides to other objects&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each analysis class should have several responsibilities; a class with only one responsibility is probably too simple,&#xD;
    while one with a dozen or more is pushing the limit of reasonability and should potentially be split into several&#xD;
    classes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    That all objects can be created and deleted goes without saying; don't restate the obvious unless the object performs&#xD;
    some special behavior when it is created or deleted. (Some objects cannot be removed if certain relationships exist.)&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Finding Responsibilities&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Responsibilities are derived from messages in interaction diagrams. For each message, examine the class of the object&#xD;
    to which the message is sent. If the responsibility does not yet exist, create a new responsibility that provides the&#xD;
    requested behavior.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Other responsibilities will derive from non-functional requirements. When you create a new responsibility, check the&#xD;
    non-functional requirements to see if there are related requirements which apply. Either augment the description of the&#xD;
    responsibility, or create a new responsibility to reflect this.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Documenting Responsibilities&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Responsibilities are documented with a short (up to several words) name for the responsibility, and a short (up to&#xD;
    several sentences) description. The description states what the object does to fulfill the responsibility, and what&#xD;
    result is returned when the responsibility is invoked.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SeM0wdnnEdmO6L4XMImrsA" name=" Describe Attributes and Associations " guid="_SeM0wdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Describe attributes and associations&quot; name=&quot;Describe attributes and associations&quot;>&lt;/a>&lt;a&#xD;
id=&quot;XE_attribute_on_object__describing&quot; name=&quot;XE_attribute_on_object__describing&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To define the other classes on which the analysis class depends.&lt;br />&#xD;
                 To define the events in other analysis classes that the class must know about.&lt;br />&#xD;
                 To define the information that the analysis class is responsible for maintaining.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    In order to carry-out their responsibilities, classes frequently depend on other classes to supply needed behavior.&#xD;
    Associations document the inter-class relationships and help us to understand class coupling; better understanding of&#xD;
    class coupling, and reduction of coupling where possible, can help us build better, more resilient systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following steps define the attributes of classes and the associations between classes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Define%20Attributes&quot;>Define attributes&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Establish%20associations%20between%20analysis%20classes&quot;>Establish associations between analysis&#xD;
        classes&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Describe%20event%20dependencies%20between%20analysis%20classes&quot;>Describe event dependencies between&#xD;
        analysis classes&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Define Attributes&quot; name=&quot;Define Attributes&quot;>Define Attributes&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Attributes are used to store information by a class. Specifically, attributes are used where the information is:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Referred to &quot;by value&quot;; that is, it is only the value of the information, not it's location or object identifier&#xD;
        which is important.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Uniquely &quot;owned&quot; by the object to which it belongs; no other objects refer to the information.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessed by operations which only get, set or perform simple transformations on the information; the information&#xD;
        has no &quot;real&quot; behavior other than providing its value.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If, on the other hand, the information has complex behavior, is shared by two or more objects, or is passed &quot;by&#xD;
    reference&quot; between two or more objects, the information should be modeled as a separate class.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The attribute name should be a noun that clearly states what information the attribute holds.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The description of the attribute should describe what information is to be stored in the attribute; this can be&#xD;
    optional when the information stored is obvious from the attribute name.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The attribute type is the simple data type of the attribute. Examples include &lt;b>string&lt;/b>, &lt;b>integer&lt;/b>,&#xD;
    &lt;b>number&lt;/b>.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Establish associations between analysis classes&quot;&#xD;
    name=&quot;Establish associations between analysis classes&quot;>Establish Associations between Analysis Classes&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Start by studying the links in the interaction diagrams produced in &lt;a&#xD;
    href=&quot;#Distribute%20behavior%20to%20analysis%20classes&quot;>Distribute Behavior to Analysis Classes&lt;/a>. Links between&#xD;
    classes indicate that objects of the two classes need to communicate with one another to perform the Use Case. Once we&#xD;
    start designing the system, these links might be realized in several ways:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The object might have &quot;global&quot; scope, in which case any object in the system can send messages to it&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        One object might be passed the second object as a parameter, after which it can send messages to the passed object.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The object might have a permanent association to the object to which messages are sent.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The object might be created and destroyed within the scope of the operation (i.e. a 'temporary' object)-these&#xD;
        objects are considered to be 'local' to the operation.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    At this early point in the &quot;life&quot; of the class, however, it is too early to start making these decisions: we do not yet&#xD;
    have enough information to make well-educated decisions. As a result, in analysis we create associations and&#xD;
    aggregations to represent (and &quot;carry&quot;) any messages that must be sent between objects of two classes. (Aggregation, a&#xD;
    special form of association, indicates that the objects participate in a &quot;whole/part&quot; relationship (see &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/guidances/guidelines/association_98710829.html&quot;&#xD;
    guid=&quot;5.540135518285335E-305&quot;>Guideline: Association&lt;/a> and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/aggregation_A53E33AB.html&quot; guid=&quot;1.1538495077622037E-304&quot;>Guideline:&#xD;
    Aggregation&lt;/a>)).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We will refine these associations and aggregations in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/tasks/class_design_98F20FF9.html&quot; guid=&quot;{27AE0601-2E95-4A6A-8EB3-0A4BA8E5626B}&quot;>Task: Class&#xD;
    Design&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each class, draw a class diagram which shows the associations each class has to other classes:&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img src=&quot;resources/aclssdg.gif&quot; alt=&quot;an example class diagram, showing associations and aggregations&quot; width=&quot;358&quot;&#xD;
    height=&quot;222&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    Example analysis class diagram for part of an Order Entry System&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Focus only on associations needed to realize the use cases; don't add association you think &quot;might&quot; exist unless they&#xD;
    are required based on the interaction diagrams.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Give the associations role names and multiplicities.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A role name should be a noun expressing what role the associated object plays in relation to the associating&#xD;
        object.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assume a multiplicity of 0..* (zero to many) unless there is some clear evidence of something else. A multiplicity&#xD;
        of zero implies that the association is optional; make sure you mean this; if an object might not be there,&#xD;
        operations which use the association will have to adjust accordingly.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Narrower limits for multiplicity may be specified (such as 3..8).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Within multiplicity ranges, probabilities may be specified. Thus, if the multiplicity is 0..*, is expected to be&#xD;
        between 10 and 20 in 85% of the cases, make note of it; this information will be of great importance during design.&#xD;
        For example, if persistent storage is to be implemented using a relational database, narrower limits will help&#xD;
        better organize the database tables.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Write a brief description of the association to indicate how the association is used, or what relationships the&#xD;
    association represents.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Describe event dependencies between analysis classes&quot;&#xD;
    name=&quot;Describe event dependencies between analysis classes&quot;>Describe Event Dependencies between Analysis Classes&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Objects sometimes need to know when an event occurs in some &quot;target&quot; object, without the &quot;target&quot; having to know all&#xD;
    the objects which require notification when the event occurs. As a short-hand to show this event-notification&#xD;
    dependency, a subscribe-association allows us to express this dependency in a compact, concise way.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A subscribe-association between two objects indicates that the subscribing object will be informed when a particular&#xD;
    event has occurred in the subscribed object. A subscribe-association has a &lt;b>condition&lt;/b> defining the event that&#xD;
    causes the subscriber to be notified. For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/subscribe-association_1AB75163.html&quot; guid=&quot;1.401846671640991E-305&quot;>Guideline:&#xD;
    Subscribe-Association&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The conditions of the &lt;b>subscribes-&lt;/b>association should be expressed in terms of abstract characteristics, rather&#xD;
    than in terms of its specific attributes or operations. In this way, the associating object is kept independent of the&#xD;
    contents of the associated entity object, which may well change.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A subscribe-association is needed:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        if an object is influenced by something that occurs in another object&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        if a new object must be created to deal with some event, for example, when an error occurs, a new window must be&#xD;
        created to notify the user&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        if an object needs to know when another object is instantiated, changed or destroyed&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The objects which are 'subscribed-to' are typically entity objects. Entity objects are typically passive stores of&#xD;
    information, with any behavior generally related to their information-storage responsibilities. Many other objects&#xD;
    often need to know when the entity objects change. The subscribe-association prevents the entity object from having to&#xD;
    know about all these other objects-they simply 'register' interest in the entity object and are notified when the&#xD;
    entity object changes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Now this is all just 'analysis sleight-of-hand': in design we have to define how exactly this notification works. We&#xD;
    might purchase a notification framework, or we might have to design and build one ourselves. But for the moment, simply&#xD;
    noting that the notification exists is sufficient.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The direction of the association shows that only the subscribing object is aware of the relation between the two&#xD;
    objects. The description of the subscription is entirely within the subscribing object. The associated entity object,&#xD;
    in turn, is defined in the usual way without considering that other objects might be interested in its activity. This&#xD;
    also implies that a subscribing object can be added to, or removed from, the model without changing the object to which&#xD;
    it subscribes.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SfGMoNnnEdmO6L4XMImrsA" name=" Reconcile the Analysis Use-Case Realizations " guid="_SfGMoNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Reconcile the Use-Case Realizations&quot; name=&quot;Reconcile the Use-Case Realizations&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To reconcile the individual analysis use-case realizations and identify a set of analysis classes with&#xD;
                consistent relationships.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    The analysis use-case realizations were developed as a result of analyzing a particular use case.&amp;nbsp; Now the&#xD;
    individual analysis use-case realizations need to be reconciled.&amp;nbsp; Examine the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_analysis_class_DAF7CE03.html&quot; guid=&quot;{1E20603F-A5B8-42D5-BDBC-69DCE9C0FCDB}&quot;>Analysis&#xD;
    Class&lt;/a>es and the supporting associations defined for each of the analysis use-case realizations.&amp;nbsp; Identify and&#xD;
    resolve inconsistencies and remove any duplicates.&amp;nbsp; For example, two different analysis use-case realizations&#xD;
    might include an analysis class that is conceptually the same, but since the analysis classes were identified by&#xD;
    different &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.base_rup/roles/rup_designer_BA8DE74E.html&quot;&#xD;
    guid=&quot;{DB21F5EF-810B-4994-B120-79FA8774FA9D}&quot;>Designer&lt;/a>s, a different name was used.&amp;nbsp;&lt;br />&#xD;
     Note: Duplication across analysis use-case realizations can be significantly reduced if the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/roles/rup_software_architect_DB0BF177.html&quot; guid=&quot;{4AC346F0-E6FC-4D2C-8410-2EDF8DDDC91D}&quot;>Software&#xD;
    Architect&lt;/a> does a good job defining an initial architecture (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/tasks/architectural_analysis_2B9BE03.html&quot; guid=&quot;{8CB48402-D4C5-4E17-BB33-507315CB1BBF}&quot;>Task:&#xD;
    Architectural Analysis&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When reconciling the model elements, it is important to take into consideration their relationships.&amp;nbsp; If two&#xD;
    classes are merged, or one class replaces another, be sure to propagate the original class's relationships to the new&#xD;
    class.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.base_rup/roles/rup_software_architect_DB0BF177.html&quot;&#xD;
    guid=&quot;{4AC346F0-E6FC-4D2C-8410-2EDF8DDDC91D}&quot;>Software Architect&lt;/a> should participate in the reconciliation of the&#xD;
    analysis use-case realizations, as it requires an understanding of the business context, as well as some foresight of&#xD;
    the software architecture and design so that the analysis classes that best represent the problem and solution domains&#xD;
    can be selected.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on classes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/guidances/guidelines/analysis_class_7E97273E.html&quot; guid=&quot;2.2738948033145062E-306&quot;>Guideline: Analysis&#xD;
    Class&lt;/a>.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SfGModnnEdmO6L4XMImrsA" name=" Qualify Analysis Mechanisms " guid="_SfGModnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;XE_analysis_mechanisms__qualifying&quot; name=&quot;XE_analysis_mechanisms__qualifying&quot;>&lt;/a>&lt;a&#xD;
id=&quot;Qualify Analysis Mechanisms&quot; name=&quot;Qualify Analysis Mechanisms&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To identify analysis mechanisms (if any) used by the analysis classes. To provide additional information&#xD;
                about how the analysis classes apply the analysis mechanism.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    In this step, the analysis mechanisms that apply to each of the identified analysis classes is examined.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If an analysis class uses one or more analysis mechanisms, additional information captured now will assist the software&#xD;
    architect and designers to determine the capabilities required of the architectural design mechanisms. The number of&#xD;
    instances of the analysis class, their size, their frequency of access, and their expected life-span are among the&#xD;
    important properties that can assist the designers in selecting appropriate mechanisms.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each analysis mechanism used by an analysis class, qualify the relevant characteristics which need to be considered&#xD;
    when selecting appropriate design and implementation mechanisms. These will vary depending on the type of mechanism;&#xD;
    give ranges where appropriate, or when there is still much uncertainty. Different architectural mechanisms will have&#xD;
    different characteristics, so this information is purely descriptive and need only be as structured as necessary to&#xD;
    capture and convey the information. During analysis, this information is generally quite speculative, but capturing has&#xD;
    value since conjectural estimates can be revised as more information is uncovered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The analysis mechanisms used by a class and their associated characteristic need not be captured in a formal way; a&#xD;
    note attached to a diagram, or an extension to the description of the class is sufficient to convey the information.&#xD;
    The characteristic information at this point in the evolution of the class is quite fluid and speculative, so the&#xD;
    emphasis is on capturing expected values rather than on formalizing the definition of the mechanisms.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    The characteristics of the persistence mechanism used by a &lt;b>Flight&lt;/b> class could be qualified as:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Granularity&lt;/b>: 2 to 24 Kbytes per flight&#xD;
    &lt;/p>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Volume&lt;/b>: Up to 100,000&#xD;
    &lt;/p>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Access frequency&lt;/b>:&#xD;
    &lt;/p>&#xD;
    &lt;blockquote>&#xD;
        &lt;blockquote>&#xD;
            &lt;ul>&#xD;
                &lt;li>&#xD;
                    Creation/deletion: 100 per hour&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    Update: 3,000 updates per hour&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    Read: 9,000 access per hour&#xD;
                &lt;/li>&#xD;
            &lt;/ul>&#xD;
        &lt;/blockquote>&#xD;
    &lt;/blockquote>&#xD;
&lt;/blockquote>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    The characteristics of the persistence mechanism used by a &lt;b>Mission&lt;/b> class could be qualified as:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Granularity&lt;/b>: 2 to 3 Mbytes per mission&#xD;
    &lt;/p>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Volume&lt;/b>: 4&#xD;
    &lt;/p>&#xD;
    &lt;p class=&quot;example&quot;>&#xD;
        &lt;b>Access frequency&lt;/b>:&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;blockquote>&#xD;
    &lt;blockquote>&#xD;
        &lt;blockquote>&#xD;
            &lt;ul>&#xD;
                &lt;li>&#xD;
                    Creation/deletion: 1 per day&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    Update: 10 per day&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    Read: 100 per hour&#xD;
                &lt;/li>&#xD;
            &lt;/ul>&#xD;
        &lt;/blockquote>&#xD;
    &lt;/blockquote>&#xD;
&lt;/blockquote></sectionDescription>
  </sections>
  <sections xmi:id="_SfGMotnnEdmO6L4XMImrsA" name=" Establish Traceability " guid="_SfGMotnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Establish Traceability&quot; name=&quot;Establish Traceability&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To maintain the traceability relationships between the Analysis Model and other models.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    The project's project-specific guidelines specifies what traceability is required for Analysis Model elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, if there is a separate model of the user interface, then it might be useful to trace screens or other user&#xD;
    interface elements in that model to boundary classes in the Analysis Model.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_SfGMo9nnEdmO6L4XMImrsA" name=" Review the Results " guid="_SfGMo9nnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Review the Results&quot; name=&quot;Review the Results&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To verify that the analysis objects meet the functional requirements made on the system.&lt;br />&#xD;
                 To verify that the analysis objects and interactions are consistent.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Conduct a review informally at the end of the workshop, as a synchronization point, as well as the conclusion to the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/tasks/use_case_analysis_A6990185.html&quot;&#xD;
    guid=&quot;{28014615-A62F-452D-B821-30C7CAB0EC44}&quot;>Task: Use-Case Analysis&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Use the checklist(s) for work products output by this task.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To identify the classes which perform a use case's flow of events&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To distribute the use case behavior to those classes, using analysis use-case realizations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To identify the responsibilities, attributes and associations of the classes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To note the usage of architectural mechanisms&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
