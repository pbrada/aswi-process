<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_Vg8VEse0EdmYjcUf1_oIew" name="identifying_design_mechanisms_using_rsa,{98A3AB18-452B-4287-A38E-D5ED71F2A6A3}" guid="_Vg8VEse0EdmYjcUf1_oIew" changeDate="2006-04-28T09:58:36.106-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    Overview&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following steps are performed in this tool mentor:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#categorize%20clients&quot;>Categorize Clients of Analysis Mechanisms&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#inventory%20impl%20mechanisms&quot;>Inventory the Implementation Mechanisms&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Map%20Design%20Mechanisms%20to%20Implementation%20Mechanisms&quot;>Map Design Mechanisms to Implementation&#xD;
        Mechanisms&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#document%20mechanisms&quot;>Document Architectural Mechanisms&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;a href=&quot;#MoreInfo&quot;>Additional Tool Information&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;categorize clients&quot; name=&quot;categorize clients&quot;>Categorize Clients of Analysis Mechanisms&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    As part of the support for &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../tech.rsa/guidances/concepts/mdd_and_mda_8F9B3685.html&quot; guid=&quot;4.227832989444728E-303&quot;>Model&#xD;
    Driven Development and Model Driven Architecture&lt;/a>, the tool provides the capabilities to move from model to code&#xD;
    through the use of transformations. The main approach is based on a combination of type mappings (source model's&#xD;
    classes, their attributes, operations, relationships) and source model marking, defined in profiles. The reason for&#xD;
    this combined method is that in most of the cases the source model does not contain enough information to drive the&#xD;
    transformation. The architect has to add specific 'marks' which enables the transformation to perform. For more&#xD;
    information, refer to &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/guidances/concepts/analysis_mechanisms_36135B43.html&quot;&#xD;
    guid=&quot;9.76539014099254E-305&quot;>Analysis Mechanisms&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Depending on the profiles applied, the clients of analysis mechanisms will have to be 'marked' accordingly, using the&#xD;
    right stereotypes. For more information, see: &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot;&#xD;
    src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Applying Transformations.&lt;/i>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: even if you do not plan on using automated transformations you will find value in using profiles to 'mark' your&#xD;
    model. Base on the profile defined, this additional information added to a model can include stereotypes, properties&#xD;
    and constraints. By defining appropriate profiles, using them appropriately and communicating the meaning behind the&#xD;
    profiles â€“ you can add a great deal of precision to your models which can lead to more effective transformations&#xD;
    (regardless of whether the transformation is automated or performed manually).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The key steps to follow in creating a profile include:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Create a Profile Project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Add Stereotypes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Utilize extensions to connect the Stereotypes to UML elements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test by applying the Profile to a project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Document&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package as a plug-in&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distribute via RAS&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The tool&amp;nbsp;can assist you in finding the clients of each mechanism and document this information:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Find clients by right clicking on the mechanism and using Filters &amp;gt; Show Related Elements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use a Topic Diagram. See: &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot;&#xD;
        width=&quot;16&quot; />&lt;i>Topic Diagrams&lt;/i>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use a Browse Diagram. See: &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot;&#xD;
        width=&quot;16&quot; />&lt;i>Browse Diagrams&lt;/i>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use &amp;lt;&amp;lt;perspective&amp;gt;&amp;gt; packages to provide a view of the mechanisms that are used.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use &amp;lt;&amp;lt;framework&amp;gt;&amp;gt; packages to provide a view of the internal workings of the mechanisms.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Within the analysis mechanism's framework package, the clients are shown on a Client Usage Diagram, where the clients&#xD;
    have a dependency to the analysis mechanism clas.&amp;nbsp;As part of the same framework package, create a profile&#xD;
    component for each characteristic profile needed. Use the Documentation Tab in the class's Properties View to document&#xD;
    the usage profiles. Group the clients according to their use of characteristic profiles and show the relationships&#xD;
    between clients and profile classes on a Profile Usage Diagram.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;inventory impl mechanisms&quot; name=&quot;inventory impl mechanisms&quot;>Inventory the Implementation Mechanisms&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The RAS repository is a good place for collecting all the potential candidates for reuse, especially patterns. In&#xD;
    addition, a RAS asset can be a model - which may provide a representation of the Implementation Mechanism. It would&#xD;
    then be possible to store the model representations of your implementation mechanisms in a shared RAS repository and&#xD;
    have the team query this repository as needed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See: &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>RAS&#xD;
    Assets&lt;/i>&amp;nbsp;and &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>RAS&#xD;
    Pattern Assets&lt;/i>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Map Design Mechanisms to Implementation Mechanisms&quot;&#xD;
    name=&quot;Map Design Mechanisms to Implementation Mechanisms&quot;>Map Design Mechanisms to Implementation Mechanisms&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Note: some of the tool capabilities mentioned in this section are not supported in RSM.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If a Model Driven Development approach is taken, this step is performed with the assistance of the transformation&#xD;
    capabilities. There are two kinds of transformations: transforms and patterns. A transform is &quot;a transformation&#xD;
    optimized for batch processing, primarily across metamodels, models and levels of abstraction&quot;.&amp;nbsp;A pattern is a&#xD;
    special kind of transformation, &quot;optimized for interactive, piecewise elaboration primarily in a single metamodel and&#xD;
    within the same level of abstraction, and often within the same model&quot;. See the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../tech.rsa/guidances/concepts/mdd_and_mda_8F9B3685.html&quot; guid=&quot;4.227832989444728E-303&quot;>Model&#xD;
    Driven Development and Model Driven Architecture&lt;/a> and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/analysis_mechanisms_36135B43.html&quot; guid=&quot;9.76539014099254E-305&quot;>Analysis&#xD;
    Mechanisms&lt;/a> concepts.&#xD;
&lt;/p>It may turn out that there are a number of implementation mechanisms that would be appropriate for realizing the design&#xD;
mechanism. One additional factor that should be taken into consideration as you make the selection is whether the&#xD;
implementation mechanism can be realized via a transformation. Also, watch for implementation mechanisms that are reused&#xD;
often in your development projects. These are good candidates for automation via patterns and transformations. As part of&#xD;
the analysis as whether to automate the mapping between the design and implementation mechanism you will need to calculate&#xD;
the return on the investment needed to automate. &#xD;
&lt;p>&#xD;
    Depending on the profiles applied to the model, a number of transforms are available &quot;out of the box&quot;. For the more&#xD;
    advanced user,&amp;nbsp;the tool&amp;nbsp;provides a framework for building customized transformations. See &lt;img height=&quot;16&quot;&#xD;
    alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Applying Patterns&lt;/i> and &lt;img&#xD;
    height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Applying&#xD;
    Transformations&lt;/i>. &amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a more code-centric development environment, some of the mappings could be discovered starting with the existent&#xD;
    code and using the pattern and anti-pattern detection capabilities which are part of the support for Architectural&#xD;
    Analysis. See the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.rsa/guidances/guidelines/architectural_discovery,_analysis_and_control_2153BFC.html&quot;&#xD;
    guid=&quot;2.843707701997842E-305&quot;>Architectural Discovery, Analysis and Control&lt;/a> guidelines.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once the mechanisms have been identified, create an Architecture Mechanisms Mapping Diagram, containing the analysis,&#xD;
    design and implementation mechanisms and the realization relationships between them.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;document mechanisms&quot; name=&quot;document mechanisms&quot;>Document Architectural Mechanisms&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Mechanisms themselves are Design Model elements (such as Design Package, Design Class, and Design Subsystem) that can&#xD;
    be represented in the Design Model as part of their respective design tasks. See &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/tasks/identify_design_elements_E884AB82.html&quot;&#xD;
    guid=&quot;{97D7343A-6993-4AB7-8F86-4DAC8C9075C8}&quot;>Identify Design Elements&lt;/a> for guidelines on creating Design Model&#xD;
    elements. Note that a pattern is particularly well suited to documenting a design and implementation mechanism, because&#xD;
    it allows clients of the mechanism to expand the pattern and to generate much of the required design and code. See:&#xD;
    &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Authoring Patterns&lt;/i>&#xD;
    and &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Packaging Assets&#xD;
    for Reuse&lt;/i> .&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Other options for documenting the mechanisms include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Using notes on diagrams&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Additional diagrams that specify the static and dynamic aspects of the mechanism&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Using constraints&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Using profiles&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deploying models of mechanisms as RAS assets (use the RAS packaging mechanism to hold documentation about the asset&#xD;
        in addition to the asset itself)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    An additional aspect to consider when documenting is to define code rules that can be used to enforce how the mechanism&#xD;
    is used. Once the guidelines have been defined, use Code Review to automate the application of the guidelines to ensure&#xD;
    adherence to the specified usage model.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;MoreInfo&quot; name=&quot;MoreInfo&quot;>Additional Tool Information&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Tutorials:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Applying&amp;nbsp;a&#xD;
        Pattern&lt;/i>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Create a&#xD;
        Pattern&amp;nbsp;&lt;/i>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Samples:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>RAS Assets - RAS&#xD;
        Asset to Import/Export&lt;/i>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;img height=&quot;16&quot; alt=&quot;help book icon&quot; src=&quot;../../../core.base_rup/resources/helpbook.gif&quot; width=&quot;16&quot; />&lt;i>Patterns - Simple&#xD;
        UML Model&lt;/i>&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
