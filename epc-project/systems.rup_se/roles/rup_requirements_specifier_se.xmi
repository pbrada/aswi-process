<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:RoleDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="__6gN0N0MEdmhp5PapAYf4w" name="rup_requirements_specifier_se,{F6788F33-1365-4F71-934F-DBAD427A8F78}" guid="__6gN0N0MEdmhp5PapAYf4w" changeDate="2005-11-10T12:04:40.682-0800" version="7.1.0">
  <mainDescription>&lt;p class=&quot;systemsengineering&quot;>&#xD;
    In the systems engineering context, the Requirements Specifier produces &quot;black-box&quot; use-case descriptions, which&#xD;
    specify what the system does, without revealing information about system internals. In systems engineering the concern&#xD;
    is also with the flow-down of nonfunctional requirements to subsystems, and the Requirements Specifier uses the&#xD;
    supplementary specifications to drive refinement of the allocation of nonfunctional requirements, for example,&#xD;
    performance requirements, to use-cases.&amp;nbsp;&#xD;
&lt;/p></mainDescription>
  <skills>&lt;p class=&quot;systemsengineering&quot;>&#xD;
    For systems engineering, good domain knowledge is definitely required, to enable informed choices about actor-system&#xD;
    use-case association refinements (as part of the emerging system context definition). The Requirements Specifier also&#xD;
    needs a good working knowledge of systems engineering techniques, as a basis for reasoning about the allocation of&#xD;
    nonfunctional requirements to use cases.&amp;nbsp;&#xD;
&lt;/p></skills>
</org.eclipse.epf.uma:RoleDescription>
