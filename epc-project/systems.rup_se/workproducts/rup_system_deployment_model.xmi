<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_-CNPcN0MEdmhp5PapAYf4w" name="rup_system_deployment_model,{F3EF5651-065C-478F-81CC-D55D90FF0CBC}" guid="_-CNPcN0MEdmhp5PapAYf4w" changeDate="2005-11-11T19:34:01.847-0800" version="7.1.0">
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The purpose of the &lt;i>System Deployment Model&lt;/i> is to capture the decomposition of the system into elements which&#xD;
    host the processing. This is done at several levels of abstraction, namely Locality (the most abstract), Descriptor,&#xD;
    and Implementation (the least abstract) - these levels are more or less equivalent to the Conceptual, Specification and&#xD;
    Physical levels described for the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_deployment_model_57DF1DF5.html&quot;&#xD;
    guid=&quot;{5981B6BE-2FD1-4984-AA94-2F7428439BA6}&quot;>Artifact: Deployment Model&lt;/a> (which is used when the application of the&#xD;
    RUP is limited to software development).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;b>Locality&lt;/b> Model represents the initial, abstract, &lt;i>&lt;b>physical&lt;/b>&lt;/i> partitioning and distribution of the&#xD;
    system, and is concerned with the physical resources of the system (nodes, devices, sensors and their physical&#xD;
    connections and interfaces, and the physical characteristics of these, for example weight, heat generation, power&#xD;
    consumption, vibration, and so on). A locality expresses notionally where processing occurs (the semantics of locality&#xD;
    implies a tighter grouping of resources) without defining exact geographic location or how the processing capability is&#xD;
    to be realized.&amp;nbsp;It is conceivable for very complex, very large systems, that the initial Locality Model might have&#xD;
    localities that decompose to finer-grained localities (just as a subsystem can contain subsystems). At the&#xD;
    &lt;b>Descriptor&lt;/b> level, the &lt;i>types&lt;/i> of processing resources at a locality are specified - these are &lt;i>nodes&lt;/i>,&#xD;
    which might include computing devices (servers, workstations, and so on), people, or other electro-mechanical devices.&#xD;
    Finally, at the &lt;b>Implementation&lt;/b> level, the actual hardware selection is made, numbers of role instances (in the&#xD;
    case of human resources) determined, with a defined set of configurations, capacity, power and other environmental&#xD;
    requirements, cost, and performance. See &lt;a href=&quot;./../../systems.rup_se/tasks/resources/md_se_sysdeplmod.htm&quot;>Guidelines:&#xD;
    System Deployment Model&lt;/a> for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The System Deployment Model is also used to record the subsystem operations that are hosted at each locality - this&#xD;
    determines the computing requirements to be supported at the locality. Based on the behavior to be supported at the&#xD;
    localities, collaborations of localities can be constructed (and represented in interaction diagrams). These help&#xD;
    characterize the connections between the localities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each locality in the System Deployment Model has an attached description of derived supplementary requirements (derived&#xD;
    from system supplementary specifications) which specify quality (reliability, maintainability, safety, and so forth),&#xD;
    physical and environmental requirements, and development constraints (cost, technical risk, and so forth). From these&#xD;
    requirements, the actual characteristics (of each locality) are determined; obviously, these are chosen to meet the&#xD;
    explicit requirements at least, but can exceed the requirements if sound engineering practice dictates this - for&#xD;
    example, to cope with unexpected capacity demands.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Localities are characterized with:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Quality tags, such as reliability, availability, performance, capacity, and so on&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Management tags, such as cost and technical risk&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Connections are characterized with:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Link parameters, such as data rate, supported protocols, physical flow rate&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Management tags, such as cost and technical risk&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  <representationOptions>UML Representation: &lt;br />&#xD;
&lt;br />&#xD;
Model, stereotyped as &quot;system deployment model.&quot; &lt;br />&#xD;
&lt;br />&#xD;
&lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The System Deployment Model is mandatory in the systems engineering context. If the system is not complex (in its&#xD;
    distribution) or the system architect is constrained to use existing physical infrastructure, for example, the creation&#xD;
    of multiple levels of abstraction in the model might not be warranted.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
