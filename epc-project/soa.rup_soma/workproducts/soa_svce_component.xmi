<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_q_k50PS3EdmIX5Pw7v8pRw" name="soa_svce_component,{447385A0-E565-4C87-A082-402AF21CA088}" guid="_q_k50PS3EdmIX5Pw7v8pRw" changeDate="2006-10-01T21:22:36.251-0700" version="7.1.0">
  <mainDescription>&lt;p>&#xD;
    The Service Component is the primary realization artifact for services defined during Service Specification. In&#xD;
    describing the realization of Subsystems during such specification activities patterns are used that facilitate the&#xD;
    provision of both functional and non-functional requirements (example patterns are described in &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/guidances/guidelines/service_component_patterns_A4634107.html&quot;&#xD;
    guid=&quot;_p_6wsExREdumvs0NuKFubw&quot;>Guideline: Service Component Patterns&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The choice of implementation technologies for Service Components is not prescribed by this work product description;&#xD;
    however the emerging Service Component Architecture (SCA) [1] , and related Service Data Objects (SDO) [2], standards&#xD;
    are intended specifically to play this role and have already described bindings for different platforms and&#xD;
    implementation technologies. The SCA specifications are also the subject of an open source reference implementation&#xD;
    [3].&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    References&#xD;
&lt;/h4>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Service Component Architecture Specifications &lt;a&#xD;
        href=&quot;http://www.ibm.com/developerworks/library/specification/ws-sca/&quot;>http://www.ibm.com/developerworks/library/specification/ws-sca/&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Data Objects &lt;a&#xD;
        href=&quot;http://www.ibm.com/developerworks/library/specification/j-commonj-sdowmt/index.html&quot;>http://www.ibm.com/developerworks/library/specification/j-commonj-sdowmt/index.html&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Apache Tuscany project &lt;a href=&quot;http://incubator.apache.org/tuscany/&quot;>http://incubator.apache.org/tuscany/&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ol></mainDescription>
  <purpose>&lt;a id=&quot;XE_service_component__artifact_definition&quot; name=&quot;XE_service_component__artifact_definition&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot;&#xD;
name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Service Components are key to the development of a service-oriented solution as they provide the implementation of the&#xD;
    services identified within the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/workproducts/soa_service_model_623494B9.html&quot;&#xD;
    guid=&quot;{E24679B7-19F1-483B-A1F1-578839C43888}&quot;>Artifact: Service Model&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following people use the service component:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Implementers of the services&lt;/b>, to describe the model elements that provide the behavioral implementation of&#xD;
        the service.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Service Component shall provide a complete encapsulation of its behavior and only expose those capabilities defined&#xD;
    by the Service Specification. Where the Service Specification also includes behavioral specifications in the form of&#xD;
    protocol state machines, interactions, or activities, the Service Component shall ensure the implementation complies&#xD;
    with this behavior.&#xD;
&lt;/p></purpose>
  <representationOptions>UML Representation: &#xD;
&lt;p>&#xD;
    UML 2.0 Component, stereotyped as &amp;lt;&amp;lt;Service Component&amp;gt;&amp;gt;.&amp;nbsp;Note that UML 2.0 does provide a stereotype,&#xD;
    within the &quot;Intermediate&quot; profile, called &amp;lt;&amp;lt;service&amp;gt;&amp;gt;, however this is simply defined as a &quot;A stateless,&#xD;
    functional component (computes a value)&quot; which does not convey the meaning implied by this model element.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Service Components represent the realization of Services identified in the Service Model and described by the Service&#xD;
    Specification; however as the granularity of a service tends to be quite large a Service Component may be further&#xD;
    decomposed into components or coarse-grained &lt;i>&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_design_class_B33BD5E5.html&quot; guid=&quot;{952A9CE9-D5A3-43AC-980D-0B9298F3872E}&quot;>Design&#xD;
    Classes&lt;/a>&lt;/i> within its implementation. It is likely therefore that different specific forms of service are required&#xD;
    for this implementation. In particular during the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_realization_66984C2B.html&quot; guid=&quot;_V6uMMCwUEduKcvYAyaKSaA&quot;>Task: Document&#xD;
    Service Realization Decisions&lt;/a>&amp;nbsp;patterns are identified that use the following additional stereotypes in&#xD;
    addition to the use of standard component, classes and elements of the RUP &lt;i>&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_design_model_2830034D.html&quot; guid=&quot;{8CDAEAD4-5E84-4F50-87FD-3240ED047DE7}&quot;>Design&#xD;
    Model&lt;/a>&lt;/i>:&#xD;
&lt;/p>&#xD;
&lt;table&#xD;
style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
 cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th width=&quot;48&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    Icon&#xD;
                &lt;/p>&#xD;
            &lt;/th>&#xD;
            &lt;th width=&quot;15%&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    Name&#xD;
                &lt;/p>&#xD;
            &lt;/th>&#xD;
            &lt;th width=&quot;25%&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    UML Representation&#xD;
                &lt;/p>&#xD;
            &lt;/th>&#xD;
            &lt;th width=&quot;55%&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    Description&#xD;
                &lt;/p>&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;48&quot;>&#xD;
                &lt;img height=&quot;24&quot; alt=&quot;icon&quot; src=&quot;resources/soa_svc_facade_component_16.gif&quot; width=&quot;24&quot; border=&quot;0&quot; />&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;15%&quot;>&#xD;
                facade&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;25%&quot;>&#xD;
                stereotype on Class or Component.&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;55%&quot;>&#xD;
                Used to denote the component acting as the facade for the implementation of the service; in general there&#xD;
                is one facade component for each realized Service Specification.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;48&quot;>&#xD;
                &lt;img height=&quot;24&quot; alt=&quot;icon&quot; src=&quot;resources/soa_svc_mediation_component_16.gif&quot; width=&quot;24&quot; border=&quot;0&quot; />&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;15%&quot;>&#xD;
                mediator&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;25%&quot;>&#xD;
                stereotype on Class or Component.&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;55%&quot;>&#xD;
                Used in situations where there may be one or more implementations for a given service operation, the&#xD;
                mediator is called by the facade to identify and call the correct implementation component.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;48&quot;>&#xD;
                &lt;img height=&quot;24&quot; alt=&quot;icon&quot; src=&quot;resources/soa_svc_data_component_16.gif&quot; width=&quot;24&quot; border=&quot;0&quot; />&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;15%&quot;>&#xD;
                data access&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;25%&quot;>&#xD;
                stereotype on Class or Component.&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;55%&quot;>&#xD;
                Used to denote a data access component, this component is responsible for the access and management of&#xD;
                persistent data for the service implementation.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
