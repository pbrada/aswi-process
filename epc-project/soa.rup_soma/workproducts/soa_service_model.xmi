<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_qt6iEPS3EdmIX5Pw7v8pRw" name="soa_service_model,{E24679B7-19F1-483B-A1F1-578839C43888}" guid="_qt6iEPS3EdmIX5Pw7v8pRw" changeDate="2006-10-02T19:21:13.749-0700" version="7.1.0">
  <mainDescription>&lt;p>&#xD;
    The Service Model captures the details of a set of services over multiple iterations, progressively elaborating on the&#xD;
    detail. The service model may be used for different levels of scope:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Service-scoped development&lt;/strong> where the scope of the project is to develop the service independently&#xD;
        (as much as possible) from other services. The modeling would therefore encompass the use cases, architecture,&#xD;
        design and implementation models as a vertical slice for the one service.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Project-scoped development&lt;/strong> where a project involves the specification of a number of services in&#xD;
        support of a set of application requirements, in this case the scope is broadened to the application level and may&#xD;
        involve a number of services. In effect there is a set of application level models for use cases and architecture&#xD;
        and then a set of service specific design and implementation models.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Enterprise-scoped development&lt;/strong>, or service portfolio management, where the scope is only to capture&#xD;
        the service specifications and logical partitioning but at an enterprise-wide scope. This allows designers and&#xD;
        architects to make wide ranging decisions about the entire portfolio, yet separate projects are required to develop&#xD;
        the design and implementation models for the identified services (and client applications).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The following diagram demonstrates the key aspects of the Service Model, abstractly, and the relationship between them&#xD;
    and the Identification, Specification and Realization activities.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img height=&quot;385&quot; alt=&quot;&quot; src=&quot;./resources/soma_service_model.png&quot; width=&quot;458&quot; />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Identification Elements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The first elaboration begins with a list of candidate services in the &lt;strong>Service Portfolio&lt;/strong> created during&#xD;
    the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/capabilitypatterns/existing_asset_analysis_4B247136.html&quot;&#xD;
    guid=&quot;_7ZObICxuEdupJ8eX04kqLQ&quot;>Activity: Existing Asset Analysis&lt;/a>, using techniques such as process decomposition&#xD;
    (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../extend.bus_model/guidances/concepts/business_process_decomposition_C9A38841.html&quot;&#xD;
    guid=&quot;_vHtFUC7CEdu64PK-GeN94Q&quot;>Concept: Business Process Decomposition&lt;/a>). These services are categorized according&#xD;
    to their functional area and the technique used to identify them. It is key to note that the Service Portfolio we&#xD;
    describe here is a project-specific portfolio and contains the candidate services identified using the different&#xD;
    analysis techniques described in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/capabilitypatterns/existing_asset_analysis_4B247136.html&quot;&#xD;
    guid=&quot;_7ZObICxuEdupJ8eX04kqLQ&quot;>Activity: Existing Asset Analysis&lt;/a>. Services identified at this stage are often only&#xD;
    provided as a name and possible functional description, A simple document containing this list of services may often&#xD;
    suffice, however if the UML approach is used then the portfolio is maintained as a collection of &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_spec_37E89A91.html&quot;&#xD;
    guid=&quot;{20F06B5E-95D5-422C-AB68-7C213D28533A}&quot;>Artifact: Service Specification&lt;/a>&amp;nbsp;and may be produced using &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/guidances/reports/service_portfolio_6DB30D0E.html&quot;&#xD;
    guid=&quot;1.0870125010094147E-305&quot;>Report: Service Portfolio&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As soon as possible services in the list are organized into a &lt;strong>Hierarchy&lt;/strong> using a functional&#xD;
    classification scheme (typically based on functional areas identified during domain decomposition). Such a hierarchy&#xD;
    demonstrates a primary classification scheme for services&amp;nbsp;- that of a process invocation dependency and as such is&#xD;
    valuable in understanding the relationships between services identified during decomposition activities. Again, the&#xD;
    representation of the hierarchy can be either in a document, spreadsheet or UML model (in which cases we would tend to&#xD;
    use the &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_partn_DC19AD3F.html&quot;&#xD;
    guid=&quot;{C302AF5A-1591-4F26-94E5-C412866553BF}&quot;>Artifact: Service Partition&lt;/a>&amp;nbsp;to model functional areas).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that it is also possible that the term Service Portfolio represents the enterprise-wide service portoflio (as&#xD;
    expressed in &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/concepts/service_portfolio_52FD64AC.html&quot; guid=&quot;1.851952881072508E-305&quot;>Concept:&#xD;
    Service Portfolio&lt;/a>) which has a lifecycle beyond that of the project-specific portfolio. Indeed there is a&#xD;
    relationship between the enterprise and project portfolio as show in the figure below.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;139&quot; alt=&quot;&quot; src=&quot;./resources/portfolio_lifecycle.png&quot; width=&quot;343&quot; />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Specification Elements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    One of the first steps within &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/capabilitypatterns/soa_specify_services_D308DA60.html&quot;&#xD;
    guid=&quot;_zL1rsEn2EduC74V7YHXTOQ&quot;>Activity: Perform Service Specification&lt;/a>&amp;nbsp;is to decide up on, and document, the&#xD;
    &lt;strong>Exposure&lt;/strong> of services - that is to document those candidate services that are to be developed and&#xD;
    exposed as true services. One key technique is the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_qualification_E0D920A6.html&quot; guid=&quot;_mHhK8CwUEduKcvYAyaKSaA&quot;>Task: Apply&#xD;
    Services Litmus Tests&lt;/a> which provides specific guidance on how to evaluate services for exposure. In terms of the&#xD;
    UML representation of the service model the Service Specifications that were developed during Identification are&#xD;
    marked, using the status property, to exposed and then detailed further within the model. During analysis of services&#xD;
    for exposure it is possible to start grouping services into logical offerings and this may be modeled in UML using the&#xD;
    &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_provider_C00D3410.html&quot;&#xD;
    guid=&quot;{8427751F-3C14-4CEB-9816-5112BDB91EED}&quot;>Artifact: Service Provider&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In documenting service specifications it is key to capture all Service Dependencies for various purposes - for example&#xD;
    services with a high number of dependencies are harder to reuse in different environments, whereas services with many&#xD;
    dependents indicate core capabilities. Service dependencies may be captured textually, often in a tabular form (see &lt;a&#xD;
    class=&quot;elementlinkwithtype&quot; href=&quot;./../../soa.rup_soma/guidances/reports/service_dependencies_D8D49422.html&quot;&#xD;
    guid=&quot;1.2262765587812462E-305&quot;>Report: Service Dependencies&lt;/a>) or they may be modeled using the UML representation of&#xD;
    the service model. It is also important to realize that some dependencies are due to inter-service communication and&#xD;
    there are then specific details associated with this dependency (required communication protocols, security, etc) which&#xD;
    can be documented using the UML model and specifically the &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_chan_BB29CCA8.html&quot;&#xD;
    guid=&quot;{95AA7C70-6259-4627-B705-6A67E33A47BC}&quot;>Artifact: Service Channel&lt;/a>&amp;nbsp;in collaboration models.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In defining services it is common to recognize composite services that exist only to choreograph a set of more&#xD;
    fine-grained services, this &lt;strong>Composition and Flow&lt;/strong> should describe the relationship between the&#xD;
    composite and composed services as well as the dependencies between services expressed by the flow across them. In the&#xD;
    UML representation this composition can be well described (Composite Classes) as well as the flow (Activities,&#xD;
    Interactions) and the techniques are described in &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/concepts/service_composition_and_choreography_41EDEECB.html&quot;&#xD;
    guid=&quot;7.723783423994501E-306&quot;>Concept: Service Composition and Choreography&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is key to also capture the &lt;strong>Non-Functional Requirements&lt;/strong> for services (where many of the topics above&#xD;
    focus more on the functional requirements) and capture as much detail as possible on Quality of Service, Policy and so&#xD;
    forth. In this area it is possible to express the requirements in a textual document, rather more difficult to express&#xD;
    directly in UML, but may be more easily expressed using a requirements management product. When using the UML&#xD;
    representation of the service model we recommend the use of both the&amp;nbsp;existing RUP &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_software_architecture_document_C367485C.html&quot;&#xD;
    guid=&quot;{6F49641A-ED10-47B5-9E5D-3F90A6BF3006}&quot;>Artifact: Software Architecture Document&lt;/a>&amp;nbsp;and &lt;a&#xD;
    class=&quot;elementlinkwithtype&quot; href=&quot;./../../core.base_rup/workproducts/rup_supplementary_specification_F5ACAA22.html&quot;&#xD;
    guid=&quot;{B16C2941-791C-44E6-B353-354109B5C9DE}&quot;>Artifact: Supplementary Specifications&lt;/a>&amp;nbsp;to capture non-functional&#xD;
    requirements. One aspect of the non-functional solution architecture concerns the &lt;strong>Distribution and&#xD;
    Availablity&lt;/strong> of services which can be documented using the UML model and in particular the &lt;a&#xD;
    class=&quot;elementlinkwithtype&quot; href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_partn_DC19AD3F.html&quot;&#xD;
    guid=&quot;{C302AF5A-1591-4F26-94E5-C412866553BF}&quot;>Artifact: Service Partition&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_gtway_4D9ADED2.html&quot;&#xD;
    guid=&quot;{B0BF4414-0382-4605-9EE9-82F0DEC7292C}&quot;>Artifact: Service Gateway&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Obviously the detailing of &lt;strong>Service Messages&lt;/strong> is key to the development of usable service&#xD;
    specifications. These messages may be derived from high-level models or may be directly expressed in some&#xD;
    technology-specific form (such as XML Schema). Whether the messages are described textually, in a schema language, or&#xD;
    in the UML model these message definitions should be aware of key considerations that are documented in &lt;a&#xD;
    class=&quot;elementlinkwithtype&quot; href=&quot;./../../soa.rup_soma/tasks/soa_service_message_design_D1BA096D.html&quot;&#xD;
    guid=&quot;_ObqZoCwUEduKcvYAyaKSaA&quot;>Task: Message Design&lt;/a>&amp;nbsp;and the corresponding &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/guidelines/message_attachments_AE665E63.html&quot;&#xD;
    guid=&quot;7.676056734461877E-306&quot;>Guideline: Message Attachments&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While it is true that in an SOA we strive to make services stateless it is not always possible or even preferrable to&#xD;
    make this a fixed goal; the topic of &lt;strong>State Management Decisions&lt;/strong> is provided to allow the designer time&#xD;
    to reflect on the trade-offs, the cost and benefit of state management in services. In support of these decisions the&#xD;
    topic &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/guidelines/state_management_for_services_E4156B50.html&quot;&#xD;
    guid=&quot;4.2228409903513537E-306&quot;>Guideline: State Management for Services&lt;/a>&amp;nbsp;provides examples of kinds of state&#xD;
    that often does have to be maintained by a service.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Realization Elements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The realization of services concerns itself primarily with three areas, the decisions concerning the actual realization&#xD;
    of services, the identification of subsystems and components to realize the service specifications and finally the&#xD;
    development of these components.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In documenting &lt;strong>Realization Decisions&lt;/strong> it is important to have a reasoned and detailed rationale for the&#xD;
    choice of sourcing and development approach as described in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_realization_66984C2B.html&quot; guid=&quot;_V6uMMCwUEduKcvYAyaKSaA&quot;>Task: Document&#xD;
    Service Realization Decisions&lt;/a>. Again, in a similar way to the Non-Functional Requirements above it is often hard to&#xD;
    express these decisions (certainly in detail) in the UML representation and so we expect that the choices made for each&#xD;
    service to be documented separately.&#xD;
&lt;/p></mainDescription>
  <purpose>&lt;p>&#xD;
    The service model is an abstraction of the IT services implemented within an enterprise and supporting the development&#xD;
    of one or more service-oriented solutions. It is used to conceive and document the design of the software services. It&#xD;
    is a comprehensive, composite work product encompassing all services, providers, specifications, partitions, messages,&#xD;
    collaborations, and the relationships between them. It is needed to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify candidate services and capture decisions about which services will actually be exposed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specify the contract between the service provider and the consumer of the services&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Associate Services with the components needed to realize these services&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  <impactOfNotHaving>&lt;span&#xD;
style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>Without&#xD;
this product it would be difficult to properly define services and specify the components needed to realize them.&lt;span&#xD;
style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> This could lead to gaps in the service portfolio, proliferation of unnecessary&#xD;
services, inconsistencies in how services were exposed, and inconsistencies in the design of components needed to realize&#xD;
the services.&lt;/span></impactOfNotHaving>
  <reasonsForNotNeeding>&lt;span&#xD;
style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>This&#xD;
product is not needed if we do not need to externalize service descriptions at the edge of a significant organizational&#xD;
boundary (i.e. at the edge of a major line of business within an enterprise, or at the edge of the enterprise).&lt;/span></reasonsForNotNeeding>
  <briefOutline>&lt;p>&#xD;
    The service model is often a heterogenous collection of physical assets, including UML models, documents and possibly&#xD;
    entries in a requirements management tool. However, the service model has to contain the following logical elements&#xD;
    (see main description).&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Service Portfolio&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Hierarchy&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Exposure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Dependencies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Composition &amp;amp; Flow&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Non-Functional Requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Messages&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        State Management Decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Realization Decisions&#xD;
    &lt;/li>&#xD;
&lt;/ul></briefOutline>
  <representationOptions>&lt;p>&#xD;
    The Service Model is a large work product and is usually developed using a number of techniques; for example UML models&#xD;
    are used to describe service elements, however the presentation of the work product may be a document containing&#xD;
    diagrams from the UML model. The level to which any particular project relies on the UML models will depend on the&#xD;
    skills and background of the staff involved and also the expectations of the project stakeholders. In general we&#xD;
    recommend that as much of the model be developed as possible using the UML representation and be integrated with&#xD;
    additional content (especially descriptive text) and presented in its final form as a document.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For the UML Representation see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/templates/soa_service_model_uml_73836D53.html&quot;&#xD;
    guid=&quot;_-bpYcE3aEdupj44ytPg0iA&quot;>Template: Service Model in UML&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For the Documentation Representation see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/guidances/templates/soa_service_model_doc_950782A6.html&quot;&#xD;
    guid=&quot;_ZYHekE3eEduBbftZUgDxnQ&quot;>Template: Service Model in Word&lt;/a>.&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
