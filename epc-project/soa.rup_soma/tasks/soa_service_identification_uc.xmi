<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="--EOHdMLea1W2Nl0ezA92IA" name="soa_service_identification_uc,_GkKR4CwUEduKcvYAyaKSaA" guid="--EOHdMLea1W2Nl0ezA92IA" changeDate="2006-09-26T23:15:49.058-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    This task uses &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../extend.bus_model/workproducts/rup_business_use_case_realization_55CAF00D.html&quot;&#xD;
    guid=&quot;{47F095EB-E651-4A34-B75B-BACE38ED90C7}&quot;>Artifact: Business Use-Case Realization&lt;/a>&amp;nbsp;as input and identifies&#xD;
    a set of candidate services which are included in the project service portfolio. These candidate services may yet&#xD;
    require additional refinement, however the steps included here provide an effective manner in which to produce an&#xD;
    initial set of &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/workproducts/soa_svce_model_svce_spec_37E89A91.html&quot;&#xD;
    guid=&quot;{20F06B5E-95D5-422C-AB68-7C213D28533A}&quot;>Artifact: Service Specification&lt;/a>.&#xD;
&lt;/p></mainDescription>
  <sections xmi:id="_8GrEAC0_EduMFMCuL1mFMw" name="Identify Candidate Services from Business Use Cases" guid="_8GrEAC0_EduMFMCuL1mFMw">
    <sectionDescription>&lt;p>&#xD;
    In the development of more traditional component-based and object-oriented solutions, there tends to be a set of&#xD;
    transformations across levels of abstraction and adding levels of detail from Use Cases down to system design. This is&#xD;
    especially true when you take a Business Use Case as the starting point, as demonstrated in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../extend.bus_model/guidances/guidelines/going_from_business_models_to_systems_3B55D8F4.html&quot;&#xD;
    guid=&quot;1.3212739617274792E-306&quot;>Guideline: Going from Business Models to Systems&lt;/a>&lt;i>;&lt;/i> where the guidance&#xD;
    demonstrates how to get from Business Use Cases to System Use Cases, we still have to develop an actual design model&#xD;
    from there.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Fortunately, we can also draw a parallel to the guideline provided for going to system-use cases in defining how a&#xD;
    service model can be derived from a Business Use Case Model, as shown below. In general the approach is to create a&#xD;
    candidate service for each operation defined on a &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../extend.bus_model/workproducts/rup_business_worker_75AE475B.html&quot;&#xD;
    guid=&quot;{6C6AD4E6-C7B4-42E1-A3D1-FAC9DC2415B5}&quot;>Artifact: Business Worker&lt;/a>&amp;nbsp;in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../extend.bus_model/workproducts/rup_business_analysis_model_9449F63A.html&quot;&#xD;
    guid=&quot;{CF53445C-3351-46C6-810E-8251830029A7}&quot;>Artifact: Business Analysis Model&lt;/a>. There exists a&#xD;
    distinct&amp;nbsp;parallel here to the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_bp_D5A863FB.html&quot; guid=&quot;_am-VYCwTEduKcvYAyaKSaA&quot;>Task:&#xD;
    Business Process Analysis&lt;/a>&amp;nbsp;where individual tasks in a process model are identified as candidate services.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;385&quot; alt=&quot;Diagram is described in the textual content.&quot; src=&quot;./resources/soa_svce_identification-02.gif&quot;&#xD;
    width=&quot;481&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This more direct connection between the business-analysis model and the service model allows for not only services that&#xD;
    can be seen to support the business needs, but by having less transformations between the expression of business needs&#xD;
    and the solution, we can more effectively respond to change in the Business Use Case or Analysis Models. Another&#xD;
    important aspect is that as the Business Use Case model also includes the Business Goals that are driving the business,&#xD;
    it is now much easier to actually identify the alignment between Services and Goals. For example, it is now possible to&#xD;
    list, for any Service Specification, all the Business Goals to which it contributes. For any Business Goal we can list&#xD;
    the Services actually deployed in our IT organization that contribute to the goal , by following the connection from&#xD;
    service to service specification.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_JqTcsE3wEdu1Eq153Mo3sg" name="Refine Candidate Service Specifications" guid="_JqTcsE3wEdu1Eq153Mo3sg">
    <sectionDescription>&lt;p>&#xD;
    In some cases the set of operations defined in the business use case realization may more correctly reflect a&#xD;
    &lt;em>conversation&lt;/em> between parties related to a single service than it does to a set of distinct services; in such a&#xD;
    case the operations may be aggregated onto a single service specification (as shown below). The drawback to this&#xD;
    approach is that it requires more detailed analysis and understanding of the use case realization, and the role of the&#xD;
    workers within it, to identify this as a requirement.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;285&quot; alt=&quot;&quot; src=&quot;./resources/soa_svce_identification-02b.gif&quot; width=&quot;481&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    By conversation we mean that often the actual completion of a service requires multiple interactions between parties;&#xD;
    for example, if we&amp;nbsp;examine the service 'Place Order' we might actually find that this is a complex set of&#xD;
    interactions including acknowledgements, shipping notices, negations (for example if items are unavailable), as might&#xD;
    be shown by the following diagram.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;271&quot; alt=&quot;&quot; src=&quot;./resources/co_soa_conversations.png&quot; width=&quot;334&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
     &amp;nbsp;&#xD;
&lt;/p></sectionDescription>
  </sections>
  <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To identify the design elements of a service-oriented solution in terms of services and partitions.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To document the initial specification of services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To determine the initial dependencies and the communication between services.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
