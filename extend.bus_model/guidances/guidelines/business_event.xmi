<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_0qFrwNnmEdmO6L4XMImrsA" name="business_event,1.3382783818773036E-305" guid="_0qFrwNnmEdmO6L4XMImrsA" changeDate="2005-06-20T18:45:24.922-0700" version="7.1.0">
  <copyrightStatement href="uma://{1F4FEA6F-AF12-40BF-94BE-D316CE25314B}#_NH1FoPTFEdmkpYARNN468A"/>
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Explanation&quot; name=&quot;Explanation&quot;>&lt;/a>Explanation&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business events represent important occurrences in the day-to-day tasks of the business. Of course, there are thousands&#xD;
    of things happening in and around any business each day. Business events allow us to manage complexity by focusing&#xD;
    attention on what is really important, and in this sense they are architecturally significant. Business events have the&#xD;
    following characteristics:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        They represent an occurrence of significance, i.e., they are nontrivial.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        They appear to occur at random, or at least unpredictably.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        They occur independently of one another.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        They result in some immediate action by the business.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A business event that does not have one of these characteristics is suspect.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Business events are triggered and received by business actors, business workers, and business entities, while&#xD;
    interacting to realize a business use. Business events can be triggered:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        By business actors to indicate the start or end of a business use case. For example, when a supplier delivers&#xD;
        goods, a Delivery business event would indicate the start of the Deliver Goods business use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        By business entities to indicate a change of state. For example, as part of the Recruit Employees business use&#xD;
        case, a CandidateQualified business event would indicate that the references of a potential employee have been&#xD;
        checked.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        By business workers to indicate a specific point within a business use-case realization. For example, once a rocket&#xD;
        has been launched, a Launch business event would indicate that tracking the trajectory of the rocket can start.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        By the elapse of time. For example, six hours after a patient has come out of the operating room, a PatientCoherent&#xD;
        business event would indicate that a nurse should go and check up on the patient.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Modeling Business Events&quot; name=&quot;Modeling Business Events&quot;>&lt;/a>Modeling Business Events&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business events can contain information that provides more context about the occurrence the event represents. This&#xD;
    information is modeled as attributes of the business event class, as shown in the figure. The attributes of a business&#xD;
    event can be determined by considering what information the receivers of the event require in order to take&#xD;
    action.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;121&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt1.gif&quot; width=&quot;230&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Business events that represent changes in the state of business entities should have an association to the business&#xD;
    entity to which they relate, as shown in the figure. This allows receivers of the business event to access the business&#xD;
    entity in question and retrieve the necessary information.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;106&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt2.gif&quot; width=&quot;393&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Business actors, business workers, and business entities can both trigger and receive business events. The class that&#xD;
    triggers a business event is called a &lt;b>publisher&lt;/b>, while the class that receives a business event is called a&#xD;
    &lt;b>subscriber&lt;/b>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A publisher requires a &amp;lt;&amp;lt;send&amp;gt;&amp;gt; stereotyped dependency to the business events it will trigger, as shown in&#xD;
    the figure.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;122&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt3.gif&quot; width=&quot;348&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A subscriber requires an operation stereotyped &amp;lt;&amp;lt;business event&amp;gt;&amp;gt; with the same name as the business event&#xD;
    and parameters that match the attributes of the business event, as shown in the figure. Take note that the operation&#xD;
    signature needs to be kept consistent with the business event name and attributes.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;292&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt4.gif&quot; width=&quot;522&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An alternative approach is to invent a &amp;lt;&amp;lt;receive&amp;gt;&amp;gt; stereotyped dependency from the subscriber to the&#xD;
    business event, although this is not standard UML. The operation signatures can be deduced from all the&#xD;
    &amp;lt;&amp;lt;receive&amp;gt;&amp;gt; dependencies. An example of this nonstandard approach is shown in the figure.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;109&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt5.gif&quot; width=&quot;465&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Actual triggering of business events is shown in either interaction or activity diagrams. In interaction diagrams, the&#xD;
    publisher sends an asynchronous message to the receiver, with the name of the business event. An example of this is&#xD;
    shown in the figure. Note that the message is asynchronous. This indicates that the publisher does not wait for the&#xD;
    subscriber to finish processing the business event before continuing. Rather, the publisher triggers the business event&#xD;
    and continues directly with whatever it was doing. The subscriber in turn starts processing the business events as soon&#xD;
    as it is received. This represents real life more closely than synchronous messages.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;272&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt6.gif&quot; width=&quot;442&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In activity diagrams, the publisher is shown to trigger the business event. The receiver is shown to receive the&#xD;
    business event, either in the same diagram or in another diagram. An example of this is shown in the figure.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;382&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt7.gif&quot; width=&quot;617&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Finding Business Events&quot; name=&quot;Finding Business Events&quot;>&lt;/a>Finding Business Events&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When an association between a business actor and a business use case is named, a corresponding business event can be&#xD;
    used to signal when the business use case is initiated, which would be a significant occurrence for the business.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Analyze the interactions between business workers in sequence diagrams. For each message between business workers,&#xD;
    consider the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Location-Messages passed between two business workers at different locations are candidate business events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Time-Messages in which there is a significant time difference between triggering and receiving are candidate&#xD;
        business events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose-Messages that result in actions that have a different purpose in relation to the actions that triggered the&#xD;
        business event are candidate business events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Responsibility-Messages that are performed by a business worker with different responsibilities are candidate&#xD;
        business events.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Analyzing the boundaries of the business systems helps to identify differences in purpose or responsibility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In activity diagrams, consider whether some action is required directly before or after each task, or whether some&#xD;
    party must be notified of the outcome of a decision point.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Business entities also provide clues for business events. Any significant operations of a business entity are candidate&#xD;
    business events. Statechart diagrams for business entities are very useful. State transitions indicate potential&#xD;
    business events because they may represent a change of state of the business.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When identifying business events, it is useful to imagine a paper office in which the business entities are dossiers,&#xD;
    and clerks read and change the dossiers and carry them around between inboxes and outboxes. As soon as part of a&#xD;
    dossier needs to be duplicated in full so that it can be routed to different destinations, you may have discovered a&#xD;
    business event-there are multiple recipients. Also, when a business worker must write a notice after performing a task,&#xD;
    with the purpose of informing somebody else, that task may also qualify as a business event. Of course the dossiers do&#xD;
    not lie around on desks the whole day-they are filed. When it is necessary to remove a dossier from the filing cabinet&#xD;
    or to place a dossier back into the filing cabinet, consider what led up to the need to remove or return the dossier.&#xD;
    The occurrence that led up to, or triggered, the need to remove or return a dossier may be a business event.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Generalization of Business Events&quot; name=&quot;Generalization of Business Events&quot;>&lt;/a>Generalization of Business&#xD;
    Events&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business events may be categorized or grouped into &quot;families&quot; of events by defining generalization relationships&#xD;
    between more generalized and more specialized business events. This allows more than one type of business event to be&#xD;
    treated in the same way by parties not interested in the different subtypes of business events.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;214&quot; alt=&quot;UML example for accompanying text.&quot; src=&quot;resources/bevnt8.gif&quot; width=&quot;367&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    The diagram above shows that the Sickness, Missing, and Death of employees are all more specialized versions of the&#xD;
    absence of an employee. Defining the super-type Absence allows any one of the three subtypes to be treated as an&#xD;
    absence. In a consulting firm, for example, the account manager might need to inform the customer that an employee is&#xD;
    absent and arrange for a replacement, irrespective of the reason for the employee's absence. The account manager is&#xD;
    therefore interested only in the business event Absence. The receptionist, on the other hand, might need to undertake&#xD;
    specific action if an employee becomes ill, such as call a doctor or send flowers. The human resources manager and the&#xD;
    employee's manager might need to be informed if the employee has passed away.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    In this example, we see that specializations of business events are useful when different parties need to undertake&#xD;
    different actions in response to different (specific) circumstances. Generalizations of business events are useful when&#xD;
    certain parties need to respond in the same way to certain business events, irrespective of the specific circumstances.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    In practice, of course, the party will probably be notified of the actual (specialized) event. If an employee has&#xD;
    passed away, you can be sure that the account manager will also be informed of this, but the action undertaken will be&#xD;
    the same. Business event hierarchies do help to create a simpler, more understandable Business Analysis Model.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Automation of Business Events&quot; name=&quot;Automation of Business Events&quot;>&lt;/a>Automation of Business Events&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It makes sense to automate the definition, triggering, and propagation of business events, but this is not always&#xD;
    practical. Sometimes it costs more to build a system that does this than it takes to send an e-mail to a colleague.&#xD;
    Some issues that must be considered when contemplating the automation of business events are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the cost of purchasing or implementing and maintaining a system that automates aspects of event management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the technical feasibility of an automated solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the cost of non-automated alternatives&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the impact of not triggering or receiving certain events&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the possibility that certain events may cross business boundaries in future&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the currently available notification channels&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In a service-oriented architecture, messages are used to decouple software systems from each other and from physical&#xD;
    locations. Asynchronous messages can also be used to decouple software systems in time. Business events will be&#xD;
    implemented as messages in these types of software systems, although certainly not all messages will have an associated&#xD;
    business event. A very useful application of business events is in Enterprise Application Integration (EAI). Here each&#xD;
    application defines a number of business events to which other applications can subscribe. This allows applications to&#xD;
    interact without directly interacting.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, consider an insurance company that has one front-office system for managing customer interactions,&#xD;
    proposals, and contracts. It has a back-office system for administering products and policies. When a customer requests&#xD;
    a proposal, the front-office system collects the necessary information about the customer and insured object. Then the&#xD;
    product administration system calculates premiums based on the information and produces a preliminary insurance policy&#xD;
    that is linked to a proposal. Once the customer accepts the proposal, the policy administration system must finalize&#xD;
    the policy. In this example, there are two messages that are disconnected in time, location, and&#xD;
    responsibility-CalculatePremiums and FinalizePolicy. However, only FinalizePolicy would be modeled as a business event,&#xD;
    because it has some significance outside of the current context.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
