<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-QhGM_OItDl94Tywo1uVJ0w" name="new_concept,_qr6IQE6nEduhs-ki98mFFw" guid="-QhGM_OItDl94Tywo1uVJ0w" changeDate="2006-09-27T21:14:43.257-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>Introduction&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A key part of any development project is gaining a good understanding of the context, or domain, relevant to the&#xD;
    software or system being developed. Invariably the domain refers to the problem domain, which is understood as a&#xD;
    precursor to defining the solution domain. A description of the domain can take many forms. However, creating a model&#xD;
    of that domain aids understanding, helps stakeholders share a common view on the domain, provides the basis for scoping&#xD;
    the solution domain, and offers useful input to later analysis and design tasks.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Different people have different ideas about domain modeling, and the term &quot;domain model&quot; is heavily overused: It can&#xD;
    describe the various features of a specific domain, the commonality and variability of features in a domain, the&#xD;
    information being manipulated in a domain, and so on. Hence, this area can usefully be categorized into three main&#xD;
    activities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Domain_Modeling&quot;>Domain Modeling&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Domain_Analysis&quot;>Domain Analysis&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Domain_Engineering&quot;>Domain Engineering&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Domain_Modeling&quot; name=&quot;Domain_Modeling&quot;>Domain Modeling&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A domain model is a model of the domain within which an organization conducts its business. Hence, in practice the&#xD;
    domain for one organization should be the same as that for any other organization conducting business in that domain.&#xD;
    In practice, however, variations in domain modeling are the result of two factors: the level of detail of the domain&#xD;
    model and how the model is used in the context of particular methodologies. At its simplest, the term domain model is&#xD;
    used to refer to the class diagram that is created to represent concepts in the domain and their primary relationships.&#xD;
    Typically, this will include classes with attributes and operations to represent conceptual domain elements. These&#xD;
    models may be annotated with informal information, supported by high level business use cases, and so on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Domain modeling often includes understanding the existing software systems in use in a domain. In those instances, much&#xD;
    of the focus in domain modeling is to identify and model commonalities and differences that characterize the software&#xD;
    systems within the domain to provide an understanding of which aspects of the problem domain are currently addressed by&#xD;
    software. Domain modeling is used to define what the software systems are by systematically modeling the functions,&#xD;
    objects, data, and relationships of the software systems in the domain. This results in :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An understanding of the features of the software systems used in the domain.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A common vocabulary capturing the various stakeholders' understanding of the domain.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Complete documentation of software systems in use, their primary function, and relations.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A key output of domain modeling is an extensive domain dictionary that captures elements used in describing the&#xD;
    features and entities in the domain model, together with an overview of their primary purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, see also the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../extend.bus_model/workproducts/rup_business_analysis_model_9449F63A.html&quot;&#xD;
    guid=&quot;{CF53445C-3351-46C6-810E-8251830029A7}&quot;>Artifact: Business Analysis Model&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Domain_Analysis&quot; name=&quot;Domain_Analysis&quot;>Domain Analysis&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Domain analysis is &quot;the process of identifying, collecting, organizing, and representing the relevant information in a&#xD;
    domain, based upon the study of existing systems and their development histories, knowledge captured from domain&#xD;
    experts, underlying theory, and emerging technology within a domain&quot;[CMU/SEI-90-TR-21]&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Domain Analysis should &quot;carefully bound the domain being considered, consider commonalities and differences of the&#xD;
    systems in the domain, organize an understanding of the relationships between the various elements in the domain, and&#xD;
    represent this understanding in a useful way&quot;[CARDS94].&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Many different ways of analyzing the domain exist, depending on the form of the domain models being analyzed and the&#xD;
    different objectives for the analysis. For example, some techniques focus on analyzing similarities and differences in&#xD;
    product families. Feature Oriented Domain Analysis (FODA) is targeted at identifying distinctive user-visible features&#xD;
    within a class of related software systems. Other domain analysis techniques focus on particular viewpoints or concerns&#xD;
    within a domain. Cognitive Work and Safety Analysis (CWSA) focuses on the work that people do, the decisions they make,&#xD;
    and the strategies they use to support the identification of safety inadequacies in a system.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Domain_Engineering&quot; name=&quot;Domain_Engineering&quot;>Domain Engineering&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Domain engineering is an approach to enabling greater efficiency and reuse for realizing a family of similar systems.&#xD;
    Domain engineering covers all the tasks for building software core assets. These tasks include identifying one or more&#xD;
    domains, capturing the variation within a domain, constructing an adaptable design, and defining the mechanisms for&#xD;
    translating requirements into systems created from reusable components. The products (or software assets) of these&#xD;
    tasks are domain models, design models, domain-specific languages, code generators, and code components. This set of&#xD;
    tasks is fundamental to the creation of a systematic approach to reuse in an organization.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;References&quot; name=&quot;References&quot;>References&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    [CARDS94] CARDS: Nilson, Roslyn; Kogut, Paul; &amp;amp; Jackelen, George &lt;i>Component Provider's and Tool Developer's&#xD;
    Handbook Central Archive for Reusable Defense Software&lt;/i> (CARDS). STARS Informal Technical Report&#xD;
    STARS-VC-B017/001/00. Unisys Corporation , March 1994.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    [CMU/SEI-90-TR-21]&lt;i>Feasibility Study&lt;/i> (CMU/SEI-90-TR-21, ADA 235785).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    [EVANS03] E. Evans, &lt;i>Domain-Driven Design: Tackling Complexity in the Heart of Software&lt;/i>, Addison-Wesley, 2003.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    [FODA] Kang, Kyo C.; Cohen, Sholom G.; Hess, James A.; Novak, William E.; &amp;amp; Peterson, A. Spencer&#xD;
    &lt;i>Feature-Oriented Domain Analysis&lt;/i> (FODA)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    [SEI] &lt;i>Domain Engineering at the Software Engineering Institute&lt;/i>:&#xD;
    http://www.sei.cmu.edu/domain-engineering/domain_eng.html&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
