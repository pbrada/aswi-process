<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_C_y_I9wuEdmRU7lXzo6lKQ" name="interfaces_for_j2ee_applications,4.292643163694118E-306" guid="_C_y_I9wuEdmRU7lXzo6lKQ" changeDate="2005-10-25T14:49:10.494-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A Java Interface, as defined in the Java language syntax, is not limited to having operations - it can have Java Field,&#xD;
    Class, or Interface members. For this reason, Java Interfaces are modeled as classes stereotyped&#xD;
    &amp;lt;&amp;lt;JavaInterface&amp;gt;&amp;gt;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The UML interface has no direct mapping to a language construct in Java or J2EE development.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Interfaces in Preliminary Design&quot; name=&quot;Interfaces in Preliminary Design&quot;>&lt;/a>Interfaces in Java Design&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Even though UML interfaces do not map to a language construct in Java or J2EE, there are situations where the designer&#xD;
    might want to use them. Some possible reasons are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        potentially target other languages and technologies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        express the idea of an interface without initially deciding if a Java Interface, or some kind of delegate or access&#xD;
        class, will be used&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If the implementation language is Java, you might decide to use &amp;lt;&amp;lt;JavaInterface&amp;gt;&amp;gt; stereotyped classes in&#xD;
    the &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_design_model_2830034D.html&quot;&#xD;
    guid=&quot;{8CDAEAD4-5E84-4F50-87FD-3240ED047DE7}&quot;>Design Model&lt;/a> in place of UML interfaces. This allows the Design Model&#xD;
    to evolve more easily and remain consistent with the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_implementation_model_5858DB65.html&quot;&#xD;
    guid=&quot;{157E9B67-C619-410D-A927-F2CD217BF8FE}&quot;>Implementation Model&lt;/a> (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/mapping_from_design_to_code_D1454680.html&quot;&#xD;
    guid=&quot;1.424219730601675E-305&quot;>Concept: Mapping from Design to Code&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that &amp;lt;&amp;lt;JavaInterface&amp;gt;&amp;gt; stereotyped classes cannot be represented as &lt;i>lollipops&lt;/i> on the outside of&#xD;
    UML subsystems or components. Instead, the exposed interfaces are shown as publicly visible elements owned by a&#xD;
    subsystem or as publicly visible elements residing on a UML component.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Interfaces in EJB Design&quot; name=&quot;Interfaces in EJB Design&quot;>&lt;/a>Interfaces in EJB Design&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    EJB interfaces are specializations of Java interfaces. Their stereotypes are described in &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/identifying_enterprise_javabeans_ejbs_2581AEE5.html&quot;&#xD;
    guid=&quot;9.931732120190802E-307&quot;>Guideline: Identifying Enterprise JavaBeans (EJBs)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The designer might use UML interfaces, &amp;lt;&amp;lt;JavaInterface&amp;gt;&amp;gt; stereotyped classes, or EJB-specific stereotyped&#xD;
    classes to model interfaces depending on how closely the designer wants to map to a particular implementation.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
