<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_DAdtgtwuEdmRU7lXzo6lKQ" name="assembling_j2ee_applications,3.347498143656868E-305" guid="_DAdtgtwuEdmRU7lXzo6lKQ" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    J2EE application assemblers assemble&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/j2ee_module_B302A794.html&quot; guid=&quot;1.5663580058239784E-305&quot;>J2EE&#xD;
    Module&lt;/a>s into a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../tech.j2ee/guidances/guidelines/j2ee_application_436A58D2.html&quot;&#xD;
    guid=&quot;1.6057780853529704E-306&quot;>J2EE Application&lt;/a>. Application Assemblers can pick off-the-shelf modules and use them&#xD;
    in their applications simply by modifying the deployment descriptors or by providing alternative descriptors.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some application servers require an EAR &quot;wrapper&quot; around the EJB-JAR, WAR, and other JAR archives for deployment, which&#xD;
    means that the J2EE application component provider may also need to assemble an EAR for testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Detailed steps assembling a J2EE Application are provided by the J2EE specification, section J2EE.8.3 Application&#xD;
    Assembly. The following is a summarized extract of this guidance.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Topic 1&quot; name=&quot;Topic 1&quot;>&lt;/a>Assembling a J2EE Application&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Assembling a J2EE Application involves the following steps:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Select the J2EE Modules that will be used by the application.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Create an application directory structure.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reconcile J2EE Module deployment descriptors. &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Edit J2EE Module deployment descriptors to link internally satisfied dependencies and eliminate redundant&#xD;
                security role names.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Define transactions, security roles, method permissions, etc.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Optionally use the alt-dd element to specify an alternative deployment descriptor while preserving the&#xD;
                original deployment descriptor.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Assign a context root for each web module included in the J2EE application.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Ensure component dependencies are correctly described.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Ensure there is only one version of each class in the application.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Create an XML deployment descriptor for the application named &quot;application.xml&quot;.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package the application.&lt;br />&#xD;
         a. Place the J2EE modules in the appropriate directories. Place the deployment descriptor in&#xD;
        META-INF/application.xml.&lt;br />&#xD;
         b. Package into a &quot;.EAR&quot; file.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Topic 2&quot; name=&quot;Topic 2&quot;>&lt;/a>Adding/Removing Modules&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    J2EE modules may be added to an application before&lt;br />&#xD;
     deployment, using the following steps:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Decide on a location in the application package for the new module. Optionally&lt;br />&#xD;
         create new directories in the application package hierarchy.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Copy the new J2EE Modules to the desired location in the application package.&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Edit the deployment descriptors for the J2EE Modules to link the dependencies&lt;br />&#xD;
         which are internally satisfied by the J2EE Modules included in the application.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Edit the J2EE Application deployment descriptor as required.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Similarly a module can be removed by removing the module from the application package hierarchy and editing the&#xD;
    deployment descriptors to remove inconsistencies.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Validating the Application&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It is a good idea to valid the contents of the archive before attempting deployment, as obscure errors, especially on&#xD;
    the application server side, may result in obscure or non-existent error messages. For example, confirm there is at&#xD;
    least one module defined in the EAR&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The EAR can also be validated using a J2EE verifier tool that is provided with the J2EE SDK. It makes sure that the EAR&#xD;
    is internally consistent and well-formed. For example, it makes sure that the module and application archives are&#xD;
    consistent with the standard specifications (J2EE, Servlet, and EJB).&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
