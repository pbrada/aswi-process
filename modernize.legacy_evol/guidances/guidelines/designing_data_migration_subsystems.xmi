<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_q_v_gdoJEdm5N8vZEEaxbg" name="designing_data_migration_subsystems,3.368322488876367E-305" guid="_q_v_gdoJEdm5N8vZEEaxbg" changeDate="2005-08-17T18:34:54.846-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    If there is existing data to be migrated, it may be necessary to design software to do the conversion/migration. The&#xD;
    data to be migrated is identified by &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../modernize.legacy_evol/tasks/design_database_migration_FAFCAC6F.html&quot;&#xD;
    guid=&quot;{AFE73E86-AD34-4A5C-8DF3-FCD28DBE2F22}&quot;>Task: Specify Data Migration&lt;/a> in the &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../modernize.legacy_evol/workproducts/database_migration_specification_5091901D.html&quot;&#xD;
    guid=&quot;{24309CAC-2A58-4011-B0F0-0A7D2FD58AEA}&quot;>Work Product: Data Migration Specification&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The software to do the data migration is commonly identified as one or more subsystems, often with dependencies on&#xD;
    subsystems that define the source data and the target databases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The design of data migration subsystems is similar to that described in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/tasks/subsystem_design_real-time_design_681F0256.html&quot;&#xD;
    guid=&quot;{30B2108A-294F-44EE-AC02-FFC1F70D67FF}&quot;>Task: subsystem_design_real-time_design&lt;/a>. Additional considerations&#xD;
    specific to data migration include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Data_Migration_Suites&quot;>Migration Suites&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Reuse_Components&quot;>Reuse of Components&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Performance&quot;>Performance&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Operational_Proc&quot;>Operational Procedures&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Data_Migration_Suites&quot; name=&quot;Data_Migration_Suites&quot;>&lt;/a>Migration Suites&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The need to cope with differing hardware and software environments is an important consideration when designing data&#xD;
    migration software, particularly automated migrations where the data to be migrated exists in one environment (or&#xD;
    possibly several) and needs to be migrated/converted into a completely different environment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Different hardware, operating systems, and data management software can all create challenges, and relatively simple&#xD;
    conversion processes may have to be implemented as suites of four or five (or more) programs to cope with changes in&#xD;
    the environment. In this case, the sequence of the execution of the migration processes is very important since there&#xD;
    may be multiple files to be converted into one or more files, and there may be interdependencies where one program in&#xD;
    the conversion requires data from a previous one.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Reuse_Components&quot; name=&quot;Reuse_Components&quot;>&lt;/a>Reuse of Components&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A further consideration is the use or reuse of components from the standard system as part of the conversion system.&#xD;
    System utility programs or programs from the existing production system should be utilized whenever possible to help&#xD;
    minimize development time for conversion modules. It is also sometimes possible to provide conversion facilities by&#xD;
    adding features to standard system components. When conversion involves manual input of converted data into the new&#xD;
    system, this input should, if possible, be performed using the standard facilities of the new system. The objective is&#xD;
    to avoid duplication of work and possible inconsistencies caused by an alternative method of data entry.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Performance&quot; name=&quot;Performance&quot;>&lt;/a>Performance&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Migration may involve large volumes of data with consequent implications for performance. Even if data migration is&#xD;
    performed infrequently, poor performance may be a concern. For example, poor performance could slow down testing and&#xD;
    validation of the converted data, especially if there are failures part way through the conversion process, requiring&#xD;
    correction and re-execution.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Operational_Proc&quot; name=&quot;Operational_Proc&quot;>&lt;/a>Operational Procedures&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It is important to specify the operational procedures to be followed during the migration process, including both&#xD;
    manual data maintenance steps and steps for executing migration software. Even if the migration procedures have a&#xD;
    limited life span, it is important that they are documented in sufficient detail to be performed. A good procedure&#xD;
    identifies the sequence of steps, who performs each step, how to validate the results, and what follow-up tasks are&#xD;
    required.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
