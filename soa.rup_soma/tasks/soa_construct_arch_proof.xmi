<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-Rqnhg8tCO9McfOfsJGnhOQ" name=",_XHRjoEw5EduGSMz-5zscXg" guid="-Rqnhg8tCO9McfOfsJGnhOQ" changeDate="2007-05-23T14:00:15.203-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    The Architectural Proof-of-Concept takes input primarily from &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_legacy_CF2A5A41.html&quot;&#xD;
    guid=&quot;_xQpQ8CwTEduKcvYAyaKSaA&quot;>Task: Existing Asset Analysis&lt;/a>&amp;nbsp;and takes into account the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/guidances/concepts/service_portfolio_52FD64AC.html&quot;&#xD;
    guid=&quot;1.851952881072508E-305&quot;>Concept: Service Portfolio&lt;/a>&amp;nbsp;defined by &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/capabilitypatterns/soa_specify_services_D308DA60.html&quot;&#xD;
    guid=&quot;_zL1rsEn2EduC74V7YHXTOQ&quot;>Activity: Perform Service Specification&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This task would be done in parallel with other steps that identify the services that are actually going to be&#xD;
        exposed (during &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../soa.rup_soma/capabilitypatterns/soa_specify_services_D308DA60.html&quot;&#xD;
        guid=&quot;_zL1rsEn2EduC74V7YHXTOQ&quot;>Activity: Perform Service Specification&lt;/a>).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The transactions that need to be componentized and exposed need to be identified as part of&amp;nbsp;&lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_legacy_CF2A5A41.html&quot;&#xD;
        guid=&quot;_xQpQ8CwTEduKcvYAyaKSaA&quot;>Task: Existing Asset Analysis&lt;/a> but also in the context of the overall &lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/capabilitypatterns/existing_asset_analysis_4B247136.html&quot;&#xD;
        guid=&quot;_7ZObICxuEdupJ8eX04kqLQ&quot;>Activity: Existing Asset Analysis&lt;/a>&amp;nbsp;process and later refined during &lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../soa.rup_soma/capabilitypatterns/soa_specify_services_D308DA60.html&quot;&#xD;
        guid=&quot;_zL1rsEn2EduC74V7YHXTOQ&quot;>Activity: Perform Service Specification&lt;/a>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Elements of these Architectural Proof-of-Concept decisions and considerations relate back to both functional and&#xD;
        operational aspects of the architecture.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Also, when dealing with existing applications, the following items need to be examined and considered:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Exception Handling&lt;/b>: Need to understand how the exception handling works today. In batch processing, when&#xD;
        exception occurs, the program abends (abnormally terminates) and produces a core dump. The programmer is required&#xD;
        to look at the core dump and figure what needs to be done. This may not be acceptable. One would need to figure out&#xD;
        what needs to be done, for instance how to integrate with exception handling framework.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Process and Data Distribution&lt;/b>: We need to examine where the data and process are executed. CICS applications&#xD;
        executing on one machine and may send a request to another machine (also known as function shipping in CICS) or&#xD;
        remote call data on another machine. We may like to consider going directly (JDBC to DB) to remote machine where&#xD;
        the process or data is running, instead of using the connector which goes through the JDBC to DB. That is, it is&#xD;
        more optimal to make native JDBC call to a remote data source, as opposed to going through an intermediary such as&#xD;
        a connector.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Data Availability:&lt;/b> If we have customer file in VSAM which requires, say, a&amp;nbsp;4 hour maintenance window,&#xD;
        then we can't support 24/7 customer service. We would need to consider a new storage solution.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Authorization/Authentication:&lt;/b> Many legacy applications have the authorization and authentication mechanisms&#xD;
        in the application code. This would require migrating user access management to Federated managed environment&#xD;
        supported by best practices.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Staging Delays&lt;/b>: Typically batch programs run once a day in the night. If requirements are to run the program&#xD;
        more often, then we will have to modify the schedule program to change the frequency.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The above list is not meant to be exhaustive; it is provided here for guidance.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Example&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In the&amp;nbsp;Rent-a-Car example, service realization will need to take into consideration the following requirements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Seamless interface between remote client/server, workstation applications, and the mainframe IMS applications.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Eliminate &quot;screen scraping&quot; from the remote application point of view. This is to eliminate the need to change&#xD;
        remote application processing, simply because a message is added to a screen, or a field changes positions on a&#xD;
        screen.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Support Input and output messages of IMS applications which are pre-defined and fixed format.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Message formatting related processing to be transparent to the IMS application, so that the time necessary to&#xD;
        develop and test new remote applications is significantly reduced.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To support new IMS application features and new data fields to remote systems in a timely manner, i.e. reduce the&#xD;
        time it takes to enhance existing systems.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Elements of these technical feasibility decisions and considerations relate back to both functional and operational&#xD;
    aspects of the architecture. To address the above requirements, the following approach was used:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Message Broker/Integration Broker to handle the message formatting to and from the IMS applications. The message&#xD;
        broker performs the following functions: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Reformat inbound messages (from XML to fixed length format) to a predefined format acceptable by mainframe&#xD;
                IMS applications.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Reformat (from fixed length format to XML) mainframe IMS output responses back to an IMF keyword format, to&#xD;
                be processed by the original sending application.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Interrogate an inbound message, to determine if it is in IMF format by checking the message header which&#xD;
                precedes the data payload. The header is in a positional format, and contains several key pieces of&#xD;
                information necessary for IMF to process correctly.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Performs routing and transformation based on contents of the Message Header and IMS Transaction Code. This&#xD;
                IMS Transaction code is required in order to execute the appropriate transaction within the IMS Mainframe&#xD;
                system.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        IMS-MQ bridge to act as a conduit between the Message Broker and the IMS system.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The use of the Message/Integration broker greatly reduces or eliminates the need to customize each IMS application to&#xD;
    handle transaction requests from various remote systems. Since most of the message formatting related processing is&#xD;
    transparent to the IMS application, the time necessary to develop and test new remote applications is significantly&#xD;
    reduced. In addition, new IMS application features and new data fields become available to remote systems in a timely&#xD;
    manner, reducing the time it takes to enhance existing systems. This leads to loose coupling of applications, which is&#xD;
    one of the core principles of SOA.&#xD;
&lt;/p></mainDescription>
  <purpose>&lt;p>&#xD;
    To synthesize an exemplar solution that meets the critical architectural requirements, this exemplar may be limited in&#xD;
    some way, such as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the resulting&amp;nbsp;solution may simply be conceptual,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the resulting solution may only illustrate some critical aspect of the overall requirements.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
