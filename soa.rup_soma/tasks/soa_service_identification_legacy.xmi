<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-YTZ-stpr_AUepNnCD8GCyg" name="soa_service_identification_legacy,_xQpQ8CwTEduKcvYAyaKSaA" guid="-YTZ-stpr_AUepNnCD8GCyg" changeDate="2006-11-01T09:14:45.503-0800" version="1.0.0">
  <mainDescription>Existing Asset Analysis is the process of leveraging existing assets (e.g. existing systems such as packaged or custom&#xD;
applications) as well as industry standards, models and assets in order to fulfill the realization of services. Using a&#xD;
bottom-up approach, Existing Asset Analysis identifies and validates candidate services, components and flows. Technical&#xD;
constraints related to existing systems should be evaluated as early as possible for risk management purposes. Thus&#xD;
conducting technical feasibility of service realization decisions is often done as soon as possible after/during Existing&#xD;
Asset Analysis.</mainDescription>
  <sections xmi:id="_HBQpoC09EduMFMCuL1mFMw" name="Identify Candidate Services from Custom Applications" guid="_HBQpoC09EduMFMCuL1mFMw">
    <sectionDescription>&lt;p>&#xD;
    Two sub-steps are used to identify the functionality provided by existing applications. The first sub-step,&#xD;
    coarse-grained mapping, maps business processes to the portfolio of existing applications. The second sub-step,&#xD;
    fine-grained mapping, involves mapping a service to a specific transaction or batch process within the legacy&#xD;
    application. Fine-grained mapping is done during service specification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of coarse-grained mapping is to derive the preliminary, i.e. initial, mapping of business functions to&#xD;
    services.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to identify candidate services from functionality in existing applications, the relationship between the&#xD;
    business process and existing applications must be understood. This can be described as coarse-grained mapping. This&#xD;
    mapping is between the business activities or business processes and the business functions of existing applications as&#xD;
    shown below.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;275&quot; alt=&quot;&quot; src=&quot;resources/Technique-Fig40.gif&quot; width=&quot;319&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To capture the relationships between business processes and existing applications, we perform the following&#xD;
    coarse-grained mapping steps:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Understand the business functions supported by each application.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span>&#xD;
        Typically a business function can be mapped to an activity within a business process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Record attributes of existing applications in terms of technologies used, architectural styles, etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify applications that perform common services.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h4>&#xD;
    Coarse-grained mapping and application portfolio analysis&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Understanding the business value and the technical quality of existing applications helps in creating a&#xD;
    transformational plan with highest priority given to the highest value services, and to assess scope and technical&#xD;
    risks based on the technical qualities of the application, for example, degree of coupling.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;230&quot; alt=&quot;&quot; src=&quot;./resources/Technique-Fig41.gif&quot; width=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Application portfolio analysis provides scope and boundaries for coarse-grain mapping. For example, applications with&#xD;
    minimal business value or low technical value which are targeted for obsolescence would probably not be in scope for&#xD;
    candidate service identification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Application portfolio analysis, if performed, may provide information about existing services for coarse-grained&#xD;
    mapping. The output of this analysis is candidate services as shown below.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;214&quot; alt=&quot;&quot; src=&quot;./resources/Technique-Fig42.gif&quot; width=&quot;537&quot; />&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_dTPd8C09EduMFMCuL1mFMw" name="Identify Candidate Services from Packaged Applications" guid="_dTPd8C09EduMFMCuL1mFMw">
    <sectionDescription>&lt;p>&#xD;
    Independent Software Vendor (ISV) packages are commonly implemented to enable subsystems and/or service components&#xD;
    within an organization. For example, comprehensive Enterprise Resource Planning (ERP) ISV packages, such as those&#xD;
    offered by SAP, PeopleSoft and Oracle, are often implemented as complete systems comprising multiple subsystems that&#xD;
    fully support one or more Domains within an organization. This section describes a series of steps that will enable the&#xD;
    practitioner to identify functionality and candidate services within existing ISV packages. This analysis will enable&#xD;
    the Business Function/System Matrix, Business Rules Catalog and Service Model work products to be populated based on&#xD;
    the capabilities of the existing ISV packages.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Note&lt;/b>: Because each ISV package is different, it is not possible to develop a detailed prescriptive approach for&#xD;
    each one. The following activities describe a generic approach and a generic set of activities that will:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify candidate services within ISV packages.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify the high-level characteristics of the ISV packages that will be considered during service realization.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    ISV Package Identification&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Ideally, ISV packages for the in-scope domains and business components should have been identified in the CBM System to&#xD;
    Business Component Overlay input (or equivalent). This would result in a list of ISV packages that enable functionality&#xD;
    within the specific business components in the scope of the envisioned solution. If this input is missing, the ISV&#xD;
    packages that support the in scope domains and business components will have to be identified and mapped to business&#xD;
    components.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that some ISV packages, such as SAP, PeopleSoft and Oracle, are comprised of a number of core and optional&#xD;
    modules. For example, SAP has a manufacturing module, human resources module and customer relationship management&#xD;
    module. In these cases, it is important to specify which specific modules of the ISV packages are being used. This will&#xD;
    result in a more focused analysis that will save time and avoid unnecessary services proliferation.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    ISV Package Categorization&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Categorization of ISV Packages provides high-level insight into important characteristics that will need to be&#xD;
    considered during service realization (this applies to both functional and technical components). ISVs can be&#xD;
    categorized as Tier 1, 2 or 3 ISVs based on characteristics such as their core competencies, size and revenue as&#xD;
    summarized in table 10. Note in particular the Technical Impact and Business Impact aspects.&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th valign=&quot;top&quot;>&#xD;
                ISV Category&#xD;
            &lt;/th>&#xD;
            &lt;th valign=&quot;top&quot;>&#xD;
                Tier 1 ISVs&#xD;
            &lt;/th>&#xD;
            &lt;th valign=&quot;top&quot;>&#xD;
                Tier 2 and 3 ISVs&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;114&quot;>&#xD;
                &lt;b>Description&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Large ISVs like the Enterprise Resource Planning (ERP) vendors providing packaged applications that help&#xD;
                businesses manage their core resources and operations.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Medium to smaller ISVs that tend to offer industry specific vertical business solutions&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Characteristics&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Integrated, multi-module, cross-industry applications for product planning, parts purchasing,&#xD;
                        maintaining inventories, interacting with suppliers, providing customer service, and tracking&#xD;
                        orders.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Can also include application modules for the finance and human resources aspects of a business.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Typically span multiple Business Components and even Domains within a CBM map&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Are often packaged with their own proprietary middleware, security and other technical components&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;ul>&#xD;
                    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
                        Typically enable industry-specific vertical subsystems that support a specific function within an&#xD;
                        enterprise.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Typically have documented business interfaces with one or more Tier 1 ISVs.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Usually contained within a CBM Domain and a small number of Business Components.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Usually rely on external, third party middleware and other technical components.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        May have their own security components.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;strong>Technical Impact&lt;/strong>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Given their large &quot;footprint&quot;,&amp;nbsp;these ISVs may have a significant influence on the technical&#xD;
                architecture and standards used within an organization. In these cases, these influences are identified and&#xD;
                considered during service realization.&lt;br />&#xD;
                 The middleware and other technical components, such as authentication and logging, will need to be&#xD;
                considered during service realization.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                These ISVs typically have less architectural influence within a large organization, but in a smaller,&#xD;
                highly specialized industry-specific organization, they too may have a significant influence on service&#xD;
                realization.&lt;br />&#xD;
                 These packages typically do not provide their own middleware or technical components. They may rely on&#xD;
                third-party middleware and technical components - or may rely on those provided by a Tier 1 ISV. Some&#xD;
                smaller ISVs may not provide interfaces to technical components. They may rely on third-party middleware&#xD;
                and technical components - or may rely on those provided by a Tier 1 ISV. Some smaller ISVs may not provide&#xD;
                interfaces to technical components.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Business Impact&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Organizations that have invested in Tier 1 ISVs frequently have a predisposition to leverage these ISV&#xD;
                packages to the fullest extent possible. In these cases, there will be a strong propensity to use these&#xD;
                existing packages to realize services and also to enable new services.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Because these packages tend to enable a narrower scope of functionality, there is less propensity and&#xD;
                opportunity to extend these packages to realize new services.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Examples&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                SAP, Siebel, Peoplesoft, Oracle Financials&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                Manugistics, Provia, Evoke/TD&amp;gt;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    Since ISV packages are used within virtually every organization, most service-oriented solutions will incorporate&#xD;
    services realized through Service Components based on ISV packages. Categorizing these ISV packages will enable the&#xD;
    practitioner to understand the role and relative importance of these packages within the SOA solution, and also&#xD;
    identify technical and functional characteristics that will be considered during service realization.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each ISV package, an understanding in the following areas is obtained through the analysis performed during&#xD;
    categorization:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        An understanding of the significance and influence of this ISV package within the enterprise.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The propensity to realize any new services through this ISV package.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The architecture standards and technical components used within the ISV package and their role within the&#xD;
        enterprise.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An understanding of the middleware and technical components compatible with the ISV package.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h4>&#xD;
    Analyze Options for Service Access within ISV Packages&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    This step identifies the mechanisms by which functions within the ISV packages can be accessed (i.e. technical aspects&#xD;
    of the package directly related to service exposure and realization). This information is used to help identify&#xD;
    candidate services within the ISV packages (in the next step) and will also be used later for assessing technical&#xD;
    feasibility and making service realization decisions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several mechanisms may be used to access ISV packages. During this step, each in scope package is analyzed to determine&#xD;
    and describe which mechanisms are available for each package. In general, ISV packages will support one or more of the&#xD;
    following mechanisms:&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Mechanism&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Description&lt;/b>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Direct exposure as a service&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                The package directly exposes functionality using SOA-compatible services, which are typically Web Services.&#xD;
                These services may be listed in a catalog. The specific implementation is assessed for conformance to&#xD;
                standards and interoperability.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Use of APIs&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                The package provides one or more APIs that may be used to expose services within the package. These APIs&#xD;
                may be used directly to expose functionality as a service, or Web Services wrappers or a facade may be&#xD;
                developed to enable access to functionality through the API.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                &lt;b>Direct data access&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot;>&#xD;
                In the case where no APIs are available, but a service that exposes data managed by the ISV package is&#xD;
                required, a service that directly accesses the database used by the package is developed.&lt;br />&#xD;
                 &lt;i>Note: While this approach may be technically feasible, bypassing business logic within the ISV package&#xD;
                introduces a potential risk of corrupting data or violating program enforced data integrity. For this&#xD;
                reason, it is recommended that this technique be restricted to services that perform &quot;read-only&quot;&#xD;
                operations. Even so, this approach is still at risk due to potential changes to the ISV's data schema, and&#xD;
                should therefore be used with great caution.&lt;/i>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;h4>&#xD;
    ISV Packages Service Identification Techniques&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    During this step, several techniques are used to analyze the ISV packages and identify functionality that can&#xD;
    potentially be exposed as a service. Business rules associated with the functionality are also identified. Each&#xD;
    technique is used to assess packages from a different perspective, enabling the packages to be thoroughly analyzed for&#xD;
    candidate services. Analysis results are captured in the Business Function/System Matrix and Business Rules Catalog&#xD;
    work products. As with the other SOMA identification activities, candidate services are added to the Service Portfolio&#xD;
    and Service Hierarchy.&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Review the ISV package's catalogue of pre-defined services&lt;br />&#xD;
        &lt;br />&#xD;
         Some ISV packages offer a catalogue of pre-defined services. If so, candidate services for the in-scope Domains&#xD;
        and Business Components are identified through the catalogue and added to the Service Portfolio. If supported by&#xD;
        the ISV, this technique represents the easiest way to identify candidate services using the ISV packages.&lt;br />&#xD;
        &lt;br />&#xD;
         &lt;b>Note&lt;/b>: During the SOMA Specification step, the degree of granularity of these services will be considered as&#xD;
        part of making service exposure decisions. Hence it is important to capture the degree of granularity as a&#xD;
        characteristic of candidate services during SOMA Identification. It may be necessary to aggregate or decompose&#xD;
        exposed services depending upon the degree to which they align with the services realized within the ISV packages.&#xD;
        This analysis also helps align candidate services within the service hierarchy.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review the ISV package's APIs&lt;br />&#xD;
        &lt;br />&#xD;
         ISV packages may offer one or more APIs that can be used to access functionality within the packages. These APIs&#xD;
        are examined for the in-scope Domains and Business Components to identify candidate services to be added to the&#xD;
        service portfolio. Since functionality accessible through these APIs will not natively be offered as a service, a&#xD;
        service wrapper or&amp;nbsp;facade will need to be developed to expose these API calls as services. The flexibility of&#xD;
        this approach enables the combination of two or more API calls within a single service, which may enable services&#xD;
        within the packages to be developed to align with services in the service hierarchy. In this case, the practitioner&#xD;
        identifies services within the service hierarchy and maps these to the supporting functionality and API calls&#xD;
        within the packages.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review ISV business process maps and workflow&lt;br />&#xD;
        &lt;br />&#xD;
         The business processes and workflow enabled by an ISV packages may be documented in either a hard copy of&#xD;
        electronic format. These artifacts are examined to identify additional candidate services for addition to the&#xD;
        service portfolio. Specifically, this review should take an end-to-end view of business processes within the&#xD;
        packages as well as the workflow context in which the process is executed. This enables any related candidate&#xD;
        services to be identified and also identifies business process and workflow considerations that need to be&#xD;
        considered during service realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify ISV package's&amp;nbsp;service boundaries&lt;br />&#xD;
        &lt;br />&#xD;
         An ISV package is developed to support business processes and manage data with a scope that is aligned with&#xD;
        Business Components (Functional Areas) and Domains. These Business Components form the &quot;footprint&quot; or &quot;service&#xD;
        boundary&quot; for the ISV packages. However, within a specific enterprise, the ISV package may be implemented within a&#xD;
        subset of the overall service boundary for that package. By identifying the overall service boundary for the ISV&#xD;
        package, the practitioner determines if additional services within the package's service boundary should be added&#xD;
        to the Service Portfolio. More importantly, the practitioner can determine if new services that are required should&#xD;
        be realized through the ISV packages&lt;br />&#xD;
        &lt;br />&#xD;
         If it is determined that new services are required to enable the service-oriented solution, the practitioner&#xD;
        should determine if these services fall within the service boundary for the ISV package. If they do, services&#xD;
        within the ISV package that support the required functionality are identified and added to the Service Portfolio.&#xD;
        This enables the solution to leverage the full capabilities of the ISV package, and reduces the risk of developing&#xD;
        duplication within multiple systems supporting the same Business Component.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyze data elements controlled within the ISV packages&lt;br />&#xD;
        &lt;br />&#xD;
         The data elements within the scope of the solution are assessed to determine if they are managed within the ISV&#xD;
        packages. If data is managed within the ISV packages, other business processes within the packages that read or&#xD;
        update the same data are analyzed for candidate services to add to the Service Portfolio.&lt;br />&#xD;
        &lt;br />&#xD;
         This analysis also reveals related or external processes and interfaces that may be affected by the solution and&#xD;
        that must be considered during service realization. These are documented and assessed during service realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyze ISV security and other technical components&lt;br />&#xD;
        &lt;br />&#xD;
         Many ISV packages contain their own security components for authentication and authorization and may contain other&#xD;
        technical components that support functions such as logging and messaging. For each package, these components are&#xD;
        identified and analyzed to identify candidate technical services that may be added to the Service Portfolio.&lt;br />&#xD;
        &lt;br />&#xD;
         In addition, during this analysis, any issues or constraints that may be introduced by these components are&#xD;
        identified for consideration during service realization. For example, the interaction required with the package's&#xD;
        security components to access functionality within the package must be understood and accommodated during service&#xD;
        realization.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Applying these various analysis techniques will enable candidate services within the in-scope ISV packages to be&#xD;
    identified from several different perspectives. It will also identify issues and constraints introduced by the&#xD;
    functional and technical components of the ISV packages that must be considered during service realization.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_c_mA4ExEEduGSMz-5zscXg" name="Ensure Asset Non-Functional Requirements are Documented" guid="_c_mA4ExEEduGSMz-5zscXg">
    <sectionDescription>&lt;p>&#xD;
    When documenting Non-Functional Requirements for existing assets the following key topics need to be considered.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Exception Handling&lt;/b> - We need to understand how exception handling works today. In batch processing, when&#xD;
        exception occurs, the program abends (abnormally terminates) and produces a core dump. The programmer is required&#xD;
        to look at the core dump and figure out what needs to be done. This may not be acceptable. One would need to figure&#xD;
        out what needs to be done, for instance, and how to integrate with exception handling framework.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Process and Data Distribution&lt;/strong> - We need to examine where the data and process are executed. CICS&#xD;
        application executing on one machine may send a request to another machine (also known as function shipping in&#xD;
        CICS) or remote call data on another machine. We may like to consider going directly (JDBC to DB) to remote machine&#xD;
        where the process or data is running, instead of using the connector which goes through the JDBC to DB.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Data Availability&lt;/strong> - If we have customer file in VSAM which requires, say, a 4 hour maintenance&#xD;
        window, then we can't support 24/7 customer service. We would need to consider a new storage solution.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Authorization/Authentication&lt;/strong> - Many legacy applications have authorization and authentication&#xD;
        mechanisms in the application code. This would require migrating user access management to federated managed&#xD;
        environment supported by best practices.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Staging Delays&lt;/strong> - Typically batch programs run once a day in the night. If requirements are to run&#xD;
        the program more often, then we will have to modify the schedule program to change the frequency.&#xD;
    &lt;/li>&#xD;
&lt;/ul></sectionDescription>
  </sections>
  <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To identify the design elements of a service-oriented solution in terms of services and partitions.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To document the initial specification of services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To determine the initial dependencies and the communication between services.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
