<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-g0oNQ-akI0EiZj0qUM-3MA" name="new_concept,_zJPhoDx3EduNwuGvuWPNZA" guid="-g0oNQ-akI0EiZj0qUM-3MA" changeDate="2007-01-17T16:18:21.211-0800" version="1.0.0">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &quot;Security&quot; is generally perceived to be a complex, mind-numbing discipline.&amp;nbsp; A &quot;pattern&quot; is a term that most&#xD;
    people believe they have an intuitive understanding of, because it is a natural part of human education to recognize&#xD;
    and generalize about perceived patterns.&amp;nbsp; For the purposes of this exercise we will take the following as working&#xD;
    definitions:&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        &lt;strong>Security&lt;/strong> is &lt;em>&quot;The condition of a system that results from the establishment and maintenance of&#xD;
        measures to protect the system.&quot;&lt;/em>&amp;nbsp; [&lt;a href=&quot;./resources/#references&quot;>1&lt;/a>]&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;em>&quot;A &lt;strong>pattern&lt;/strong> is the abstraction from a concrete form which keeps recurring in specific&#xD;
        non-arbitrary contexts.&quot;&lt;/em> [&lt;a href=&quot;./resources/#references&quot;>2&lt;/a>]&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    So, to attempt to couple the two terms, &quot;security&quot; and &quot;patterns&quot; can introduce some tension.&amp;nbsp; There have been&#xD;
    various attempts to produce security patterns (see appendix A).&amp;nbsp;&amp;nbsp; This paper has attempted to collect and&#xD;
    codify the material that has been gathered over several years by various security practioners from various customer&#xD;
    engagements producing a strawman for IBM security patterns. The working definition for &quot;security patterns&quot; in the&#xD;
    context of this paper is:&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        &lt;em>An abstraction of the conditions that result from the establishment and maintenance of recurring measures used&#xD;
        to protect the system.&lt;/em>&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    Within the software development community there is currently an effort to establish [&lt;a&#xD;
    href=&quot;./resources/#references&quot;>3&lt;/a>] a methodology for pattern development.&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        &lt;em>Fundamental to any science or engineering discipline is a common vocabulary for expressing its concepts, and a&#xD;
        language for relating them together. The goal of patterns within the software community is to create a body of&#xD;
        literature to help software developers resolve recurring problems encountered throughout all of software&#xD;
        development. Patterns help create a shared language for communicating insight and experience about these problems&#xD;
        and their solutions. Formally codifying these solutions and their relationships lets us successfully capture the&#xD;
        body of knowledge which defines our understanding of good architectures that meet the needs of their users. Forming&#xD;
        a common pattern language for conveying the structures and mechanisms of our architectures allows us to&#xD;
        intelligibly reason about them. The primary focus is not so much on technology as it is on creating a culture to&#xD;
        document and support sound engineering architecture and design.&lt;/em> [&lt;a href=&quot;./resources/#references&quot;>4&lt;/a>]&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    The fundamental point of confusion, is that patterns, like beauty, seem to be in the eye of the beholder.&amp;nbsp;So, if&#xD;
    you get any 5 security people together, they will define patterns specific to their area of interest.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is for this reason, that I digress into a discussion of &quot;roles&quot; to help group patterns by the community of&#xD;
    interest.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Who's on First?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Within the world of software, there are people who design things, people who draw pictures and write documents, people&#xD;
    who write code, and people who pull all the pieces together and provide computer based systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each organization probably has its own way of defining the tasks, but there are archetypal roles.&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        &lt;em>An archetype is an idealized model of a person, object or concept from which similar instances are derived,&#xD;
        copied, patterned or emulated. In psychology, an archetype is a model of a person, personality or behaviour.&lt;/em>&#xD;
        [&lt;a href=&quot;./resources/#references&quot;>5&lt;/a>]&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    In any medium to large organization, tasks are assigned to different people based on their organizational&#xD;
    responsibilities.&amp;nbsp; In general, business analysts and business applications need to protect the informational&#xD;
    assets of the business. They drive the creation of the business application requirements for security.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Archetype 1 -&amp;nbsp;Business Analyst&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    In organizations that have to comply with legislative or regulatory requirements there is sometimes a specific set of&#xD;
    tasks at the &quot;C&quot; level to monitor and enforce these regulations.&amp;nbsp; The CSO and CPO generally work with business&#xD;
    analysts to compile a set of corporate guidelines and requirements - the fundamentals of good business practice.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Archetype 2 - Chief Security (Privacy) Officer&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Most organizations of any size today have a firewall. Even individual users in their homes establish firewalls for&#xD;
    their home networks. Someone has to setup and maintain these devices. Some are simple, some are complex.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Archetype 3 - Network Security Officer&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    When it&amp;nbsp; comes to actually understanding and selecting some kind of security mechanisms to meet the requirements&#xD;
    specified by the business, there are many people that work together to implement security.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Archteype 4 -&amp;nbsp; Security Architect&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    TBD: Security Developer, Security Deployer, Security Policy Author, Security Policy Administrator, Security System&#xD;
    Adminstrator&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Looking at patterns by Role&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It is the intent of this paper and the accompanying slide deck, to provide a strawman for identifying and illustrating&#xD;
    existing common security patterns within the IBM customer- business analyst community.&amp;nbsp; The task of the e-business&#xD;
    patterns effort is&amp;nbsp; the reconciliation of the volume of information into an abstraction that is general enough to&#xD;
    be grasped by the non-security practitioner and yet maintains enough context to provide a concrete underpinning to the&#xD;
    security community.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    IBM is a microcosm of the larger software industry in that it represents both product development and business&#xD;
    application service development, as well as middleware products for management and deployment of applications.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are several methodologies for designing and developing secure applications (i.e MASS, Open Group, JAAS) but&#xD;
    several of these are targetted to the trained security professional with a detailed understanding of technology. So,&#xD;
    one group of patterns will be &quot;security architectural patterns&quot;. Detailed architectures for security are needed for&#xD;
    developing the technology to provide security solutions and these are referenced by the patterns where appropriate but&#xD;
    it is not the intent of this paper to document all the security architectural patterns.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What is security?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The IETF is an organization that has been fundamental to the development of the internet as we know it today. The IETF&#xD;
    established a security glossary in 2000, and this captures most if the fundamental concepts of computer security.&#xD;
    Improvements are made, new technologies and mechanisms come in and out of use, but the basic definitions remain.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The most common components that are in practice today for security include the following:&amp;nbsp; identification and&#xD;
    authentication, authorization, assurance, audit, message protection, confidentiality, integrity.&amp;nbsp; Rather than only&#xD;
    providing patterns for each individual security mechanism, this strawman has looked across the individual security&#xD;
    mechanisms to identify the common characteristics.&amp;nbsp; This white paper focuses on the identification of a &quot;security&#xD;
    solution pattern&quot;.&amp;nbsp; These common elements were derived from looking at a detailed set of individual pattern&#xD;
    elements for each security mechanism (i.e, authentication---- username, password, Kerberos, PKI) and then abstracting&#xD;
    those things that were in common across authentication, authorization, assurance, etc.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Looking for common elements in all security patterns&amp;nbsp; resulted in the identification of the 3 sub-pattern elements&#xD;
    that are present in some form in any type of security solution:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        there has to be&amp;nbsp;a point within the software where the security mechanism is called (i.e.&amp;nbsp;a &quot;control&#xD;
        point&quot;)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        there is typically some type of meta-information that is important to the execution of #1 and&amp;nbsp; this is called&#xD;
        &quot;system trust and access properties&quot;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        there is some task which relates to the initialization and ongoing maintenance of the security mechanism and these&#xD;
        are called &quot;security management/workflow tasks&quot;.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;506&quot; alt=&quot;An overview of security patterns&quot; src=&quot;./resources/security_patterns_overview.png&quot;&#xD;
    width=&quot;440&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To demonstrate how each individual security mechanism can be mapped to these 3 sub-elements we give an example of&#xD;
    &quot;identification&quot;.&amp;nbsp; Again, from the IETF glossary:&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        &lt;em>identification&amp;nbsp; -&amp;nbsp; (I) An act or process that presents an identifier to a system so that the system&#xD;
        can recognize a system entity and distinguish it from other entities. (See: authentication.)&lt;/em>&amp;nbsp;&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    Distinguishing one person from another when invoking an application is a pattern that every business confronts. The&#xD;
    strategies for addressing the business problem vary based on the number and diversity of the elements involved in the&#xD;
    application and its deployment environment.&amp;nbsp; Some businesses leave the decision about &quot;naming&quot; to the individual&#xD;
    applications or maybe to a group of applications in a line of business.&amp;nbsp; Some businesses are constrained by the&#xD;
    software in their data centers. Some have tightly coupled the application deployment environment to a strict set of&#xD;
    mechanisms.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Nonetheless, there is a point at which an &quot;identifier&quot; is presented to an application, and this is considered to be a&#xD;
    &quot;security control point&quot; pattern, for identification.&amp;nbsp;&amp;nbsp; The quanitity and type of information required also&#xD;
    varies significantly.&amp;nbsp;&amp;nbsp; An identifier can be a real person's name, (i.e.&amp;nbsp; Maryann Hondo) or a&amp;nbsp;&#xD;
    pseudonym (e.g. mhondo).&amp;nbsp; The identifier can be globally unique (a UUID) or it can be unique within a qualified&#xD;
    namespace ( i.e. &lt;a href=&quot;mailto:mhondo@us.ibm.com&quot;>mhondo@us.ibm.com&lt;/a>) .&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Characteristics of a Security Pattern&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Definition of one or more control points (Identity, authentication, authorization, policy enforcement, audit,&#xD;
        compliance, message protection)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definition of system protection properties (Configuration constraints; trust and access rules)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definition of management tasks (Provisioning, registry/repository synchronization, governance, monitoring)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;references&quot; name=&quot;references&quot;>References&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        RFC 2828 Internet Security Glossary May 2000&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;em>Understanding and Using Patterns in Software Development&lt;/em>, Dirk Riehle and Heinz Zullighoven.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;em>Design Patterns: Elements of Reusable Object-Oriented Software,&lt;/em> Erich Gamma, Richard Helm, Ralph Johnson,&#xD;
        and John Vlissides.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;em>Patterns and Software: Essential Concepts and Terminology&lt;/em>, Brad Appleton: &lt;a&#xD;
        href=&quot;http://www.cmcrossroads.com/bradapp/docs/patterns-intro.html#Origins&quot;>http://www.cmcrossroads.com/bradapp/docs/patterns-intro.html#Origins&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Wikipedia: &lt;a href=&quot;http://en.wikipedia.org/wiki/Archetype&quot;>http://en.wikipedia.org/wiki/Archetype&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ol></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
