<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-pSGOBEqs6zSZJIr1U1WcQA" name="new_term_definition,_rerwYE6kEduhs-ki98mFFw" guid="-pSGOBEqs6zSZJIr1U1WcQA" changeDate="2007-05-23T22:18:08.390-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    A service component is a realization of a subsystem, a logical grouping of functionally-cohesive business-aligned&#xD;
    services, which is important enough to the enterprise to be managed and governed as an enterprise asset. These&#xD;
    business-aligned services can be exposed at a variety of boundaries, including the edge of the enterprise or a business&#xD;
    unit. For example, IT department and you need to interact with the Purchasing department to procure software, the&#xD;
    Purchasing department could expose a service to act as a point of interaction for the IT department.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A service component provides a common abstraction of the realization mechanism and has specification and realization&#xD;
    elements. Service components must be endowed with additional reuse and portability practices. These practices are all&#xD;
    examples of a general practice called &quot;seperation of concerns&quot;. This practice results in a component that is composed&#xD;
    (aggregated actually) from a business logic core and a collection of support elements that adapt the component core to&#xD;
    its host environment and provide a usage pattern for it.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
