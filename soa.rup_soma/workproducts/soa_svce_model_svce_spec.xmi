<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_q5v-oPS3EdmIX5Pw7v8pRw" name="soa_svce_model_svce_spec,{20F06B5E-95D5-422C-AB68-7C213D28533A}" guid="_q5v-oPS3EdmIX5Pw7v8pRw" changeDate="2006-12-19T16:05:15.549-0800" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    The use of an interface denotes a set of operations provided by a service. Note that a service may implement more than&#xD;
    one interface. By convention it is possible to attach a protocol state machine or UML 2.0 Collaboration to such a&#xD;
    specification to denote the order of invocation of operations on a service specification. With such a behavioral&#xD;
    specification any implementing service can be validated against not only a static but dynamic specification of its&#xD;
    structure and behavior.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The use of a class allows for a specification to directly denote a set of required as well as provided capabilities as&#xD;
    a complete unit.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that the service specification may only provide public features. The ability to include properties on a service&#xD;
    specification allows for the modeling of resources.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The specification has a property 'status' that is used to represent a concept common across the SOA methodologies; that&#xD;
    of a distinct lifecycle for service descriptions. In the profile an enumeration is used to capture these common values,&#xD;
    as listed below.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Candidate (default) --&amp;nbsp;denotes that the service specification has been created from some identification task&#xD;
        but has yet to be formally accepted. Acceptance can include passing certain tests (SOMA), alignment with the&#xD;
        enterprise service portfolio (RUP/SOA), etc.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accepted -- denotes that a service has moved from a candidate status to accepted, though this simply implies that&#xD;
        the service will be developed, the scope of the service has yet to be determined.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Exposed -- denotes that the service is to be exposed outside of its immediate scope. This implies the service is to&#xD;
        be made available for reuse, it does not specify the particular scope, this should not be read as 'public on the&#xD;
        Internet' for example.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Also the property 'source' allows the designer to denote which technique or source domain was used to identify this&#xD;
    service. See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_bp_D5A863FB.html&quot; guid=&quot;_am-VYCwTEduKcvYAyaKSaA&quot;>Task:&#xD;
    Business Process Analysis&lt;/a>, &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_data_1AFDAC0A.html&quot; guid=&quot;_mJtYwCwTEduKcvYAyaKSaA&quot;>Task:&#xD;
    Data Model Analysis&lt;/a>, &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_legacy_CF2A5A41.html&quot;&#xD;
    guid=&quot;_xQpQ8CwTEduKcvYAyaKSaA&quot;>Task: Existing Asset Analysis&lt;/a>, &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_rules_DAB02396.html&quot; guid=&quot;_6zx0ECwTEduKcvYAyaKSaA&quot;>Task:&#xD;
    Business Rule Analysis&lt;/a>, and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../soa.rup_soma/tasks/soa_service_identification_uc_F1F4D8B7.html&quot; guid=&quot;_GkKR4CwUEduKcvYAyaKSaA&quot;>Task:&#xD;
    Business Use Case Analysis (SOA)&lt;/a>.&#xD;
&lt;/p></mainDescription>
  <purpose>&lt;a id=&quot;XE_service_specification__artifact_definition&quot; name=&quot;XE_service_specification__artifact_definition&quot;>&lt;/a>&lt;a&#xD;
id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The following people use the service interface:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Implementers&lt;/b> &lt;strong>of the services&lt;/strong>, for an understanding of the interface the service provides,&#xD;
        but also the behavior its clients expect.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Implementers&lt;/b> &lt;strong>of service clients&lt;/strong>, for an understanding of the interface the service&#xD;
        provides, but also how the service expects to be interacted with.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Designers&lt;/b> &lt;strong>of services&lt;/strong>, in understanding the relationship between specifications and the&#xD;
        relationship between services and the specifications they implement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Those who design the next version of the system,&lt;/b> to understand the functionality in the service model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Those who test the classes,&lt;/b> to plan testing tasks.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The service specification has to provide both the provider (implementer) of a service and the consumer of a service&#xD;
    with a reasonable and complete specification of the following aspects:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Interface Specification&lt;/b>; this specifies the set of operations provided by a service realizing this&#xD;
        specification. Each operation is named and provides a signature composed of input, output, and exception messages.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Behavioral Specification&lt;/b>; this specifies the protocol between the service and the consumer. A service may be&#xD;
        stateful (either explicit or implicit - see the guideline &lt;i>&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../soa.rup_soma/guidances/guidelines/state_management_for_services_E4156B50.html&quot;&#xD;
        guid=&quot;4.2228409903513537E-306&quot;>State Management for Services&lt;/a>&lt;/i>) or it may have certain conversational&#xD;
        requirements fulfilled by the client.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Policy Specification&lt;/b>; this specifies constraints and policies regarding the operation of the service.&#xD;
        Examples of policies include security (see&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../soa.rup_soma/tasks/sec_identify_security_patterns_1953748F.html&quot;&#xD;
        guid=&quot;_m8lcIDIyEduePY7oPsXsLA&quot;>Task: Identify Security Patterns&lt;/a>), availability, quality of service and so on;&#xD;
        these also represent non-functional requirements of the solution as a whole.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Variability Specification&lt;/strong>; this specifies how the service is configured for deployment and how it&#xD;
        can support generic use cases through variability in it's behavior both dynamically (messages at runtime) and&#xD;
        statically (through configuration parameters).&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  <representationOptions>UML Representation: &#xD;
&lt;p>&#xD;
    Interface or Class, stereotyped as &amp;lt;&amp;lt;Service Specification&amp;gt;&amp;gt;.&amp;nbsp;A specification &lt;i>should&lt;/i> also&#xD;
    provide either a protocol state machine or collaboration that documents its behavioral specification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Properties:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        status : SpecificationStatus - denotes a service specification as a candidate service, that is a service that has&#xD;
        been identified but not yet qualified for development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        source : String - this property is used to capture the 'method' or technique used to identify the service&#xD;
        specification.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When a Class is being used as the representation for a Service Specification the class should NOT include any behavior.&#xD;
&lt;/p>&lt;br /></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
