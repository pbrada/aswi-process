<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2OrD89nmEdmO6L4XMImrsA" name="rup_build,{53728CD9-FA47-4B58-A443-E9F9DC196916}" guid="_2OrD89nmEdmO6L4XMImrsA" changeDate="2005-09-28T06:28:52.001-0700" version="7.1.0">
  <purpose>&lt;a id=&quot;XE_build__as_artifact&quot; name=&quot;XE_build__as_artifact&quot;>&lt;/a>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot;&#xD;
name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The purpose of a build, constructed from other elements in the implementation, is to deliver a testable subset of the&#xD;
    run-time functions and capabilities of the system. The Rational Unified Process (RUP) suggests that a sequence of&#xD;
    builds be constructed during an iteration, adding capability with each, as elements from implementation subsystems are&#xD;
    added or improved.&amp;nbsp; Builds can be constructed at all levels of a system, encompassing single or multiple&#xD;
    subsystems, but in the RUP, we are concerned in particular with the builds that are defined in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/workproducts/rup_integration_build_plan_31CE4B79.html&quot;&#xD;
    guid=&quot;{FA56B557-857D-4122-8E60-7A4A84418EB1}&quot;>Artifact: Integration Build Plan&lt;/a>, because these are the stepping&#xD;
    stones to the completion of the iteration.&amp;nbsp; If the system size or complexity warrants it, the Integration Build&#xD;
    Plan can be refined into multiple plans, covering individual subsystems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that informal builds can be constructed by an implementer for several reasons - unit testing, for example - using&#xD;
    elements from the implementer's private development workspace and the subsystem and system integration workspaces, as&#xD;
    appropriate. However, as the term is used here, builds are constructed by an integrator, from identified versions of&#xD;
    elements delivered by the implementers into the subsystem or system integration workspaces, as defined in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/workproducts/rup_integration_build_plan_31CE4B79.html&quot;&#xD;
    guid=&quot;{FA56B557-857D-4122-8E60-7A4A84418EB1}&quot;>Artifact: Integration Build Plan&lt;/a>.&#xD;
&lt;/p></purpose>
  <representationOptions>UML Representation: Package in the implementation model (either its top-level package or an implementation subsystem),&#xD;
stereotyped as &amp;lt;&amp;lt;build&amp;gt;&amp;gt;.&amp;nbsp; &#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Builds are obviously mandatory, however, the &lt;i>kinds&lt;/i> of builds that a project produces will change over the&#xD;
    lifecycle. In the inception phase, the concern may be to produce prototypes as a way to better understand the problem&#xD;
    or communicate with the customer; in elaboration, to produce a stable architecture, and in construction, to add&#xD;
    functionality. In transition, the focus shifts to ensuring that the software reaches deliverable quality.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
