<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1dCysNnmEdmO6L4XMImrsA" name="rup_architectural_proof_of_concept,{198EA2A5-4FBA-45D5-85BA-53B108728534}" guid="_1dCysNnmEdmO6L4XMImrsA" changeDate="2005-08-20T20:58:22.081-0700" version="7.1.0">
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_architectural_proof-of-concept__as_artifact&quot;&#xD;
name=&quot;XE_architectural_proof-of-concept__as_artifact&quot;>&lt;/a>&lt;a id=&quot;XE_architectural_proof-of-concept__purpose&quot;&#xD;
name=&quot;XE_architectural_proof-of-concept__purpose&quot;>&lt;/a>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The purpose of the Architectural Proof-of-Concept is to determine whether there exists, or is likely to exist, a&#xD;
    solution that satisfies the architecturally-significant requirements.&amp;nbsp;&#xD;
&lt;/p></purpose>
  <representationOptions>&lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The Architectural Proof-of-Concept may take many forms, for example:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        a list of known technologies (frameworks, patterns, executable architectures) which seem appropriate to the&#xD;
        solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a sketch of a conceptual model of a solution using a notation such as UML&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a simulation of a solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        an executable prototype&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The decision about whether or not an Architectural Proof-of-Concept is required and what form it should take depends&#xD;
    on:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        how well the domain is understood - if the domain is unfamiliar, the Architectural Proof-of-Concept may not only&#xD;
        explore possible solutions, but may also help the customer and development organizations understand and clarify&#xD;
        requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the novelty of the system - if the development organization has constructed many such systems previously then it&#xD;
        should not be necessary to build a proof-of-concept - it should be possible to base a determination of feasibility&#xD;
        on existing reference architectures and technologies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        whether or not, even though the domain is familiar and the system is precedented, any of the requirements are&#xD;
        judged to be particularly onerous; for example, ultra-high transaction rates or extreme reliability are required&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The higher the risk, the more effort needs to be put into this architectural synthesis activity in Inception (with the&#xD;
    expectation of more realistic results from the models produced and assessed), so that all stakeholders can be convinced&#xD;
    that the basis for committing funds and continuing into Elaboration is credible. However, it has to be recognized that&#xD;
    all risks cannot be eliminated in this phase. The Inception phase should not be distorted into a de-facto Elaboration&#xD;
    phase.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
