<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1F9IYNnmEdmO6L4XMImrsA" name="use_case,4.1983217662266927E-305" guid="_1F9IYNnmEdmO6L4XMImrsA" changeDate="2005-06-20T20:29:37.266-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_use_case__guidelines_for&quot; name=&quot;XE_use_case__guidelines_for&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Explanation&quot; name=&quot;Explanation&quot;>Explanation&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    There are several key words in this definition:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Use-case instance&lt;/b>&lt;i>.&lt;/i> The sequence referred to in the definition is really a specific flow of events&#xD;
        through the system, or an instance. Many flows of events are possible, and many may be very similar. To make a&#xD;
        use-case model understandable, you should group similar flows of events into one use case. Identifying and&#xD;
        describing a use case really means identifying and describing a group of related flows of events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>System performs&lt;/b>&lt;i>.&lt;/i> This means that the system provides the use case. An actor communicates with a&#xD;
        use-case instance of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>An observable result of value.&lt;/b> You can put a value on a successfully performed use case. A use case should&#xD;
        make sure that an actor can perform a task that has an identifiable value. This is very important in determining&#xD;
        the correct level or granularity for a use case. Correct level refers to achieving use cases that are not too&#xD;
        small. In certain circumstances, you can use a use case as a planning unit in an organization that includes&#xD;
        individuals who are actors in the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Actions.&lt;/b> An action is a computational or algorithmic procedure. It is invoked either when the actor provides&#xD;
        a signal to the system or when the system gets a time event. An action may imply signal transmissions to either the&#xD;
        invoking actor or other actors. An action is atomic, which means it is performed either entirely or not at all.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>A particular actor&lt;/b>&lt;i>.&lt;/i> The actor is key to finding the correct use case, especially because the actor&#xD;
        helps you avoid use cases that are too large. As an example, consider a visual modeling tool. There are really two&#xD;
        actors to this application: a developer - someone who develops systems using the tool as support; and a system&#xD;
        administrator - someone who manages the tool. Each of these actors has his own demands on the system, and will&#xD;
        therefore require his own set of use cases.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The functionality of a system is defined by different use cases, each of which represents a specific flow of events.&#xD;
    The description of a use case defines what happens in the system when the use case is performed.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturecenter&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;173&quot; alt=&quot;Diagram described in caption.&quot; src=&quot;resources/im_uc.gif&quot; width=&quot;325&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    In an automated teller machine the client can, for instance, withdraw money from an account, transfer money to an&#xD;
    account, or check the balance of an account. These functions correspond to flows that you can represent with use cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each use case has a task of its own to perform. The collected use cases constitute all the possible ways of using the&#xD;
    system. You can get an idea of a use-case task simply by observing its name.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;How to Find Use Cases&quot; name=&quot;How to Find Use Cases&quot;>How to Find Use Cases&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Following is a set of questions that are useful when identifying use cases:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For each actor you have identified, what are the tasks in which the system would be involved?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the actor need to be informed about certain occurrences in the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Will the actor need to inform the system about sudden, external changes?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the system supply the business with the correct behavior?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Can all features be performed by the use cases you have identified?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What use cases will support and maintain the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What information must be modified or created in the system?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Use cases that are often overlooked, since they do not represent what typically are the primary functions of the&#xD;
    system, can be of the following kind:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        System start and stop.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintenance of the system. For example, adding new users and setting up user profiles.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintenance of data stored in the system. For example, the system is constructed to work in parallel with a legacy&#xD;
        system, and data needs to be synchronized between the two.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Functionality needed to modify behavior in the system. An example would be functionality for creating new reports.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If you have developed a business use-case model and a business analysis model, these artifacts are a good starting&#xD;
    point for identifying use cases.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;How a Use Case Evolves&quot; name=&quot;How a Use Case Evolves&quot;>How a Use Case Evolves&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In early iterations in elaboration, only a few use cases (those that are considered architecturally significant) are&#xD;
    described in any detail beyond the brief description. You should always first develop an outline of the use case (in&#xD;
    step-by-step format) before delving into the details. This step-by-step outline should be your first attempt at&#xD;
    defining the structure of the flow of events of the use case (see &lt;a href=&quot;#Flow%20of%20Events%20-%20Structure&quot;>Flow of&#xD;
    Events - Structure&lt;/a> below). Always start with the basic flow of the use case. Once there is some agreement on the&#xD;
    outline of the basic flow, you can add what the alternative flows should be in relation to the basic flow.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Towards the end of elaboration, all use cases you plan to describe in detail should be completed.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Are All Use Cases Described in Detail?&quot; name=&quot;Are All Use Cases Described in Detail?&quot;>Are All Use Cases&#xD;
    Described in Detail?&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    There will often be use cases in your model that are so simple that they do not need a detailed description of the flow&#xD;
    of events, a step-by-step outline is quite enough. The criteria for making this decision is that you don't see&#xD;
    disagreement among user kind of readers on what the use case means, and that designers and testers are comfortable with&#xD;
    the level of detail provided by the step-by-step format. Examples are use cases that describe simple entry or retrieval&#xD;
    of some data from the system.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_use_case__scope_of_a_use_case&quot; name=&quot;XE_use_case__scope_of_a_use_case&quot;>&lt;/a>&lt;a id=&quot;The Scope of a Use Case&quot;&#xD;
    name=&quot;The Scope of a Use Case&quot;>The Scope of a Use Case&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It is often hard to decide if a set of user-system interactions, or dialog, is one or several use cases. Consider the&#xD;
    use of a recycling machine. The customer inserts deposit items, such as cans, bottles, and crates, into the recycling&#xD;
    machine. When she has inserted all her deposit items, she presses a button, and a receipt is printed. She can then&#xD;
    exchange this receipt for money.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is it one use case to insert a deposit item, and another use case to require the receipt? Or is it all one use case?&#xD;
    There are two actions, but one without the other is of little value to the customer. Rather, it is the complete dialog&#xD;
    with all the insertions, and getting the receipt, that is of value for the customer (and makes sense to her). Thus, the&#xD;
    complete dialog, from inserting the first deposit item, to pressing the button and getting the receipt, is a complete&#xD;
    case of use, a use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Additionally, you want to keep the two actions together, to be able to review them at the same time, modify them&#xD;
    together, test them together, write manuals for them and in general manage them as a unit. This becomes very obvious in&#xD;
    larger systems.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;How Use Cases Are Realized&quot; name=&quot;How Use Cases Are Realized&quot;>How Use Cases Are Realized&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A use case describes what happens in the system when an actor interacts with the system to execute the use case. The&#xD;
    use case does not define how the system internally performs its tasks in terms of collaborating objects. This is left&#xD;
    for the use-case realizations to show.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In the telephone example, the use case would indicate - among other things - that the system issues a signal when the&#xD;
    receiver is lifted and that the system then receives digits, finds the receiving party, rings his telephone, connects&#xD;
    the call, transmits speech, and so on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In an executing system, an instance of a use case does not correspond to any particular object in the implementation&#xD;
    model (for example, an instance of a class in the code). Instead, it corresponds to a specific flow of events that is&#xD;
    invoked by an actor and executed as a sequence of events among a set of objects. In other words, instances of use cases&#xD;
    correspond to communicating instances of implemented objects. We call this the realization of the use case. Often, the&#xD;
    same objects participate in realizations of more than one use case. For example, both the use cases Deposit and&#xD;
    Withdrawal in a banking system may use a certain account object in their realization. This does not mean that the two&#xD;
    use cases communicate, only that they use the same object in their realization.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can view a flow of events as consisting of several subflows, which taken together yield the total flow of events.&#xD;
    You can reuse the description of a subflow in other use cases' flow of events. Subflows in the description of one use&#xD;
    case's flow of events may be common to those of other use cases. In the design you should have the same objects perform&#xD;
    this common behavior for all the relevant use cases; that is, only one set of objects should perform this behavior, no&#xD;
    matter which use case is executing.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In an automated teller machine system the initial subflow is the same in the flow of events of the use cases Withdraw&#xD;
    Money and Check Balance. The flow of events of both use cases start by checking the identity of the card and the&#xD;
    client's personal access code.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;A Use-Case has Many Possible Instances&quot; name=&quot;A Use-Case has Many Possible Instances&quot;>A Use Case has Many&#xD;
    Possible Instances&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A use-case instance can follow an almost unlimited, but enumerable, number of paths. These paths represent the choices&#xD;
    open to the use-case instance in the description of its flow of events. The path chosen depends on events. Types of&#xD;
    events include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Input from an actor. For example, an actor can decide, from several options, what to do next.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In the use case Recycle Items in the Recycling-Machine System the Customer always has two options: hand in still&#xD;
    another deposit item or get the receipt of returned items.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A check of values or types of an internal object or attribute. For example, the flow of events may differ if a&#xD;
        value is greater or less than a certain value.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In the use case Withdraw Money in an automated teller machine system, the flow of events will differ if the Client asks&#xD;
    for more money than he has in his account. Thus, the use-case instance will follow different paths.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Concurrency of Use Case Instances&quot; name=&quot;Concurrency of Use Case Instances&quot;>Concurrency of Use-Case&#xD;
    Instances&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Instances of several use cases and several instances of the same use case work concurrently if the system permits it.&#xD;
    In use-case modeling, you can assume that instances of use cases can be active concurrently without conflict. The&#xD;
    design model is expected to solve this problem, because use-case modeling does not describe how things work. One way to&#xD;
    view this is to assume that only one use-case instance is active at a time and that executing this instance is an&#xD;
    atomic action. In use-case modeling, the &quot;interpreting machine&quot; is considered infinitely fast, so that serialization of&#xD;
    use case instances is not a problem.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Name&quot; name=&quot;Name&quot;>Name&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Each use case should have a name that indicates what is achieved by its interaction with the actor(s). The name may&#xD;
    have to be several words to be understood. No two use cases can have the same name.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    These are examples of variations of the name for the use case Recycle Items in the Recycling Machine example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Receive Deposit Items&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Receiving Deposit Items&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Return Deposit Items&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deposit Items&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Brief Description&quot; name=&quot;Brief Description&quot;>Brief Description&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The brief description of the use case should reflect its purpose. As you write the description, refer to the actors&#xD;
    involved in the use case, the glossary and, if you need to, define new concepts.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    Following are sample brief descriptions of the use cases Recycle Items and Add New Bottle Type in the Recycling-Machine&#xD;
    System:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Recycle Items&lt;/b>: The user uses this machine to automatically have all the return items (bottles, cans, and crates)&#xD;
    counted, and receives a receipt. The receipt is to be cashed at a cash register (machine).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Add New Bottle Type&lt;/b>: New kinds of bottles can be added to the machine by starting it in 'learning mode' and&#xD;
    inserting 5 samples just like when returning items. In this way, the machine can measure the bottles and learn to&#xD;
    identify them. The manager specifies the refund value for the new bottle type.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_use_case__flow_of_events&quot; name=&quot;XE_use_case__flow_of_events&quot;>&lt;/a>&lt;a id=&quot;XE_flow_of_events__guidelines_for&quot;&#xD;
    name=&quot;XE_flow_of_events__guidelines_for&quot;>&lt;/a>&lt;a id=&quot;Flow of Events - Contents&quot; name=&quot;Flow of Events - Contents&quot;>Flow of&#xD;
    Events - Contents&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The &lt;b>Flow of Events&lt;/b> of a use case contains the most important information derived from use-case modeling work. It&#xD;
    should describe the use case's flow of events clearly enough for an outsider to easily understand it. Remember the flow&#xD;
    of events should present what the system does, not how the system is design to perform the required behavior.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Guidelines for the contents of the flow of events are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Describe how the use case starts and ends.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Describe what data is exchanged between the actor and the use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do not describe the details of the user interface, unless it is necessary to understand the behavior of the system.&#xD;
        For example, it is often good to use a limited set of web-specific terminology when it is known beforehand that the&#xD;
        application is going to be web-based. Otherwise, your run the risk that the use-case text is being perceived as too&#xD;
        abstract. Words to include in your terminology could be &quot;navigate&quot;, &quot;browse&quot;, &quot;hyperlink&quot; &quot;page&quot;, &quot;submit&quot;, and&#xD;
        &quot;browser&quot;. However, it is not advisable to include references to &quot;frames&quot; or &quot;web pages&quot; in such a way that you are&#xD;
        making assumptions about the boundaries between them - this is a critical design decision.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Describe the flow of events, not only the functionality. To enforce this, start every action with &quot;When the actor&#xD;
        ... &quot;.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Describe only the events that belong to the use case, and not what happens in other use cases or outside of the&#xD;
        system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Avoid vague terminology.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Detail the flow of events-all &quot;whats&quot; should be answered. Remember that test designers are to use this text to&#xD;
        identify test cases.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If you have used certain terms in other use cases, be sure to use the exact same terms in this use case, and that their&#xD;
    intended meaning is the same. To manage common terms, put them in a glossary.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Flow of Events - Structure&quot; name=&quot;Flow of Events - Structure&quot;>Flow of Events - Structure&lt;/a> &lt;a href=&quot;#Top&quot;>&lt;img&#xD;
    height=&quot;20&quot; alt=&quot;To top of page&quot; src=&quot;./../../../core.base_rup/resources/top.gif&quot; width=&quot;26&quot; border=&quot;0&quot; />&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The two main parts of the flow of events are &lt;b>basic flow of events&lt;/b> and &lt;a&#xD;
    id=&quot;XE_flow_of_events__alternative_flow&quot; name=&quot;XE_flow_of_events__alternative_flow&quot;>&lt;/a>&lt;b>alternative flows of&#xD;
    events&lt;/b>. The basic flow of events should cover what &quot;normally&quot; happens when the use case is performed. The&#xD;
    alternative flows of events cover behavior of optional or exceptional character in relation to the normal behavior, and&#xD;
    also variations of the normal behavior. You can think of the alternative flows of events as &quot;detours&quot; from the basic&#xD;
    flow of events, some of which will return to the basic flow of events and some of which will end the execution of the&#xD;
    use case.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;212&quot; alt=&quot;Diagram described in caption.&quot; src=&quot;resources/ucstrct.gif&quot; width=&quot;231&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    The typical structure of the flow of events. The straight arrow represents the basic flow of events, and the curves&#xD;
    represent alternative paths in relation to the normal. Some alternative paths return to the basic flow of events;&#xD;
    whereas others end the use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Both the basic flow of events and the alternative flows events should be further structured into steps or subflows. In&#xD;
    doing this, your main goal should be readability of the text (see also the section &lt;a&#xD;
    href=&quot;#Flow%20of%20Events%20-%20Style&quot;>Flow of Events - Style&lt;/a> below). A rule of thumb is that a subflow should be a&#xD;
    segment of behavior within the use case that has a clear purpose, and is &quot;atomic&quot; in the sense that you do either all&#xD;
    or none of the actions described. You may need to have several levels of subflows, but if you can you should avoid it&#xD;
    since it makes the text more complex and harder to understand. You can illustrate the structure of the flow of events&#xD;
    with an activity diagram, see &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/activity_diagram_in_the_use-case_model_C2043F1.html&quot;&#xD;
    guid=&quot;7.230899877161861E-305&quot;>Work Product Guideline: Activity Diagram in the Use Case&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This type of written text, structured into consecutive subsections, will by its nature imply to the reader that there&#xD;
    is a sequence between the subflows. To avoid misunderstandings, you should always point out whether the order of the&#xD;
    subflows is fixed or not. Considerations of this kind are often related to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Business rules. For example, the user has to be authorized before the system can make certain data available.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        User-interface design. For example, the system should not enforce a certain sequence of behavior that may be&#xD;
        intuitive to some but not to other users.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    To clarify where an alternative flow of events fits in the structure, you need to describe the following for each&#xD;
    &quot;detour&quot; to the basic flow of events:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Where in the basic flow of events the alternative behavior can be inserted.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The condition that needs to be fulfilled for the alternative behavior to start.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How and where the basic flow of events is resumed, or how the use case ends.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    This is an alternative subflow in the use case Return Items in the Recycling-Machine System.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>2.1. Bottle Stuck&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    If in section 1.5, Insert Deposit Items, a bottle gets stuck in the gate, the sensors around the gate and the measuring&#xD;
    gate will detect this problem. The conveyer belt is stopped and the machine issues an alarm to call for the operator.&#xD;
    The machine will wait for the operator to indicate that the problem has been fixed. The machine then continues in&#xD;
    section 1.9 of the basic flow.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the example above, the alternative flow of events is inserted at a specific location in the basic flow of events.&#xD;
    There are also alternative flow of events that can be inserted at more than one location, some can even be inserted at&#xD;
    any location in the basic flow of events.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    This is an alternative subflow in the use case Return Items in the Recycling-Machine System.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>2.2. Front Panel is Removed&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    If somebody removes the front panel to the Recycling machine, the can compression is deactivated. It will not be&#xD;
    possible to start the can compression with the front panel off. The removal will also activate an alarm to the&#xD;
    operator. When the front panel is closed again, the machine resumes operation from the location in the basic flow of&#xD;
    events at which it was stopped.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It might be tempting, if the alternative flow of events is very simple, to just describe it in the basic flow of events&#xD;
    section (using some informal &quot;if-then-else&quot; construct). This should be avoided. Too many alternatives will make the&#xD;
    normal behavior difficult to see. Also, including alternative paths in the basic flow of events section will make the&#xD;
    text more &quot;pseudo-code like&quot; and harder to read.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In general, extracting parts of the flow of events and describing these parts separately, can increase the readability&#xD;
    of the basic flow of events and improve the structure of the use case and the use-case model. You can model extracted&#xD;
    parts as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An alternative flow of events within the base use case if it is a simple variant, option, or exception to the basic&#xD;
        flow of events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        As an explicit inclusion in the base use case (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/guidelines/include-relationship_5AE2718.html&quot;&#xD;
        guid=&quot;7.259881398615376E-305&quot;>Guideline: Include-Relationship&lt;/a>) if it is something that you wish to encapsulate&#xD;
        so that it can be reused by other use cases.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        As an implicit inclusion in the base use case (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/guidelines/extend-relationship_EF38D814.html&quot;&#xD;
        guid=&quot;3.679940320411645E-305&quot;>Guideline: Extend-Relationship&lt;/a>), if the basic flow of events of the base use case&#xD;
        is complete, that is, has a defined beginning and end. The nature of the extending flow should be such that you&#xD;
        prefer to conceal it in the description of the base use case to render it less complex.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A subflow in the basic flow of events, possibly as another option, if none of the above alternatives applies. For&#xD;
        example, in a Maintain Employee Information use case, there may be separate subflows for adding, deleting and&#xD;
        modifying employee information.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Flow of Events - Style&quot; name=&quot;Flow of Events - Style&quot;>Flow of Events - Style&lt;/a> &lt;a href=&quot;#Top&quot;>&lt;img height=&quot;20&quot;&#xD;
    alt=&quot;To top of page&quot; src=&quot;./../../../core.base_rup/resources/top.gif&quot; width=&quot;26&quot; border=&quot;0&quot; />&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    You can describe use cases in many styles. As an example we show the basic flow of events of the use case Administer&#xD;
    Order described in three different styles, varying primarily in how formal they are. The first style, shown in &lt;a&#xD;
    href=&quot;#Example%201:&quot;>example 1&lt;/a> below, is recommended, because it is easy to understand, and the order in which&#xD;
    things happen is clearly evident. The text is divided into numbered and named subsections. Numbers are there to make it&#xD;
    easy to refer to a subsection. Names of subsections will let the reader get a quick overview of the flow of events by&#xD;
    browsing through the text reading only the headers.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In &lt;a href=&quot;#Example%202:&quot;>example 2&lt;/a> below, the description of the flow of events fails to clarify the order in&#xD;
    which things happen. If you write in this style, you and others might miss important things that concern the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;a href=&quot;#Example%203:&quot;>Example 3&lt;/a> below shows a yet another style, which can be useful if you find it difficult to&#xD;
    express the sequence of events clearly. This pseudo-code style is more precise, but the text is hard to read and absorb&#xD;
    for a non-technical person, especially if you want to grasp the flow of events quickly.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    &lt;a id=&quot;Example 1:&quot; name=&quot;Example 1:&quot;>Example 1:&lt;/a>&#xD;
&lt;/h5>&#xD;
&lt;div align=&quot;center&quot;>&#xD;
    &lt;table&#xD;
    style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
     cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;85%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;100%&quot;>&#xD;
                    &lt;b>1.1. Start of Use Case&lt;/b> &#xD;
                    &lt;p>&#xD;
                        This use case starts when the actor Operator tells the system to create a measurement order. The&#xD;
                        system will then retrieve all Network Element actors, their measurement objects and corresponding&#xD;
                        measurement functions that are available to this particular Operator. Available Network Elements&#xD;
                        are those that are in operation, and that the Operator has the authority to access. The&#xD;
                        availability of measurement functions depends on what has been set up for a particular type of&#xD;
                        measurement object.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        &lt;b>1.2. Configure Measurement Order&lt;/b>&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The system allows the actor Operator to select which Network Elements to measure and then shows&#xD;
                        which measurement objects are available for the selected Network Elements. The system allows the&#xD;
                        Operator to select from the measurement objects, and then select which measurement functions to set&#xD;
                        up for each measurement object.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The system allows the Operator to enter a textual comment on the measurement order.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The Operator tells the system to complete the measurement order. The system will respond by&#xD;
                        generating a unique name for the measurement order and setting up default values for when, how&#xD;
                        often, and for how long the measurement should be made. The default values are unique to each&#xD;
                        Operator. The system then allows the Operator to edit these default values.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        &lt;b>1.3. Initialize Order&lt;/b>&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The Operator tells the system to initialize the measurement order. The system will then record the&#xD;
                        identity of the creating Operator, the date of creation, and the &quot;Scheduled&quot; status of the&#xD;
                        measurement order.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        &lt;b>1.4. Use Case Ends&lt;/b>&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The system confirms initialization of the measurement order to the Operator, and the measurement&#xD;
                        order is made available for other actors to view.&#xD;
                    &lt;/p>&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p class=&quot;picturetext&quot; align=&quot;center&quot;>&#xD;
    Describing a use case: In this style, the text is easy to read and the flow of events is easy to follow. Aim for this&#xD;
    style in your descriptions.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    &lt;a id=&quot;Example 2:&quot; name=&quot;Example 2:&quot;>Example 2:&lt;/a>&#xD;
&lt;/h5>&#xD;
&lt;div align=&quot;center&quot;>&#xD;
    &lt;table&#xD;
    style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
     cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;85%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;100%&quot;>&#xD;
                    Orderers can create Orders to collect measurement data from the Network Elements. &#xD;
                    &lt;p>&#xD;
                        The system will assign the Order a unique name as well as default values that indicate the length&#xD;
                        and time of the measurement and also how often it is to be repeated. The Orderer will be able to&#xD;
                        edit these values.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The Orderer must further specify which measurement function, network element and measurements&#xD;
                        objects are applicable. The Orderer can also add a personal comment to the order.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        When the necessary information had been defined, a new Order is created and initialized with the&#xD;
                        defined attributes, the name of the creator, and the date of creation. The status of the order will&#xD;
                        be set to &quot;scheduled&quot;. (Possible values for the status are: Scheduled, Executing, Completed,&#xD;
                        Canceled, and Erroneous.)&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        The user interface is then notified that a new Order has been created and receives a reference to&#xD;
                        the new Order so that it can be displayed.&#xD;
                    &lt;/p>&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    Describing a use case: This style is readable, but there is no clear flow of events.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    &lt;a id=&quot;Example 3:&quot; name=&quot;Example 3:&quot;>Example 3:&lt;/a>&#xD;
&lt;/h5>&#xD;
&lt;div align=&quot;center&quot;>&#xD;
    &lt;table&#xD;
    style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
     cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;65%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;100%&quot;>&#xD;
&lt;pre>&#xD;
&lt;small>&#xD;
'Administrate order' (User identity) &#xD;
REPEAT&#xD;
    &amp;lt;= 'Show administer order menu'&#xD;
    IF ( =&amp;gt; 'Creating an Order' (Measurement function,&#xD;
network element, measurement object)) THEN&#xD;
    The system finds a unique name, default values for when and&#xD;
how long the measurement should be executed. &#xD;
&amp;lt;= 'Show order' (Default attributes)&#xD;
REPEAT&#xD;
    =&amp;gt; 'Edit order' (Attribute to change, New value of attribute)&#xD;
    &amp;lt;= 'Update screen' (New attributes)&#xD;
UNTIL (All attributes are defined)&#xD;
REPEAT&#xD;
    IF ( =&amp;gt; 'Edit order' (Attribute to change, New value of  attribute))&#xD;
THEN &amp;lt;= 'Update screen' (New attributes)&#xD;
ELSIF ( =&amp;gt; 'Save order' (Order identity, Attributes)) THEN&#xD;
    The order is created and initialized in the system with&#xD;
    the defined attributes, the name of the creator,&#xD;
    date of creation and the status 'scheduled'.&#xD;
    &amp;lt;= 'New order created' (The order)&#xD;
ENDIF&#xD;
UNTIL (=&amp;gt; 'Quit') &#xD;
    ENDIF &#xD;
UNTIL 'Quit administer order'&lt;/small>&#xD;
&lt;/pre>&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    Describing a use case: Here the writer has chosen a formal style using pseudocode. This style makes it hard to quickly&#xD;
    grasp the process steps, but can be useful if the flow of events is difficult to capture precisely.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_flow_of_events__examples_of&quot; name=&quot;XE_flow_of_events__examples_of&quot;>&lt;/a>&lt;a id=&quot;Flow of Events - Example&quot;&#xD;
    name=&quot;Flow of Events - Example&quot;>Flow of Events - Example&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The complete description of the flow of events of the use case Administer Order, including its alternative flows, could&#xD;
    look as follows:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>1. Basic Flow of Events&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>1.1. Start of Use Case&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This use case starts when the actor Operator tells the system to create a measurement order. The system will then&#xD;
    retrieve all Network Element actors, their measurement objects and corresponding measurement functions that are&#xD;
    available to this particular Operator. Available Network Elements are those that are in operation, and that the&#xD;
    Operator has the authority to access. The availability of measurement functions depends on what has been set up for a&#xD;
    particular type of measurement object.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>1.2. Configure Measurement Order&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The system allows the actor Operator to select which Network Elements to measure and then shows which measurement&#xD;
    objects are available for the selected Network Elements. The system allows the Operator to select from these&#xD;
    measurement objects, and then select which measurement functions to set up for each measurement object.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The system allows the Operator to enter a textual comment on the measurement order.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Operator tells the system to complete the measurement order. The system will respond by generating a unique name&#xD;
    for the measurement order and setting up default values for when, how often, and for how long the measurement should be&#xD;
    made. The default values are unique to each Operator. The system then allows the Operator to edit these default values.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>1.3. Initialize Order&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Operator tells the system to initialize the measurement order. The system will then record the identity of the&#xD;
    creating Operator, the date of creation, and the &quot;Scheduled&quot; status of the measurement order.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>1.4. Use Case Ends&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The system confirms initialization of the measurement order to the Operator, and the measurement order is made&#xD;
    available for other actors to view.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>2. Alternative Flows of Events&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>2.1. No Network Elements Available&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If in 1.1, Start of Use Case, it turns out that no Network Elements are available to measure for this Operator, the&#xD;
    system will inform the Operator. The use case then ends.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>2.2. No Measurement Functions Available&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If in 1.2, Configure Measurement Order, no measurement functions are available for the selected Network Elements, the&#xD;
    system will inform the Operator and allow the Operator to select other Network elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>2.3. Cancel Measurement Order&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The system will allow the Operator to cancel all actions at any point during the execution of the use case. The system&#xD;
    will then return to the state it was in before the use case was started, and end the use case.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Special Requirements&quot; name=&quot;Special Requirements&quot;>Special Requirements&lt;/a> &lt;a href=&quot;#Top&quot;>&lt;img height=&quot;20&quot;&#xD;
    alt=&quot;To top of page&quot; src=&quot;./../../../core.base_rup/resources/top.gif&quot; width=&quot;26&quot; border=&quot;0&quot; />&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In the Special Requirements of a use case, you describe all the requirements on the use case that are not covered by&#xD;
    the flow of events. These are non-functional requirements that will influence the design model. See also the discussion&#xD;
    on non-functional requirements in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/use-case_model_CC121CF4.html&quot; guid=&quot;1.7617672560167394E-305&quot;>Guideline:&#xD;
    Use-Case Model&lt;/a>. You could organize these requirements in categories such as Usability, Reliability, Performance,&#xD;
    and Substitutability, but normally there are so few of them that such grouping is not particularly value-adding.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In the Recycling-Machine System, a special requirement of the Return Deposit Items use case could be:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    The machine has to be able to recognize deposit items with a reliability of more than 95 percent.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_postcondition__guidelines_for&quot; name=&quot;XE_postcondition__guidelines_for&quot;>&lt;/a>&lt;a&#xD;
    id=&quot;XE_precondition__guidelines_for&quot; name=&quot;XE_precondition__guidelines_for&quot;>&lt;/a>&lt;a&#xD;
    id=&quot;preconditions and Postconditions&quot; name=&quot;preconditions and Postconditions&quot;>Preconditions and Postconditions&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It can be useful to use the notion of &lt;b>precondition&lt;/b> and &lt;b>postcondition&lt;/b> to clarify how the flow of events&#xD;
    starts and ends. However, only use it if it is perceived as adding value by the audience of the use case.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;278&quot; alt=&quot;Diagram described in caption.&quot; src=&quot;resources/ucprepst.gif&quot; width=&quot;344&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    A precondition is the state of the system and its surroundings that is required before the use case can be started. A&#xD;
    postcondition is the states the system can be in after the use case has ended.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Consider the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The states described by pre- or postconditions should be states that the user can observe. &quot;The user has logged on&#xD;
        to the system&quot; or &quot;The user has opened the document&quot; are examples of observable states.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A precondition is a constraint on when a use case can start. It is not the event that starts the use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A precondition for a use case is not a precondition for only one subflow, although you can define preconditions and&#xD;
        postconditions at the subflow level.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A postcondition for a use case should be true regardless of which alternative flows were executed; it should not be&#xD;
        true only for the main flow. If something could fail, you would cover that in the postcondition by saying &quot;The&#xD;
        action is completed, or if something failed, the action is not performed&quot;, rather than just &quot;The action is&#xD;
        completed&quot;.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When you use postconditions together with extend-relationships, you should take care that the extending use case&#xD;
        does not introduce a subflow that violates the postcondition in the base use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Postconditions can be a powerful tool for describing use cases. You first define what the use case is supposed to&#xD;
        achieve - the postcondition. You can then describe how to reach this condition - the flow of events needed.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    A precondition for the use case Cash Withdrawal in the ATM machine: The customer has a personally-issued card that fits&#xD;
    in the card reader, has been issued a PIN number, and is registered with the banking system.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    A postcondition for the use case Cash Withdrawal in the ATM machine: At the end of the use case, all account and&#xD;
    transaction logs are balanced, communication with the banking system is reinitialized and the customer has been&#xD;
    returned his card.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Extension Points&quot; name=&quot;Extension Points&quot;>Extension Points&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    An &lt;b>extension point&lt;/b> opens up the use case to the possibility of an extension. It has a name, and a list of&#xD;
    references to one or more locations within the flow of events of the use case. An extension point may reference a&#xD;
    single location between two behavior steps within the use case. It may also reference a set of discrete locations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To use named extension points will help you separate the specification of the behavior of the extending use case from&#xD;
    the internal details of the base use case. The base use case can be modified or rearranged, as long as the names of the&#xD;
    extension points remain the same it will not affect the extending use case. At the same time, you are not loading down&#xD;
    the text describing the flow of events of the base use case with details of where behavior might be extended into it.&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/extend-relationship_EF38D814.html&quot;&#xD;
    guid=&quot;3.679940320411645E-305&quot;>Guideline: Extend-Relationship&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;exampleheading&quot;>&#xD;
    Example:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In a phone system, the use case Place Call can be extended by the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    id=&quot;XE_use_case__abstract_use_case&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/use-case_model_CC121CF4.html#Concrete%20and%20Abstract%20Use%20Cases&quot;&#xD;
    name=&quot;XE_use_case__abstract_use_case&quot; guid=&quot;1.7617672560167394E-305&quot;>abstract&lt;/a> use case Show Caller Identity. This&#xD;
    is an optional service, often referred to as &quot;Caller ID&quot;, that may or may not have been requested by the receiving&#xD;
    party. A description of the extension point in the use case Place Call could look as follows:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Name&lt;/b>: Show Identity&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Location&lt;/b>: After section 1.9 Ring Receiving Party's Telephone.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Use-Case Diagrams&quot; name=&quot;Use-Case Diagrams&quot;>Use-Case Diagrams&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    You may choose to illustrate how a use case relates to actors and other use cases in a use-case diagram (in unusual&#xD;
    cases, more than one diagram), owned by the use case. This is useful if the use case is involved with many actors, or&#xD;
    has relationships to many other use cases. A diagram of this kind is of &quot;local&quot; character, since it shows the use-case&#xD;
    model from the perspective of one use case only and is not intended to explain any general facts about the whole&#xD;
    use-case model. See also &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/use-case_diagram_B894D435.html&quot; guid=&quot;4.246859429016601E-305&quot;>Guideline:&#xD;
    Use-Case Diagram&lt;/a>.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
