<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2JwHsNnmEdmO6L4XMImrsA" name="implementation_element,1.0315418523886092E-305" guid="_2JwHsNnmEdmO6L4XMImrsA" changeDate="2005-06-22T19:02:06.663-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Kinds of Implementation Elements&quot; name=&quot;Kinds of Implementation Elements&quot;>&lt;/a>Kinds of Implementation Elements&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Implementation Elements can generally be categorized as files and directories. Files can be further categorized as&#xD;
    follows:&#xD;
&lt;/p>&#xD;
&lt;div align=&quot;center&quot;>&#xD;
    &lt;table&#xD;
    style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
     cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;85%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;th scope=&quot;row&quot; width=&quot;20%&quot;>&#xD;
                    Source code files&#xD;
                &lt;/th>&#xD;
                &lt;td width=&quot;80%&quot;>&#xD;
                    &lt;p>&#xD;
                        These are files that may be directly modified by a developer. This includes:&#xD;
                    &lt;/p>&#xD;
                    &lt;ul>&#xD;
                        &lt;li>&#xD;
                            compilable source code (such as : .h, .cpp and .hpp files for C++, CORBA IDL, or .java for&#xD;
                            Java)&#xD;
                        &lt;/li>&#xD;
                        &lt;li>&#xD;
                            interpreted source (HTML, various scripting languages), and user-modifiable data files (such as&#xD;
                            database tables, configuration files, graphics files, and so on).&#xD;
                        &lt;/li>&#xD;
                    &lt;/ul>&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
            &lt;tr>&#xD;
                &lt;th scope=&quot;row&quot; width=&quot;20%&quot;>&#xD;
                    Derived files&#xD;
                &lt;/th>&#xD;
                &lt;td width=&quot;80%&quot;>&#xD;
                    &lt;p>&#xD;
                        These are files that are &lt;b>not&lt;/b> intended to be directly modified by a developer. They are&#xD;
                        derived from source files.&#xD;
                    &lt;/p>&#xD;
                    &lt;p>&#xD;
                        Some derived files are intended to be used in the operational system (such as DLLs, JARs, and&#xD;
                        EXEs). Others are the intermediate results of compilation (for example, .o files from compiling C++&#xD;
                        and .class files from compiling java code).&#xD;
                    &lt;/p>&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Modeling Physical Implementation Elements&quot; name=&quot;Modeling Physical Implementation Elements&quot;>&lt;/a>Modeling&#xD;
    Implementation Elements&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In version 1.3 of the Unified Modeling Language (UML) specification, files are modeled as UML components. In UML 1.4,&#xD;
    the representation changed to be UML artifact. Many tools and UML profiles continue to use components for modeling&#xD;
    files.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In any case, modeling of files and directories should be be done sparingly, unless there is some automated support.&#xD;
    Files can be viewed in the project directory structure, and the relationship between files and design elements is often&#xD;
    sufficiently clear from the directory structure and naming conventions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/implementation_model_5A4A2E5F.html&quot;&#xD;
    guid=&quot;2.012199185622896E-305&quot;>Guideline: Implementation Model&lt;/a> for details.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
