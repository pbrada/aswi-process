<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1y8xRNnmEdmO6L4XMImrsA" name="use-case_realization,1.6790343052744206E-305" guid="_1y8xRNnmEdmO6L4XMImrsA" changeDate="2005-06-21T10:12:52.324-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_use-case_realization__guidelines_for&quot;&#xD;
name=&quot;XE_use-case_realization__guidelines_for&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>Introduction&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A use-case realization represents how a use case will be implemented in terms of collaborating objects. This artifact&#xD;
    can take various forms. It may include, for example, a textual description (a document), class diagrams of&#xD;
    participating classes and subsystems, and interaction diagrams (communication and sequence diagrams) that illustrate&#xD;
    the flow of interactions between class and subsystem instances.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a model, a use-case realization is represented as a UML collaboration that groups the diagrams and other information&#xD;
    (such as textual descriptions) that form part of the use-case realization.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The reason for separating the use-case realization from its use case is that doing so allows the use cases to be&#xD;
    managed separately from their realizations. This is particularly important for larger projects, or families of systems&#xD;
    where the same use cases may be designed differently in different products within the product family. Consider the case&#xD;
    of a family of telephone switches which have many use cases in common, but which design and implement them differently&#xD;
    according to product positioning, performance and price.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For larger projects, separating the use case and its realization allows changes to the design of the use case without&#xD;
    affecting the baselined use case itself.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each use case in the use-case model, there is a use-case realization in the analysis/design model with a&#xD;
    realization relationship to the use case. In the UML this is shown as a dashed arrow, with an arrowhead like a&#xD;
    generalization relationship, indicating that a realization is a kind of inheritance, as well as a dependency (i.e. it&#xD;
    could have been shown as a dependency stereotyped with &amp;lt;&amp;lt;realize&amp;gt;&amp;gt;).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturecenter&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;109&quot; alt=&quot;Diagram described in caption.&quot; src=&quot;resources/ucrea1.gif&quot; width=&quot;291&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    A use-case realization in the analysis/design model can be traced to a use case in the use-case model.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Class Diagrams&quot; name=&quot;Class Diagrams&quot;>Class Diagrams Owned by a Use-Case Realization&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    For each use-case realization there may be one or more class diagrams depicting its participating classes. The figure&#xD;
    below shows a class diagram for the realization of the &lt;b>Receive Deposit Item&lt;/b> use case. A class and its objects&#xD;
    often participate in several use-case realizations. It is important during design to coordinate all the requirements on&#xD;
    a class and its objects that different use-case realizations may have.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturecenter&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;213&quot; alt=&quot;a communication diagram depicting a use-case realization&quot; src=&quot;resources/md_ucre3.gif&quot;&#xD;
    width=&quot;328&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    The use case Receive Deposit Item and its class diagram.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Communication and &lt;a id=&quot;Sequence Diagrams&quot; name=&quot;Sequence Diagrams&quot;>Sequence Diagrams Owned by a Use-Case&#xD;
    Realization&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    For each use-case realization there is one or more interaction diagrams depicting its participating objects and their&#xD;
    interactions. There are two types of interaction diagrams: Sequence diagrams and communication diagrams. They express&#xD;
    similar information, but show it in different ways. Sequence diagrams show the explicit sequence of messages and are&#xD;
    better when it is important to visualize the time ordering of messages, whereas communication diagrams show the&#xD;
    communication links between objects and are better for understanding all of the effects on a given object and for&#xD;
    algorithm design. See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/sequence_diagram_AFA76EBB.html&quot; guid=&quot;3.211008403369512E-306&quot;>Guideline:&#xD;
    Sequence Diagram&lt;/a> and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/communication_diagram_FFFEA1B5.html&quot;&#xD;
    guid=&quot;4.5194432001390347E-305&quot;>Guideline: Communication Diagram&lt;/a> below for more information.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
