<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2QUCsNnmEdmO6L4XMImrsA" name="implementation_model,2.012199185622896E-305" guid="_2QUCsNnmEdmO6L4XMImrsA" changeDate="2005-11-15T20:16:32.258-0800" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_implementation_model__explanation_of&quot; name=&quot;XE_implementation_model__explanation_of&quot;>&lt;/a>&lt;a id=&quot;Explanation&quot;&#xD;
    name=&quot;Explanation&quot;>&lt;/a>Explanation&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In the programming environment, an implementation is composed of Implementation Elements, including source code files,&#xD;
    binary files, and data files, organized in directories. In addition to these low level elements, there is often the&#xD;
    need to create higher level units of management, the Implementation Subsystems, that group Implementation Elements and&#xD;
    other Implementation Subsystems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Implementation Model principally models the Implementation Subsystems, including dependencies and other management&#xD;
    information. It may also model key elements of an Implementation Subsystem, such as deployable files, or directory&#xD;
    structures.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturecenter&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;195&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/md_impm2.gif&quot; width=&quot;163&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    The notation in the Implementation Model. The arrows show possible ownership.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There is optionally a package that serves as the top-level (root) node in the Implementation Model. Packages,&#xD;
    stereotyped as &amp;lt;&amp;lt;implementation subsystem&amp;gt;&amp;gt; group the Implementation Elements (files and directories) and&#xD;
    other Implementation Subsystems.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In a banking system the implementation subsystems are organized as a flat structure in the top-level node of the&#xD;
    implementation model. Another way of viewing the subsystems in the implementation model is in layers. (See &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/import_dependency_in_implementation_20C8C9DC.html&quot;&#xD;
    guid=&quot;2.390918925290993E-305&quot;>Work Product Guideline: Import Dependency&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturecenter&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;155&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;resources/md_impm3.gif&quot; width=&quot;477&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    The implementation model for a banking system, showing the ownership hierarchy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Implementation Model not only defines the basic structure of the implementation in terms of hierarchy of&#xD;
    Implementation Subsystems, but may also show import dependencies between Implementation Subsystems, compilation&#xD;
    dependencies between Implementation Elements, and diagrams that show dependencies between Implementation Model elements&#xD;
    and Design Model elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information see:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/guidelines/import_dependency_in_implementation_20C8C9DC.html&quot;&#xD;
        guid=&quot;2.390918925290993E-305&quot;>Guideline: Import Dependency in Implementation&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../core.base_rup/guidances/guidelines/compilation_dependency_in_implementation_BED92496.html&quot;&#xD;
        guid=&quot;6.725844217842153E-306&quot;>Guideline: Compilation Dependency in Implementation&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/manifest_dependency_5790834E.html&quot;&#xD;
        guid=&quot;7.405934676741527E-306&quot;>Guideline: Manifest Dependency&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Use&quot; name=&quot;Use&quot;>&lt;/a>Use&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Implementation Model focuses on the concern of the physical organization of the software in terms of Implementation&#xD;
    Subsystems and Implementation Elements. You may optionally create a single model that addresses both the physical&#xD;
    implementation and the logical design in a single model. This is common in a round-trip engineering approach that&#xD;
    synchronizes source code files with a combined Implementation/Design Model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The organization of Implementation Subsystems can be more or less close to the Design Model, depending on how you&#xD;
    decide to map between these two models. This is an process decision that should be captured in the design guidelines&#xD;
    specific to the project. When the mapping is exact, that is, each Implementation Subsystem is also a Design Subsystem,&#xD;
    then you can create diagrams that focus on a single Design Subsystem, summarizing both its design and its&#xD;
    implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, about how to structure the Implementation Model, and map between Design and Implementation&#xD;
    Models, refer to the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/concepts/mapping_from_design_to_code_D1454680.html&quot;&#xD;
    guid=&quot;1.424219730601675E-305&quot;>Technique: Mapping Design to Code&lt;/a>, &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/tasks/structure_implementation_model_E0E0DEF9.html&quot;&#xD;
    guid=&quot;{35272424-8A0A-4DDD-BA74-C91B80A8D046}&quot;>Task: Structure the Implementation Model&lt;/a>, and &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/implementation_element_ECCAA21E.html&quot;&#xD;
    guid=&quot;1.0315418523886092E-305&quot;>Guideline: Implementation Element&lt;/a>.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
