<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_1ssYQtnmEdmO6L4XMImrsA" name="conceptual_data_modeling,7.217811033438091E-305" guid="_1ssYQtnmEdmO6L4XMImrsA" changeDate="2005-06-24T14:06:41.779-0700" version="7.1.0">
  <copyrightStatement href="uma://{1F4FEA6F-AF12-40BF-94BE-D316CE25314B}#_egIacP1mEdm9-ZPZADkvIg"/>
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Concepts: Conceptual Data Modeling&quot; name=&quot;Concepts: Conceptual Data Modeling&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>&lt;/a>Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    As defined in &amp;nbsp;[&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/customcategories/references_56F06DFD.html#NBG01&quot; guid=&quot;7.755968586980351E-308&quot;>&lt;font&#xD;
    color=&quot;#ff0000&quot;>NBG01&lt;/font>&lt;/a>], conceptual data modeling represents the initial stage in the development of the&#xD;
    design of the persistent data and persistent data storage for the system.&amp;nbsp;In many cases, the persistent data for&#xD;
    the system are managed by a relational database management system (RDBMS). The business and system entities identified&#xD;
    at a conceptual level from the business models and system requirements will be evolved through the use-case analysis,&#xD;
    use-case design, and database design tasks into detailed physical table designs that will be implemented in the&#xD;
    RDBMS.&amp;nbsp; Note that the Conceptual Data Model discussed in this concept document is not a separate work product.&#xD;
    Instead it consists of a composite view of information contained in existing Business Modeling, Requirements, and&#xD;
    Analysis and Design Disciplines work products that is relevant to the development of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_data_model_65B46980.html&quot; guid=&quot;{9DCF1723-1A21-4F48-BEDE-DBC543489682}&quot;>Data&#xD;
    Model&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_data_model_65B46980.html&quot;&#xD;
    guid=&quot;{9DCF1723-1A21-4F48-BEDE-DBC543489682}&quot;>Data Model&lt;/a> typically evolves through the following three general&#xD;
    stages:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Conceptual&lt;/b>-This stage involves the identification of the high level key business and system entities and&#xD;
        their relationships that define the scope of the problem to be addressed by the system. These key business and&#xD;
        system entities are defined using the modeling elements of the UML profile for business modeling included in the&#xD;
        Business Analysis Model and the &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../core.base_rup/workproducts/rup_analysis_class_DAF7CE03.html&quot;&#xD;
        guid=&quot;{1E20603F-A5B8-42D5-BDBC-69DCE9C0FCDB}&quot;>Analysis Class&lt;/a> model elements of the Analysis Model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Logical&lt;/b>-This stage involves the refinement of the conceptual high level business and system entities into&#xD;
        more detailed logical entities. These logical entities and their relationships can be optionally defined in a&#xD;
        Logical Data Model using the modeling elements of the UML profile for database design as described in &lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/guidances/guidelines/data_model_80FB2539.html&quot;&#xD;
        guid=&quot;3.4196799396281445E-306&quot;>Guideline: Data Model&lt;/a>. This optional Logical Data Model is part of the &lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/workproducts/rup_data_model_65B46980.html&quot;&#xD;
        guid=&quot;{9DCF1723-1A21-4F48-BEDE-DBC543489682}&quot;>Artifact: Data Model&lt;/a> and not a separate RUP work product.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Physical&lt;/b>-This stage involves the transformation of the logical class designs into detailed and optimized&#xD;
        physical database table designs.&amp;nbsp;The physical stage also includes the mapping of the database table designs to&#xD;
        tablespaces and to the database component in the database storage design.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The tasks related to database design span the entire software development lifecycle, and the initial database design&#xD;
    tasks might start during the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/customcategories/inception_D506BCB4.html&quot; guid=&quot;_vyZOwCVuEdqSZ9OimJ-AzA&quot;>inception&#xD;
    phase&lt;/a>.&amp;nbsp; For projects that use business modeling to describe the business context of the application, database&#xD;
    design may start at a conceptual level with the identification of Business Actors and Business Use Cases in the&#xD;
    Business Use-Case Model, and the Business Workers and Business Entities in the Business Analysis Model.&amp;nbsp; For&#xD;
    projects that do not use business modeling, the database design might start at the conceptual level with the&#xD;
    identification of System Actors and System Use Cases in the Use-Case Model, and the identification of &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.base_rup/workproducts/rup_analysis_class_DAF7CE03.html&quot;&#xD;
    guid=&quot;{1E20603F-A5B8-42D5-BDBC-69DCE9C0FCDB}&quot;>Analysis Classes&lt;/a> in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_analysis_model_76C3B70C.html&quot;&#xD;
    guid=&quot;{98EA224C-36F6-46E6-AB36-2999382B58B3}&quot;>Analysis Model&lt;/a> from the Use-Case Realizations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The figure below shows the set of Conceptual Data Model elements that reside in the Business Models, Requirements&#xD;
    Models, and the Analysis Model.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;433&quot; alt=&quot;Diagram is described in the content.&quot; src=&quot;resources/co_concdatmd1.gif&quot; width=&quot;704&quot;&#xD;
    border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following sections describe the elements of the Business Models, Use-Case Model, and Analysis Model that can be&#xD;
    used to define the initial Conceptual Data Model for persistent data in the system.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Conceptual Data Model Elements&quot; name=&quot;Conceptual Data Model Elements&quot;>&lt;/a>Conceptual Data Modeling Elements&#xD;
&lt;/h3>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Business Models&quot; name=&quot;Business Models&quot;>&lt;/a>Business Models&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    &lt;b>&lt;u>Business Use-Case Model&lt;/u>&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Business Use-Case Model consists of Business Actors and Business Use Cases.&amp;nbsp;The Business Use Cases represent&#xD;
    key business processes that are used to define the context for the system to be developed.&amp;nbsp;Business Actors&#xD;
    represent key external entities that interact with the business through the Business Use Cases.&amp;nbsp;The figure below&#xD;
    shows a very simple example Business Use-Case Model for an online auction application.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;109&quot; alt=&quot;Diagram is described in the content.&quot; src=&quot;resources/co_concdatmd2.gif&quot; width=&quot;529&quot;&#xD;
    border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As entities of significance to the problem of space for the system, Business Actors are candidate entities for the&#xD;
    Conceptual Data Model.&amp;nbsp; In the example above, the Buyer and Seller Business Actors are candidate entities for&#xD;
    which the online auction application must store information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>&lt;u>Business Analysis Model&lt;/u>&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Business Analysis Model contains classes that model the Business Workers and Business Entities identified from&#xD;
    analysis of the workflow in the Business Use Case. Business Workers represent the participating workers that perform&#xD;
    the actions needed to carry out that workflow.&amp;nbsp; Business Entities are &quot;things&quot; that the Business Workers use or&#xD;
    produce during that workflow.&amp;nbsp;In many cases, the Business Entities represent types of information that the system&#xD;
    must store persistently.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The figure below shows an example sequence diagram that depicts Business Workers and Business Entities from one&#xD;
    scenario of the Business Use Case titled &quot;Provide Online Auction&quot; for managing an auction.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;465&quot; alt=&quot;Diagram is described in the content.&quot; src=&quot;resources/co_concdatmd3.gif&quot; width=&quot;624&quot;&#xD;
    border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In this simplified example, the Auction Manager object represents a Business Worker role that will likely be performed&#xD;
    by the online auction management system itself.&amp;nbsp; The Auction and Auction Item objects are Business Entities that&#xD;
    are used or produced by the Auction Manager worker acting as an agent for the Seller and Buyer Business Actors.&amp;nbsp;&#xD;
    From a database design perspective, the Auction and Auction Item Business Entities are candidate entities for the&#xD;
    Conceptual Data Model.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Requirements and Analysis Models&quot; name=&quot;Requirements and Analysis Models&quot;>&lt;/a>Requirements and Analysis Models&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    For projects that do not perform business modeling, the Requirements (System Use Case) and Analysis Models contain&#xD;
    model elements that can be used to develop an initial Conceptual Data Model.&amp;nbsp; For projects that use business&#xD;
    modeling, the business entities and relationships identified in the Business Analysis Models are refined and detailed&#xD;
    in the Analysis Model as Entity Classes.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;u>&lt;b>System Use-Case Model&lt;/b>&lt;/u>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The System Use-Case Model contains System Actors and System Use Cases that define the primary interactions of the users&#xD;
    with the system. The System Use Cases define the functional requirements for the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    From a conceptual data modeling perspective, the System Actors represent entities external to the system for which the&#xD;
    system might need to store persistent information. This is important in cases where the System Actor is an external&#xD;
    system that provides data to and/or receives data from the system under development.&amp;nbsp; System Actors can be derived&#xD;
    from the Business Actors in the Business Use-Case Model and the Business Workers in the Business Analysis Model.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The figure below depicts the Business Use-Case Model for the online auction system.&amp;nbsp;In this model, the Buyer and&#xD;
    Seller Business Actors are now derived from a generic User Business Actor. A new System Actor named Credit Service&#xD;
    Bureau has been added to reflect the need to process payments through an external entity.&amp;nbsp;This new System Actor is&#xD;
    another candidate entity for the Conceptual Data Model.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;552&quot; alt=&quot;Diagram is described in the content.&quot; src=&quot;resources/co_concdatmd4.gif&quot; width=&quot;732&quot;&#xD;
    border=&quot;0&quot; />&#xD;
&lt;/p>&lt;br align=&quot;center&quot; />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &lt;u>&lt;b>Analysis Model&lt;/b>&lt;/u>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.base_rup/workproducts/rup_analysis_model_76C3B70C.html&quot;&#xD;
    guid=&quot;{98EA224C-36F6-46E6-AB36-2999382B58B3}&quot;>Analysis Model&lt;/a> contains the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/workproducts/rup_analysis_class_DAF7CE03.html&quot;&#xD;
    guid=&quot;{1E20603F-A5B8-42D5-BDBC-69DCE9C0FCDB}&quot;>Analysis Classes&lt;/a> identified in the Use-Case Realizations for the&#xD;
    System Use Cases. The types of Analysis Classes that are of primary interest from a conceptual data modeling&#xD;
    perspective are the Entity Analysis Classes. As defined in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/analysis_class_7E97273E.html&quot; guid=&quot;2.2738948033145062E-306&quot;>Guideline:&#xD;
    Analysis Class&lt;/a>, Entity Analysis Classes represent information managed by the system that must be stored in a&#xD;
    persistent manner.&amp;nbsp;The Entity Analysis Classes and their relationships form the basis of the initial Data Model&#xD;
    for the application.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The conceptual Entity Analysis Classes in the Analysis Model might be refined and detailed into logical Persistent&#xD;
    Design Classes in the Design Model.&amp;nbsp;These design classes represent candidate tables in the Data Model.&amp;nbsp;The&#xD;
    attributes of the classes are candidate columns for the tables and also represent candidate keys for them. &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.base_rup/guidances/guidelines/forward-engineering_relational_databases_53C0441E.html&quot;&#xD;
    guid=&quot;5.250868507423771E-305&quot;>Guideline: Forward-Engineering Relational Databases&lt;/a> for a description of how elements&#xD;
    in the Design Model can be mapped to Data Model elements.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
