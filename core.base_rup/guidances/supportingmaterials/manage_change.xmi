<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_zaEOVNnmEdmO6L4XMImrsA" name="manage_change,9.443126080601602E-306" guid="_zaEOVNnmEdmO6L4XMImrsA" changeDate="2005-10-12T20:20:42.498-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;201&quot; alt=&quot;Change Management image&quot; src=&quot;resources/ccm.gif&quot; width=&quot;353&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    Managing change is more than just checking-in and checking-out files. It includes management of workspaces, parallel&#xD;
    development, integration, and builds.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A key challenge when you're developing software-intensive systems is that you must cope with multiple developers,&#xD;
    organized into different teams, possibly at different sites, working together on multiple iterations, releases,&#xD;
    products, and platforms. In the absence of disciplined control, the development process rapidly degenerates into chaos.&#xD;
    In the Rational Unified Process, the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/capabilitypatterns/configuration_change_management_5C81A290.html&quot;&#xD;
    guid=&quot;{C85C9CC0-AD92-46C9-85BA-4C0672D6571E}&quot;>Configuration &amp;amp; Change Management&lt;/a> discipline describes how you&#xD;
    meet this challenge.&#xD;
&lt;/p>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Coordinating the Activities and Artifacts&quot; name=&quot;Coordinating the Activities and Artifacts&quot;>Coordinating the&#xD;
    Activities and Artifacts&lt;/a>&amp;nbsp;&#xD;
&lt;/h2>&#xD;
&lt;p>&#xD;
    Coordinating the activities and artifacts of developers and teams involves establishing repeatable procedures for&#xD;
    managing changes to software and other development artifacts. This coordination allows a better allocation of resources&#xD;
    based on the project's priorities and risks, and it actively manages the work on those changes across iterations.&#xD;
    Coupled with developing your software iteratively, this practice lets you continuously monitor changes so that you can&#xD;
    actively discover, and then react to problems.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.base_rup/capabilitypatterns/manage_change_requests_F7A11348.html&quot;&#xD;
    guid=&quot;{BFBA9E6A-CB4B-45A7-9A25-FF7CA1A1153D}&quot;>Activity: Manage Change Requests&lt;/a> for further information on this&#xD;
    topic.&#xD;
&lt;/p>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Coordinating Iterations and Releases&quot; name=&quot;Coordinating Iterations and Releases&quot;>Coordinating Iterations and&#xD;
    Releases&lt;/a>&amp;nbsp;&#xD;
&lt;/h2>&#xD;
&lt;p>&#xD;
    Coordinating iterations and releases involves establishing and releasing a tested baseline at the completion of each&#xD;
    iteration. Maintaining traceability among the elements of each release and among elements across multiple, parallel&#xD;
    releases is essential for assessing and actively managing the impact of change.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.base_rup/capabilitypatterns/manage_baselines_releases_A3FC4979.html&quot;&#xD;
    guid=&quot;{22B90B6F-6F9F-41CF-9A05-8F64BF39CD36}&quot;>Activity: Manage Baselines Releases&lt;/a> for more details.&#xD;
&lt;/p>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Controlling Changes to Software&quot; name=&quot;Controlling Changes to Software&quot;>Controlling Changes to&#xD;
    Software&lt;/a>&amp;nbsp;&#xD;
&lt;/h2>&#xD;
&lt;p>&#xD;
    Controlling changes to software offers a number of solutions to the root causes of software development problems:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The workflow of requirements change is defined and repeatable.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Change requests facilitate clear communications.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Isolated workspaces reduce interference among team members working in parallel.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Change rate statistics provide good metrics for objectively assessing project status.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Workspaces contain all artifacts, which facilitates consistency.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Change propagation is assessable and controlled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes can be maintained in a robust, customizable system.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
