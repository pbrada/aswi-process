<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_200d8NnmEdmO6L4XMImrsA" name="structure_the_test_implementation,{ED9DF0C0-744A-443A-AEBA-604382E05A5F}" guid="_200d8NnmEdmO6L4XMImrsA" changeDate="2005-11-04T08:09:54.638-0800" version="7.1.0">
  <sections xmi:id="_XKT-kNnnEdmO6L4XMImrsA" name=" Examine the Test Approach, Target Test Items and Assessment Needs " guid="_XKT-kNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ExamineApproachTargetsAndAssmnt&quot; name=&quot;ExamineApproachTargetsAndAssmnt&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To gain an understanding of how testing will be assessed, and the implications that has on how the specific&#xD;
                Test Suites need to be implemented to assess the Target Test Items.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Starting with a review of the Test Plan to determine the assessment needs, consider how the assessment of the extent of&#xD;
    testing and of software quality can be determined using the stated Test Approach. Consider any special needs that need&#xD;
    to be addressed related to specific Target Test Items.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-kdnnEdmO6L4XMImrsA" name=" Examine the testability mechanisms and supporting elements " guid="_XKT-kdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ExamineMechanismsAndElements&quot; name=&quot;ExamineMechanismsAndElements&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To understand the available testability elements and understand what mechanisms they support and benefits&#xD;
                the offer.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Review the mechanisms that are useful to enable testing in this environment, and identify the specific testability&#xD;
    elements that implement these mechanisms. This includes reviewing resources such as any function libraries that have&#xD;
    been developed by the test team and stubs or harnesses implemented by the development team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Testability is achieved through a combination of developing software that is testable and defining a test approach that&#xD;
    appropriately supports testing. As such, testability is an important aspect of the test teams asset development, just&#xD;
    as it is an important part of the software development effort. Achieving Testability (the ability to effectively test&#xD;
    the software product) will typically involve a combination of the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        testability enablers provided by test automation tools&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        specific techniques to create the component Test Scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        function libraries that separate and encapsulate complexity from the basic test procedural definition in the Test&#xD;
        Script, providing a central point of control and modification.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;AnalyzeDistribution&quot; name=&quot;AnalyzeDistribution&quot;>Analyze distribution requirements&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Does the current Test Suite have the requirement to be distributed? If so, make use of the testability elements that&#xD;
    support distribution. These elements will typically be features of specific automation support tools that will&#xD;
    distribute the Test Suite, execute it remotely and bring back the Test Log and other outputs for centralized results&#xD;
    determination.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;AnalyzeConcurrency&quot; name=&quot;AnalyzeConcurrency&quot;>Analyze concurrency requirements&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Does the current Test Suite have the requirement to be run concurrently with other Test Suites? If so, make use of the&#xD;
    testability elements that support concurrency. These elements will typically be a combination of specific supporting&#xD;
    tools an utility functions to enable multiple Test Suites to execute concurrently on different physical machines.&#xD;
    Concurrency requires careful Test Data design and management to ensure no unexpected or unplanned side effects occur&#xD;
    such as two concurrent tests updating the same data record.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-ktnnEdmO6L4XMImrsA" name=" Create the initial Test Suite structure " guid="_XKT-ktnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;CreateTestSuiteStructure&quot; name=&quot;CreateTestSuiteStructure&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To outline the Test Suite(s) to be implemented.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Enumerate one or more Test Suites that (when executed) will provide a complete and meaningful result of value to the&#xD;
    test team, enabling subsequent reporting to stakeholders. Try to find a balance between enough detail to provide&#xD;
    specific information to the project team but not so much detail that it's overwhelming and unmanageable.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Where Test Scripts already exist, you can probably assemble the Test Suite and it's constituent parts yourself, then&#xD;
    pass the Test Suite stabilization work on to a Test Suite implementer to complete.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For Test Suites that require new Test Scripts to be created, you should also give some indication of the Test&#xD;
    Scripts-or other Test Suites-you believe will be referenced by this Test Suite. If it's easy to enumerate them, do&#xD;
    that. If not, you might simply provide a brief description that outlines the expected content coverage of the main Test&#xD;
    Suite and leave it to the Test Suite implementer to make tactical decisions about exactly what Test Scripts are&#xD;
    included.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-k9nnEdmO6L4XMImrsA" name=" Adapt the Test Suite structure to reflect team organization and tool constraints " guid="_XKT-k9nnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;AdaptStructureToTeam&quot; name=&quot;AdaptStructureToTeam&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To refine the Test Suite structure to work with the team responsibility assignments.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    It may be necessary to further subdivide or restructure the Test Suites you've identified to accommodate the Work&#xD;
    Breakdown Structure (WBS) the team is working to. This will help to reduce the risk that access conflicts might arise&#xD;
    during Test Suite development. Sometimes test automation tools might place constraints on how individuals can work with&#xD;
    automation assets, so restructure the Test Suites to accommodate this as necessary&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-lNnnEdmO6L4XMImrsA" name=" Identify inter-Test Script communication mechanisms " guid="_XKT-lNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;IdentifyTestScriptComms&quot; name=&quot;IdentifyTestScriptComms&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To identify Test Data and System State that needs to be shared or passed between Test Scripts.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    In most cases, Test Suites can simply call Test Scripts in a specific order. This will be sufficient in many cases to&#xD;
    ensure the correct system state is passed through from one Test Script to the next.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    However, in certain classes of system, dynamic run-time data is generated by the system or derived as a result of the&#xD;
    transactions that take place within it. For example, in an order entry and dispatch system, each time an order is&#xD;
    entered a unique order number is system generated. To enable an automated Test Script to dispatch an order, a preceding&#xD;
    order entry Test Script needs to capture the unique number the system generates and pass it on to the order dispatch&#xD;
    Test Script.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cases like this, you will need to consider what inter-Test Script communication mechanism is appropriate to use.&#xD;
    Typical alternatives include passed parameters, writing and reading values in a disk file and using global run-time&#xD;
    variables. Each strategy has pro's and con's that make it more or less appropriate in each specific situation.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-ldnnEdmO6L4XMImrsA" name=" Define initial dependencies between Test Suite elements " guid="_XKT-ldnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;DefineTestSuiteDependencies&quot; name=&quot;DefineTestSuiteDependencies&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To identify and record the run-time dependencies between Test Suite elements.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    This is primarily associated with the sequencing of the Test Scripts and possibly Test Suites for run-time execution.&#xD;
    Tests that run without the correct dependencies being established run the risk of either failing or reporting anomalous&#xD;
    data.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-ltnnEdmO6L4XMImrsA" name=" Visually model the test implementation architecture " guid="_XKT-ltnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;VisualTestImpModel&quot; name=&quot;VisualTestImpModel&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To make use of a diagram to document and explain how the test implementation is realized.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    If you have access to a UML modeling or drawing tool, you may wish to create a diagram of the Test Implementation Model&#xD;
    that depicts the key elements of the automated test software. You might also diagram some key aspects of the Test&#xD;
    Automation Architecture in a similar way.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another approach is to draw these diagrams on a white-board that is easily visible to the test team.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKT-l9nnEdmO6L4XMImrsA" name=" Refine the Test Suite structure " guid="_XKT-l9nnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;RefineTestSuiteStructure&quot; name=&quot;RefineTestSuiteStructure&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To make necessary adjustments to maintain the integrity of the test implementation.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    As the project progresses, Test Suites are likely to change: new Test Scripts will be added and old Test Scripts&#xD;
    updated, reordered or deleted. These changes are a natural part of Test Suite maintenance and you need to embrace them&#xD;
    rather than avoid them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you don't actively maintain the Test Suites, they will quickly become broken and fall into disuse. Left for a few&#xD;
    builds, a Test Suite may take extensive effort to resurrect, and it may be easier to simply abandon it and create a new&#xD;
    one from scratch. See the &lt;b>&lt;a href=&quot;#Top&quot;>More Information:&lt;/a>&lt;/b> section in the header table of this page for more&#xD;
    guidelines on maintaining automated Test Suites.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKdvkNnnEdmO6L4XMImrsA" name=" Maintain traceability relationships " guid="_XKdvkNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Traceability&quot; name=&quot;Traceability&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To enable impact analysis and assessment reporting to be performed on the traced items.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Using the Traceability requirements outlined in the Test Plan, update the traceability relationships as required.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_XKdvkdnnEdmO6L4XMImrsA" name=" Evaluate and verify your results " guid="_XKdvkdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;EvaluateResults&quot; name=&quot;EvaluateResults&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&lt;/b>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To verify that the task has been completed appropriately and that the resulting work products are&#xD;
                acceptable.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Now that you have completed the work, it is beneficial to verify that the work was of sufficient value, and that you&#xD;
    did not simply consume vast quantities of paper. You should evaluate whether your work is of appropriate quality, and&#xD;
    that it is complete enough to be useful to those team members who will make subsequent use of it as input to their&#xD;
    work. Where possible, use the checklists provided in RUP to verify that quality and completeness are &quot;good enough&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have the people performing the downstream tasks that rely on your work as input take part in reviewing your interim&#xD;
    work. Do this while you still have time available to take action to address their concerns. You should also evaluate&#xD;
    your work against the key input work products to make sure you have represented them accurately and sufficiently. It&#xD;
    may be useful to have the author of the input work product review your work on this basis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Try to remember that that RUP is an iterative delivery process and that in many cases work products evolve over time.&#xD;
    As such, it is not usually necessary-and is often counterproductive-to fully-form a work product that will only be&#xD;
    partially used or will not be used at all in immediately subsequent work. This is because there is a high probability&#xD;
    that the situation surrounding the work product will change-and the assumptions made when the work product was created&#xD;
    proven incorrect-before the work product is used, resulting in wasted effort and costly rework. Also avoid the trap of&#xD;
    spending too many cycles on presentation to the detriment of content value. In project environments where presentation&#xD;
    has importance and economic value as a project deliverable, you might want to consider using an administrative resource&#xD;
    to perform presentation tasks.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
  <purpose>&lt;p>&#xD;
    The purpose of this task is to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Establish the structure in which the test suite implementation will reside&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assign responsibilities for test suite implementation areas and their contents&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Outline the required Test Suites&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
