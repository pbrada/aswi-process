<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2xPlgNnmEdmO6L4XMImrsA" name="implement_test_suite,{1C759E0D-B364-4095-A7CF-CD9E39301689}" guid="_2xPlgNnmEdmO6L4XMImrsA" changeDate="2005-11-04T08:09:03.104-0800" version="7.1.0">
  <sections xmi:id="_W6hPENnnEdmO6L4XMImrsA" name=" Examine Candidate Test Suites " guid="_W6hPENnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ExamineTestSuiteOutlines&quot; name=&quot;ExamineTestSuiteOutlines&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To understand the Test Suites and select which candidates will be implemented&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Start by reviewing any existing Test Suite outlines, and determine which Test Suites are good candidates for&#xD;
    implementation at the current time. Use the Iteration Test Plan, Test-Ideas List and any additional test definition&#xD;
    work products as a basis for making your decision.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPEdnnEdmO6L4XMImrsA" name=" Examine Related Tests and Target Test Items " guid="_W6hPEdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ExamineTests+Targets&quot; name=&quot;ExamineTests+Targets&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To understand the relationships between the planned Tests and the Target Test Items&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    For each Test Suite you have selected for implementation, identify what Target Test Items and associated Tests are&#xD;
    candidates for inclusion in the scope of the Test Suite.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPEtnnEdmO6L4XMImrsA" name=" Identify Test Dependencies " guid="_W6hPEtnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;IdentifyDependencies&quot; name=&quot;IdentifyDependencies&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To identify any dependencies the Tests have in terms of other Tests, and in general terms in relation to&#xD;
                system state&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Begin by considering the Test Environment Configuration and specific system start state. Consider what specific setup&#xD;
    requirements there will be, such as the starting data set for dependent databases. Where one Target Environment&#xD;
    Configuration will be used for various Test Suites, identify any configuration settings that may need to be managed for&#xD;
    each Test Suite, such as the screen resolution of video displays or the regional operating system settings.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Now determine any specific relationships between the Tests. Look for dependencies where the execution of one Test&#xD;
    included in the Test Suite will result in a system state change required as a precondition of another Test.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you've identified the relevant dependencies, determine the correct sequence of execution for the dependent Tests.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPE9nnEdmO6L4XMImrsA" name=" Identify Opportunities for Reuse " guid="_W6hPE9nnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;IdentifyReuse&quot; name=&quot;IdentifyReuse&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To improve Test Suite maintainability, both by reusing existing assets and consolidating new assets&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    One of the main challenges in maintaining a Test Suite-especially an automated one-is ensuring that ongoing changes are&#xD;
    easy to make. It's a good idea when possible and deemed useful to maintain a central point of modification for elements&#xD;
    that are used in multiple places. That's especially true if those same elements are likely to change.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While the Tests themselves form natural units of modularity, assembly of the Tests into a Test Suite often identifies&#xD;
    duplicate procedural elements across multiple Tests that could be more effectively maintained if the were consolidated.&#xD;
    Take the opportunity to identify any general mechanics of the Tests that might potentially be refactored into a&#xD;
    standard routine to assist ongoing maintenance.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPFNnnEdmO6L4XMImrsA" name=" Apply Necessary Infrastructure Utilities " guid="_W6hPFNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ApplyInfrastructure&quot; name=&quot;ApplyInfrastructure&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To factor out complex implementation detail that is required in support of the test as simplified utility&#xD;
                functions&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Most test efforts require the use of one or more &quot;utilities&quot; that generate, gather, diagnose, convert and compare&#xD;
    information used during test execution. These utilities typically simplify both complex and laborious tasks that would&#xD;
    be prone to error if performed manually. This step relates to applying existing utility functions within the Test&#xD;
    Suite, and identifying new utilities that are required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It's a good idea to simplify the interfaces to these utilities, encapsulating as much complexity as possible within the&#xD;
    private implementation of the utility. It's also a good idea to develop the utility in such a way that it can be reused&#xD;
    where required for both manual and automated test efforts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We recommend you don't hide the information that characterizes an individual test within these utilities: instead,&#xD;
    limit the utility to the complex mechanics of gathering information, or comparing actual values to expected results&#xD;
    etc. but where possible, pass the specific characteristics of each individual test in as input from-and return the&#xD;
    individual actual results an output to-a controlling Test or Test Suite.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPFdnnEdmO6L4XMImrsA" name=" Determine Recovery Requirements " guid="_W6hPFdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;DetermineRecovery&quot; name=&quot;DetermineRecovery&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To enable Test Suites to be recovered without requiring the complete re-execution of the Test Suite&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Determine the appropriate points within the Test Suite to provide recovery if the Test Suite fails during execution.&#xD;
    This step gains importance where the Test Suite will contain a large number of Tests, or will run for an extended&#xD;
    period of time-often unattended. While most often identified as a requirement for automated Test Suites, it is also&#xD;
    important to consider recovery points for manually executed Test Suites.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In addition to recovery or restart points you may also want-in the case of automated Test Suites-to consider automated&#xD;
    Test Suite recovery. Two approaches to auto-recovery are 1) basic recovery where the existing Test Suite can&#xD;
    self-recover from a minor error that occurs in one of it's Tests, typically recovering execution at the next Test in&#xD;
    the Test Suite or 2) sophisticated recovery that cleans up after the failed Test, resetting appropriate system state&#xD;
    including operating system reboot and data restoration if necessary. As in the first approach, the Test Suite then&#xD;
    determines the Test that failed and selects the next Test to execute.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPFtnnEdmO6L4XMImrsA" name=" Implement Recovery Requirements " guid="_W6hPFtnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;ImplementRecovery&quot; name=&quot;ImplementRecovery&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To implement and verify that the recovery process works as required&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Depending on the level of sophistication required, it will require effort to implement and stabilize recovery&#xD;
    processing. You'll need to allow time to simulate a number of likely (and a few unlikely) failures to prove the&#xD;
    recovery processing works.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the case of automated recovery, both approaches outlined in the previous step have strengths and weaknesses. You&#xD;
    should consider carefully the cost of sophisticated automated recovery, both in terms of initial development but also&#xD;
    ongoing maintenance effort. Sometimes manual recovery is good enough.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPF9nnEdmO6L4XMImrsA" name=" Stabilize the Test Suite " guid="_W6hPF9nnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;StabilizeTestSuite&quot; name=&quot;StabilizeTestSuite&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To resolve any dependency problems both in terms of System State and Test execution sequences&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    You should take time to stabilize the Test Suite by one or more trial test executions where possible. The difficulty in&#xD;
    achieving stability increases proportionally to the complexity of the Test Suite, and where there is excessively tight&#xD;
    coupling between unrelated and and low cohesion between related Tests.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There is the possibility of errors occurring when Tests are executed together within a given Test Suite, that were not&#xD;
    encountered when the individual Tests were executed independently. These errors are often the most difficult to track&#xD;
    down and diagnose, especially when the are encountered halfway though a length automated test run. Where practical,&#xD;
    it's a good idea to rerun the Test Suite regularly as you add additional Tests. This will help you isolate a small&#xD;
    number of potential candidate Tests to be diagnosed to identify the problem.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPGNnnEdmO6L4XMImrsA" name=" Maintain Traceability Relationships " guid="_W6hPGNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Traceability&quot; name=&quot;Traceability&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To enable impact analysis and assessment reporting to be performed on the traced items&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Using the Traceability requirements outlined in the Test Plan, update the traceability relationships as necessary. Test&#xD;
    Suites might be traced to defined Test Cases or to Test Ideas. Optionally, they may be traced to Use Cases, software&#xD;
    specification elements, Implementation Model elements and to one or more measures of Test Coverage.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_W6hPGdnnEdmO6L4XMImrsA" name=" Evaluate and Verify Your Results " guid="_W6hPGdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;EvaluateResults&quot; name=&quot;EvaluateResults&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose:&amp;nbsp;&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To verify that the task has been completed appropriately and that the resulting work products are&#xD;
                acceptable&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Now that you have completed the work, it is beneficial to verify that the work was of sufficient value, and that you&#xD;
    did not simply consume vast quantities of paper. You should evaluate whether your work is of appropriate quality, and&#xD;
    that it is complete enough to be useful to those team members who will make subsequent use of it as input to their&#xD;
    work. Where possible, use the checklists provided in RUP to verify that quality and completeness are &quot;good enough&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have the people performing the downstream tasks that rely on your work as input take part in reviewing your interim&#xD;
    work. Do this while you still have time available to take action to address their concerns. You should also evaluate&#xD;
    your work against the key input work products to make sure you have represented them accurately and sufficiently. It&#xD;
    may be useful to have the author of the input work product review your work on this basis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Try to remember that that RUP is an iterative delivery process and that in many cases work products evolve over time.&#xD;
    As such, it is not usually necessary-and is often counterproductive-to fully-form a work product that will only be&#xD;
    partially used or will not be used at all in immediately subsequent work. This is because there is a high probability&#xD;
    that the situation surrounding the work product will change-and the assumptions made when the work product was created&#xD;
    proven incorrect-before the work product is used, resulting in wasted effort and costly rework. Also avoid the trap of&#xD;
    spending too many cycles on presentation to the detriment of content value. In project environments where presentation&#xD;
    has importance and economic value as a project deliverable, you might want to consider using an administrative resource&#xD;
    to perform presentation tasks.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_system_test__implementing_a_test_suite&quot;&#xD;
name=&quot;XE_system_test__implementing_a_test_suite&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The purpose of this task is to do the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Assemble collections of tests to be executed together to capture test logs of value&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitate appropriate breadth and depth of test coverage by exercising interesting combinations of tests&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
