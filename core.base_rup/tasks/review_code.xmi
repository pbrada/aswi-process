<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_2OrD8dnmEdmO6L4XMImrsA" name="review_code,{9EC0DF69-EEE1-4B41-8F48-9FB6B0DB7F72}" guid="_2OrD8dnmEdmO6L4XMImrsA" changeDate="2005-11-04T07:39:52.093-0800" version="7.1.0">
  <sections xmi:id="_VfBhcNnnEdmO6L4XMImrsA" name=" General Recommendations " guid="_VfBhcNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;GeneralRecommendations&quot; name=&quot;GeneralRecommendations&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                General recommendations for each review.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    When you are building high-quality software, reviewing the implementation is a complement to other quality mechanisms,&#xD;
    such as compiling, integrating and testing. Before you review the implementation, compile it, and use tools, such as&#xD;
    code-rule checkers, to catch as many errors as possible. Consider using tools that allow the code to be visualized.&#xD;
    Additional errors may also be detected and eliminated prior to implementation review if the code is executed using&#xD;
    run-time error detection tools.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The benefits of reviewing the implementation are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To enforce and encourage a common coding style for the project. Code reviewing is an effective way for members&#xD;
        follow the Programming Guidelines. To ensure this, it is more important to review results from all authors and&#xD;
        implementers, than to review all source code files.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To find errors that automated tests do not find. Implementation reviews catch different errors to those of testing.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To share knowledge between individuals, and to transfer knowledge from the more experienced individuals to the less&#xD;
        experienced individuals.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    There are several techniques that can be used to review the implementation. Use one of the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Inspection&lt;/b>. A formal evaluation technique in which the implementation is examined in detail. Inspections are&#xD;
        considered to be the most productive review technique, however it requires training, and preparation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Walkthrough&lt;/b>. An evaluation technique where the author of the implementation, leads one or more reviewers&#xD;
        through the implementation. The reviewers ask questions, and make comments regarding technique, style, possible&#xD;
        error, violation of coding standards, and so on.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Code reading&lt;/b>. One or two persons read the code. When the reviewers are ready, they can meet and present&#xD;
        their comments and questions. The meeting can be omitted, however, and reviewers can give their comments and&#xD;
        questions to the author in written form instead. Code reading is recommended to verify small modifications, and as&#xD;
        a &quot;sanity check.&quot;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Skill requirements for this role are similar to those for Role: &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/roles/rup_implementer_D145E819.html&quot; guid=&quot;{75501BAA-0CCE-4852-A7B2-B10CA71C002A}&quot;>Implementer&lt;/a>;&#xD;
    people playing this role are often considered experts in the programming language used for the code being reviewed. In&#xD;
    most projects, this role is staffed using senior programmers from the implementation team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See also &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.base_rup/guidances/guidelines/reviews_9FA4EDE.html&quot;&#xD;
    guid=&quot;2.981757544469536E-306&quot;>Guideline: Reviews&lt;/a>.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_VfBhcdnnEdmO6L4XMImrsA" name=" Establish Checkpoints for the Implementation " guid="_VfBhcdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Establish Checkpoints for the Implementation&quot; name=&quot;Establish Checkpoints for the Implementation&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To establish a checklist for reviewing the implementation.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
     This section gives a general checklist for reviewing the implementation, just as examples of what to look for in a&#xD;
    review. The Programming Guidelines should be the main source of information for code quality.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>General&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Does the code follow the Programming Guidelines?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the code self-documenting? Is it possible to understand the code from reading it?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Have all errors detected by code-rule checking, and / or run-time error detection tools been addressed?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;b>Commenting&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Are comments up to date?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are comments clear and correct?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the comments easy to modify, if the code is changed?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do the comments focus on explaining &lt;i>why&lt;/i>, and not &lt;i>how&lt;/i>?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are all surprises, exceptional cases, and work-around errors commented?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the purpose of each operation commented?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are other relevant facts about each operation commented?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;b>Source code&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Does each operation have a name that describe what the operation does?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do the parameters have descriptive names?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the normal path through each operation, clearly distinguishable from other exceptional paths?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the operation too long, and can it be simplified by extracting related statements into private operations?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the operation too long, and can it be simplified by reducing the number of decision points? A decision point is&#xD;
        a statement where the code can take different paths, for example, &lt;i>if&lt;/i>-, &lt;i>else&lt;/i>-, &lt;i>and&lt;/i>-,&#xD;
        &lt;i>while&lt;/i>-, and &lt;i>case&lt;/i>-statements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is nesting of loops minimized?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the variables well named?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the code straightforward, and does it avoid &quot;clever&quot; solutions?&#xD;
    &lt;/li>&#xD;
&lt;/ul></sectionDescription>
  </sections>
  <sections xmi:id="_VfBhctnnEdmO6L4XMImrsA" name=" Prepare Review Record and Document Defects " guid="_VfBhctnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Prepare Review Report and Document Defects&quot; name=&quot;Prepare Review Report and Document Defects&quot;>&lt;/a>&#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; style=&quot;border: 1px solid rgb(128,128,128)&quot;&#xD;
    bordercolorlight=&quot;#808080&quot; bordercolordark=&quot;#808080&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;5%&quot;>&#xD;
                &lt;b>Purpose&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;95%&quot;>&#xD;
                To document the review results.&lt;br />&#xD;
                 To ensure that identified defects are documented.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
     Following each review meeting, the results of the meeting must be documented in a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_review_record_CA816ECE.html&quot; guid=&quot;{4047B5B0-5FB7-4960-8A7E-451719D85DFF}&quot;>Review&#xD;
    Record&lt;/a>. In addition, defects must be documented in &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.base_rup/workproducts/rup_change_request_F2E6419.html&quot; guid=&quot;{694A7BC8-3D20-4172-BC56-6C7BD4590BA5}&quot;>Change&#xD;
    Request&lt;/a>s (and eventually assigned to someone to own and drive to resolution).&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
</org.eclipse.epf.uma:TaskDescription>
